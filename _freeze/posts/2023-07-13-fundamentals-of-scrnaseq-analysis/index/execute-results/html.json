{
  "hash": "4ffff9fdf1754dd2d164a8b3e0faf21b",
  "result": {
    "markdown": "---\ntitle: Single-cell Workshop 2021 - 01 - scRNASeq 分析基础\nauthor: Shixiang Wang\ndate: 2023-07-13\ncategories: [note,scRNA-seq,R]\ndraft: false\ndescription: ''\n\ntoc: true\n\nformat:\n  html:\n    code-fold: false\n    code-overflow: wrap\n    code-tools: false\n---\n\n\n学习资料：<https://holab-hku.github.io/Fundamental-scRNA/>\n\n## 准备\n\n### 软件包\n\n载入下面的包，如果没有就先安装下。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Seurat)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAttaching SeuratObject\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(hdf5r)\n```\n:::\n\n\n### 数据\n\n下载数据：\n\n> Data used in this material is a 10k PBMC data getting from [10x Genomics website](https://support.10xgenomics.com/single-cell-gene-expression/datasets)\n>\n> <https://github.com/holab-hku/Fundamental-scRNA/blob/master/data/10k_PBMC.h5>\n\n\n## 单细胞技术介绍\n\n### 技术流程\n\n单细胞RNA测序（scRNA-seq）包括一系列技术，以产生许多单个细胞的全基因组表达数据。\n\n![](https://encyclopedia.pub/media/item_content/202206/62bc1112b6b12biosensors-12-00450-g001.png)\n\n### 细胞分离\n\n根据技术主要可以分为两类：Droplet-based 和 Non droplet-based。\n\nDroplet-based：\n\n- 组织样品必须解离成悬浮液\n- 细胞将被单独封装成一个油包水滴\n- 高通量，低成本\n- 相关技术：Drop-seq (Macosko et al. 2015), inDrop (Klein et al. 2015), Chromium 10X (Zheng et al. 2017)\n\nNon droplet-based：\n\n- Smart-seq2 (Ramsköld et al. 2012)：用微型毛细管移液器手工细胞取样\n- CEL-seq (Hashimshony et al. 2012)：单个细胞被添加到试管中；第一个介绍了条形码和RNA聚合\n- MARS-seq (Jaitin et al. 2014)是第一个使用FACS将单细胞分离到单孔中的方法，优化版MARS-seq2 (Keren-Shaul et al. 2019)的推出成本更低，可重复性更高，井间污染更少\n\n下图显示了一些常见的单细胞分离技术（Hwang, Lee, and Bang 2018）\n\n<div style=\"background-color: white; padding: 10px;\">\n![Single Cell Isolation (modified from Hwang, Lee, and Bang 2018)](https://holab-hku.github.io/Fundamental-scRNA/figs/seq_techs.jpg)\n</div>\n\n### 条形码和唯一分子标识符（UMI）\n\n双端测序输出两个 fastq 文件，分别对应测序的5′和3′方向。使用这种测序技术，配对的第一个read总是与引物的细胞（条形码+UMI）部分一致。\n\n<div style=\"background-color: white; padding: 10px;\">\n![Biased paired-end reads (David Tse et.al)](https://holab-hku.github.io/Fundamental-scRNA/figs/biasedreads.png)\n</div>\n\n根据获得的细胞条形码、UMI 和 cDNA 的 reads，我们可以估计转录物的丰度。这允许 mapping 算法区分哪些序列是条形码，哪些是转录序列。因此，在确定细胞条形码和 UMI 条形码序列的长度和位置时，识别用于测序的文库制备化学方法非常重要。\n\n为了获得 UMIs 的计数，我们可以首先通过细胞条形码对 reads 进行分组，然后对齐 cDNA reads 并使用 UMIs 对每个细胞每个基因的独特分子进行计数。\n\n<div style=\"background-color: white; padding: 10px;\">\n![Grouping barcodes to assign reads to cells (modified from David Tse et.al)](https://holab-hku.github.io/Fundamental-scRNA/figs/biasedreads2.png)\n</div>\n\n对细胞条形码和 UMIs 的分析包括在校准过程中，我们将在下一节中介绍更多内容。\n\n### 广泛应用的scRNA-seq技术汇总\n\n| Methods          | Transcript coverage | UMI possibility | Strand specific | References                                                   |\n| ---------------- | ------------------- | --------------- | --------------- | ------------------------------------------------------------ |\n| Tang method      | Nearly full-length  | No              | No              | Tang et al. ([2009](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-tang2009mrna)) |\n| Quartz-Seq       | Full-length         | No              | No              | Sasagawa et al. ([2013](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-sasagawa2013quartz)) |\n| SUPeR-seq        | Full-length         | No              | No              | X. Fan et al. ([2015](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-fan2015single)) |\n| Smart-seq        | Full-length         | No              | No              | Ramsköld et al. ([2012](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-ramskold2012full)) |\n| Smart-seq2       | Full-length         | No              | No              | Picelli et al. ([2013](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-picelli2013smart)) |\n| MATQ-seq         | Full-length         | Yes             | Yes             | Sheng et al. ([2017](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-sheng2017effective)) |\n| STRT-seq STRT/C1 | 5′-only             | Yes             | Yes             | Islam et al. ([2011](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-islam2011characterization)) |\n| CEL-seq          | 3′-only             | Yes             | Yes             | Hashimshony et al. ([2012](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-hashimshony2012cel)) |\n| CEL-seq2         | 3′-only             | Yes             | Yes             | Hashimshony et al. ([2016](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-hashimshony2016cel)) |\n| MARS-seq         | 3′-only             | Yes             | Yes             | Jaitin et al. ([2014](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-jaitin2014massively)) |\n| CytoSeq          | 3′-only             | Yes             | Yes             | H. C. Fan, Fu, and Fodor ([2015](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-fan2015combinatorial)) |\n| Drop-seq         | 3′-only             | Yes             | Yes             | Macosko et al. ([2015](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-macosko2015highly)) |\n| InDrop           | 3′-only             | Yes             | Yes             | Klein et al. ([2015](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-klein2015droplet)) |\n| Chromium         | 3′-only             | Yes             | Yes             | Zheng et al. ([2017](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-zheng2017massively)) |\n| SPLiT-seq        | 3′-only             | Yes             | Yes             | Rosenberg et al. ([2018](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-rosenberg2018single)) |\n| sci-RNA-seq      | 3′-only             | Yes             | Yes             | Cao et al. ([2017](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-cao2017comprehensive)) |\n| Seq-Well         | 3′-only             | Yes             | Yes             | Gierahn et al. ([2017](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-gierahn2017seq)) |\n| DroNC-seq        | 3′-only             | Yes             | Yes             | Habib et al. ([2017](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-habib2017massively)) |\n| Quartz-Seq2      | 3′-only             | Yes             | Yes             | Sasagawa et al. ([2018](https://holab-hku.github.io/Fundamental-scRNA/background.html#ref-sasagawa2018quartz)) |\n\n\n## 预处理和质量控制\n\n### FASTQ 文件\n\n原始 RNA 测序数据可能在 [FASTQ](https://sapac.support.illumina.com/bulletins/2016/04/fastq-files-explained.html) 文件中。它是一种基于文本的格式，用于存储由单字母代码表示的读序列。\nFASTQ 文件中的序列以`@`符号开头的readID开始，然后是序列数据行，一个简单的加号`+`分隔符和碱基质量分数。\n\n它以以下格式表示:\n\n```txt\n@ReadID\nREAD SEQUENCE\n+\nSEQUENCING QUALITY SCORES\n```\n\n一般来说，fastq 文件是使用质量控制工具（如 [FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/)）进行预处理的。这将输出一系列评估序列 reads 质量的指标。\n\n### Cell Ranger\n\n[Cell Ranger](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/what-is-cell-ranger) 是一组分析管道，用于处理 Chromium 单细胞数据以对齐 reads，生成特征条形码矩阵，执行聚类和其他二次分析等等。\n它帮助我们生成 RNA reads 计数矩阵，我们将在学习中使用。\n\n一些概念：\n\n- GEM 孔（以前称为 GEM 组）：来自单个 10x Chromium™ 芯片通道的分隔单元（凝胶颗粒悬浮液）集合。可以从一个 GEM 孔中获得一个或多个测序文库。\n- 文库（或测序文库）：从单个 GEM 孔中制备的带有 10x 条形码的测序文库。借助特征条形码或 V(D)J 分析，可以从同一个 GEM 孔中创建多个文库。文库类型可能包括基因表达、抗体捕获、CRISPR 引导捕获、TCR 富集等。\n- 测序 Run（或 Flowcell）: A flowcell containing data from one sequencing instrument run.（这个从英文直译上很难理解，通俗的说就是一次上机测序得到的数据流）\n\n#### 通用流程\n\n从 Chromium 10X 管道获得的单细胞数据可以使用 cellranger 通过以下工作流程进行处理。\n\n<div style=\"background-color: white; padding: 10px;\">\n![Cellranger Workflow (taken from the cellranger website)](https://holab-hku.github.io/Fundamental-scRNA/figs/cellranger_workflow.png)\n</div>\n\n#### 输出文件\n\n下面是我们将从 cellranger 获得的输出文件夹。outs 文件夹包含最终的管道输出文件，其中包括我们需要用于下游分析的内容。\n\n![Overview of the folder generate from cellranger](https://holab-hku.github.io/Fundamental-scRNA/figs/cellranger_output.png)\n\n![Overview of the outs folder](https://holab-hku.github.io/Fundamental-scRNA/figs/cellranger_output2.png)\n\n以上是我们可以在outs文件夹中找到的内容。它包含了一些测序数据的总结信息，注释的读取序列，以及我们通常工作的基因表达矩阵。下面是我们想看的一些重要的输出文件。\n\n- [Matrices](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/matrices)\n- [Web Summary .html](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/summary)\n- [Secondary Analysis CSV](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/analysis)\n- [BAM](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/bam)\n- [Molecule Info (h5)](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/molecule_info)\n- [Loupe File (.cloupe)](https://support.10xgenomics.com/single-cell-gene-expression/software/visualization/latest/what-is-loupe-cell-browser)\n\n**矩阵**\n\n测序时，Chromium 10X 不仅对转录组进行测序，还对任何可能的分子进行测序。这就导致了背景条形码的存在。细胞相关条形码是cellranger 认为标记来自真实细胞的转录组而不是背景的条形码。\n\n对于不同版本的cellranger，使用不同的算法来检测细胞相关条形码。一般的想法是，细胞的条形码应该比背景条形码有更多的转录本计数。更多信息请访问：https://kb.10xgenomics.com/hc/en-us/articles/115003480523-How-are-barcodes-classified-as-cell-associated-。\n\ncellranger管道输出两种类型的特征条形码矩阵：\n\n- 未经过滤的特征条形码矩阵存储在raw_feature_bc_matrix（1-1）文件夹下。它包含了来自已知良好条形码序列固定列表的每个条形码，其中至少有一个读取，这意味着它包括背景和与细胞相关的条形码。\n- 经过过滤的特征条形码矩阵存储在filtered_feature_bc_matrix（1-2）文件夹下。它只包括已检测到的与细胞相关的条形码。\n\nraw_feature_bc_matrix和filtered_feature_bc_matrix文件夹中都包含三个文件。\n\n- matrix.mtx.gz文件以稀疏矩阵的形式存储 reads 计数，其中每一行表示scRNA-seq数据中的一个基因，每一列表示一个细胞。行索引的信息存储在features.tsv.gz文件中，而列索引的信息存储在barcodes.tsv.gz文件中。\n- features.tsv.gz文件对应于行索引。在scRNA-seq数据中，\"features\"实际上指的是基因。features.tsv.gz文件包含三列：feature ID：参考GTF文件的注释字段中的gene_id，表示特征的ID。\nname：参考GTF文件的注释字段中的gene_name，如果参考GTF中没有gene_name字段，则基因名称等同于基因ID。\ntype of feature：描述特征类型，可以是Gene Expression、Antibody Capture、CRISPR或CUSTOM之一。对于scRNA-seq数据，它将是Gene Expression（基因表达）。\n- barcodes.tsv.gz对应于列索引，它包含了每个列的条形码。有关条形码序列格式的更多详细信息，请参考[条形码BAM部分](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/bam)。\n\n**Web Summary .html**\n\n一个概要的HTML文件包含了摘要指标和自动化二次分析结果。如果在流程运行期间检测到问题，将在此页面上显示警报。\n\n该HTML文件包括两个部分，SUMMARY（摘要）和ANALYSIS（分析）。您还可以点击每个仪表板顶部的“?”以获取有关每个指标的更多信息。\n\n1. SUMMARY（摘要）指标描述了测序质量和检测到的细胞的各种特征。在页面顶部附近醒目地显示了检测到的细胞数量、每个细胞的平均reads数以及每个细胞检测到的基因的中位数。\n\n![Cells dashboard (modified from the cellranger website)](https://holab-hku.github.io/Fundamental-scRNA/figs/cells_summary.png)\n\n2. 在“Cells”仪表板下的“Barcode Rank Plot”显示了条形码计数的分布以及被推断与细胞相关的条形码。y轴表示每个条形码映射到的UMI计数，x轴表示低于该值的条形码数量。陡峭的下降表示细胞关联的条形码与与空分区相关的条形码之间有良好的分离。条形码可以通过其UMI计数或其RNA配置文件确定为与细胞相关，因此图表的某些区域可能同时包含细胞关联和背景关联的条形码。图表的颜色表示与细胞关联的条形码的局部密度。\n\n![Sequencing and Mapping dashboards (modified from the cellranger website)](https://holab-hku.github.io/Fundamental-scRNA/figs/seq_map.png)\n\n其他用于评估的指标：\n\n- `Estimated Number of Cells`: 500-10,000\n- `Mean Reads per Cell`: 20,000 reads/cell minimum recommended reads per cell around 10,000\n- `Valid barcodes`: greater than 75%\n- `Q30 bases in RNA read`: ideally greater than 65%\n- `Reads mapped confidently to transcriptome`: ideally greater than 30%\n- `Reads mapped antisense to gene`: ideally smaller than 10%\n\n3. 分析（ANALYSIS）指标包括以下自动化的二次分析：\n\n- 降维分析：将细胞投影到二维空间（t-SNE），以展示它们之间的关系。\n- 自动聚类分析：将具有相似表达特征的细胞分组在一起，形成聚类。\n- 差异表达基因列表：列出在所选聚类之间表达差异显著的基因。\n- 显示测序深度降低对观察到的文库复杂性的影响的图表。\n- 显示测序深度降低对每个细胞检测到的平均基因数的影响的图表。\n\n**BAM**\n\nBAM文件以二进制压缩格式保存了关于 mapping reads 的信息。它由可选的头部部分和对齐部分组成。如果存在头部部分，它将通过第一列中的`@`与对齐部分区分，并位于对齐部分之前。\n\n当解压缩成SAM文件时，信息以制表符分隔的表格形式存储，其中包含一些标准列和由 Cell Ranger 软件生成的特定列。Cell Ranger特定的列包含与 BAM 条形码、BAM 对齐和特征条形码相关的信息。标准列对应以下内容：\n\n```\nQNAME : read name (generally will include UMI barcode if applicable)\nFLAG : number tag indicating the “type” of alignment, link to explanation of all possible “types”\nRNAME : reference sequence name (i.e. chromosome read is mapped to).\nPOS : leftmost mapping position\nMAPQ : Mapping quality\nCIGAR : string indicating the matching/mismatching parts of the read (may include soft-clipping).\nRNEXT : reference name of the mate/next read\nPNEXT : POS for mate/next read\nTLEN : Template length (length of reference region the read is mapped to)\nSEQ : read sequence\nQUAL : read quality\n```\n\n可以使用 SAMtools 查看 BAM 文件：\n\n```\nsamtools view output.bam\n```\n\n为了进行基于 RNA 速率的轨迹分析，需要 bam 文件。\n\n**分子信息（h5）**\n\n它是一个 HDF5 文件，包含有效条形码和有效 UMI 的所有分子的每分子信息，并以高置信度分配给基因或特征条形码。该 HDF5 文件包含与观察到的分子相对应的数据，以及有关所使用的库和特征集的数据。这个文件的结构是：\n\n![HDF5 File Hierarchy(taken from the cellranger website)](https://holab-hku.github.io/Fundamental-scRNA/figs/hdf5.png)\n\n\n**二级分析 CSV 文件**\n\n包含自动辅助分析结果的几个 CSV 文件。它包含有关降维、t-SNE、UMAP、聚类和差分表达的信息。它也通过`Web Summary.html`文件在ANALYSIS度量中可视化。\n\n**Loupe 文件 (.cloupe)**\n\nLoupe Browser 是一款桌面应用程序，提供与10x Genomics解决方案的数据进行交互式可视化分析的功能。它可以帮助寻找感兴趣的细胞、发现重要基因、识别细胞类型、探索细胞亚结构、研究细胞亚型、集成基因表达和V(D)J分析，并共享结果。\n\n通过 Loupe Browser 可以查看 Loupe 文件，该文件包含以下信息：\n\n- 样本中细胞的基因表达信息。\n- 细胞的各种基于基因表达的聚类信息，包括t-SNE和UMAP投影以及差异基因表达情况。\n- 来自转录组参考的基因注释信息。\n\n\n### STARsolo\n\nSTARsolo（Kaminow，Yunusov和Dobin 2021）是一个专为液滴式单细胞RNA测序数据（例如10X Genomics Chromium系统）设计的分析工具，直接内嵌在STAR代码中。STARsolo的输入是一个FASTQ文件，它可以以与Cell Ranger几乎相同的格式输出基因计数，但速度约快10倍。\n\nSTARsolo 程序输出大量反映 reads 比对过程细节的文件。在这里，我们只讨论其中一些关键文件。\n\n![STARsolo Output](https://holab-hku.github.io/Fundamental-scRNA/figs/starsolo.png)\n\n- BAM文件包含有关比对 reads 的信息，与通过Cell Ranger生成的BAM文件非常相似。\n- 比对摘要文件Features.stats和Summary.csv包含有关基本比对细节的信息。这可以作为对比对过程进行简单初步质量控制检查的便捷工具。\n- 特征矩阵文件matrix.mtx包含每个个体细胞中映射的基因计数信息。列名对应于每个个体细胞的条形码，行名对应于所有注释的基因。由于该数据的规模较大，它以稀疏矩阵的形式存储。\n- 辅助文件 barcodes.tsv 和 features.tsv 提供了下游分析所需的额外元数据。这些文件连同矩阵文件在功能上扮演着与Cell Ranger输出中的 Matrices 部分相同的角色，并且在金标准的 scRNA-seq 数据分析软件 seurat 中进行分析时是必需的。\n\n### Doublets\n\n双细胞是指虽然设计为由一个细胞生成，但却是由两个细胞生成的人工文库。通常这是由于细胞分选或捕获过程中的错误引起的。\n\n可以使用几种实验策略来去除双细胞：\n\n- 基于不同供体个体之间的自然遗传变异（Kang等人，2018）。\n- 使用与不同寡核苷酸结合的抗体标记一组细胞（例如，来自一个样本的所有细胞）。在混合后，观察到具有不同寡核苷酸的文库被视为双细胞并移除（Bach等人，2017）。\n- 仅基于表达谱的计算方法（如模拟）推断双细胞并进行去除。\n\n\n## 使用 Seurat 进行分析\n\n本节的内容是根据[Seurat - Guided Clustering Tutorial](https://satijalab.org/seurat/articles/pbmc3k_tutorial.html)进行了一些修改和适应。我们使用的数据是从10x Genomics网站获取的10k PBMC数据。\n\n我们将学习如何读取10X测序数据并将其转换为Seurat对象，进行质控和选择用于进一步分析的细胞，对数据进行归一化处理，识别高可变特征（特征选择），对数据进行缩放，进行线性降维和可视化分析。\n\n### Seurat 对象\n\nSeurat对象充当一个容器，其中包含单个单细胞数据集的数据（如计数矩阵）和分析（如PCA或聚类结果）。在使用 Seurat 分析scRNA-seq数据之前，我们可以先从[这里](https://github.com/satijalab/seurat/wiki/Seurat#object-information)对Seurat对象有一些基本的了解。\n\n### 设置Seurat对象\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(Seurat)\nlibrary(patchwork)\nlibrary(ggplot2)\n```\n:::\n\n\n我们从读入数据开始。`Read10X_h5`从10X CellRanger hdf5文件读取计数矩阵，返回唯一的分子识别（UMI）计数矩阵。该矩阵中的值表示每个特征（即基因；行）在每个细胞（列）中检测到的表达量。它可用于读取scATAC-seq和scRNA-seq矩阵。\n\n接下来我们使用计数矩阵来创建一个Seurat对象。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the PBMC dataset\npbmc.data <- Read10X_h5(\"/Users/wsx/Library/CloudStorage/OneDrive-shanghaitech.edu.cn/Public/data/10k_PBMC.h5\")\n# Initialize the Seurat object with the raw (non-normalized data).\npbmc <- CreateSeuratObject(counts = pbmc.data, project = \"pbmc10k\", min.cells = 3, min.features = 200)\npbmc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n22432 features across 10813 samples within 1 assay \nActive assay: RNA (22432 features, 0 variable features)\n```\n:::\n:::\n\n\n如果我们想直接使用 cellranger 管道从 10X 读取数据，我们可以使用 `Read10X()`。\n\n### 标准预处理流程\n\n以下步骤包含了 Seurat 中 scRNA-seq 数据的标准预处理工作流程。它们基于我们将从 Cell Ranger 或 STARsolo 输出中获得的 RNA reads 计数矩阵。标准的预处理工作流程代表了基于 QC 指标的细胞选择和过滤，数据归一化和缩放，以及高度可变特征的检测。\n\n#### QC 和细胞过滤\n\nSeurat 允许你根据任何用户定义的标准轻松探索 QC 指标和过滤细胞。社区常用的一些质量控制指标（Ilicic et al. 2016）包括：\n\n- 在每个细胞中检测到的独特基因的数量\n  - 低质量的细胞或空液滴通常只有很少的基因\n  - 细胞双胞胎或多胞胎可能表现出异常高的基因计数\n  - 同样，细胞内检测到的分子总数（与独特的基因密切相关）\n- reads 占到线粒体基因组的百分比\n  - 低质量/垂死细胞通常表现出广泛的线粒体污染\n  - 我们使用`PercentageFeatureSet()`函数计算线粒体 QC 指标，该函数计算源自一组特征的计数百分比\n  - 我们用 MT 开头的所有基因集合作为线粒体基因集合\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# The [[ operator can add columns to object metadata. This is a great place to stash QC stats\npbmc[[\"percent.mt\"]] <- PercentageFeatureSet(pbmc, pattern = \"^MT-\")\n```\n:::\n\n\n在 `CreateSeuratObject()` 过程中自动计算唯一基因和总分子的数量。它们存储在对象元数据中。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Show QC metrics for the first 5 cells in the control group\nhead(pbmc@meta.data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   orig.ident nCount_RNA nFeature_RNA percent.mt\nAAACCCAGTATATGGA-1    pbmc10k        860          350 44.1860465\nAAACCCAGTATCGTAC-1    pbmc10k       1548          729  0.4521964\nAAACCCAGTCGGTGAA-1    pbmc10k       6387         1827 10.4117739\nAAACCCAGTTAGAAAC-1    pbmc10k      16664         3744  5.2808449\nAAACCCAGTTATCTTC-1    pbmc10k       3352         1464 13.8424821\n```\n:::\n:::\n\n\n我们可以可视化 `nFeature_RNA`, `nCount_RNA` 和 `percent.mt` 作为 QC 指标。\n\n与 Cell Ranger 输出一样，以下结果中的 feature 表示基因。\nnFeature_RNA 是每个细胞中检测到的基因数量。\nnCount_RNA 是细胞内检测到的分子总数。\n下图中的每个点代表一个细胞。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize QC metrics as a violin plot\nVlnPlot(pbmc, features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\"), \n        ncol = 3, pt.size = 0.0001)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n我们接着使用点图来表示 3 者之间的关系。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# FeatureScatter is typically used to visualize feature-feature relationships, but can be used\n# for anything calculated by the object, i.e. columns in object metadata, PC scores etc.\nplot1 <- FeatureScatter(pbmc, feature1 = \"nCount_RNA\", feature2 = \"percent.mt\") + \n  theme(legend.position=\"none\")\nplot2 <- FeatureScatter(pbmc, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") + \n  theme(legend.position=\"none\")\nplot1 + plot2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n在这里，我们过滤掉具有独特特征计数（基因）超过5000或少于200的细胞。我们也过滤掉线粒体数量大于15%的细胞。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 15)\n```\n:::\n\n\n然后再一次用提琴图查看过滤后的质量图：\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize QC metrics as a violin plot\nVlnPlot(pbmc, features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\"), \n        ncol = 3, pt.size = 0.0001)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot1 <- FeatureScatter(pbmc, feature1 = \"nCount_RNA\", feature2 = \"percent.mt\") + \n  theme(legend.position=\"none\")\nplot2 <- FeatureScatter(pbmc, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") + \n  theme(legend.position=\"none\")\nplot1 + plot2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n\n#### 标准化数据\n\n从数据集中删除不需要的细胞后，下一步是对数据进行标准化（规范化）。默认情况下，我们使用全局缩放归一化方法“LogNormalize”，该方法通过总表达对每个细胞的特征表达式测量值进行归一化，将其乘以一个比例因子（默认为10,000），并对结果进行对数变换。标准化值存储在`pbmc[[\"RNA\"]]@data`中。\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbmc <- NormalizeData(pbmc, \n          normalization.method = \"LogNormalize\", \n          scale.factor = 10000, verbose = FALSE)\n```\n:::\n\n\n在这里，我们从基因表达矩阵中采样 10,000 个reads计数，分别可视化标准化前后的基因表达分布（不包括零）。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set seed and put two plots in one figure\nset.seed(123)\npar(mfrow=c(1,2))\n# original expression distribution\nraw_geneExp = as.vector(pbmc[['RNA']]@counts) %>% sample(10000)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in .sparse2v(x): sparse->dense coercion: allocating vector of size 1.6\nGiB\n```\n:::\n\n```{.r .cell-code}\nraw_geneExp = raw_geneExp[raw_geneExp != 0]\nhist(raw_geneExp)\n# expression distribution after normalization\nlogNorm_geneExp = as.vector(pbmc[['RNA']]@data) %>% sample(10000)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in .sparse2v(x): sparse->dense coercion: allocating vector of size 1.6\nGiB\n```\n:::\n\n```{.r .cell-code}\nlogNorm_geneExp = logNorm_geneExp[logNorm_geneExp != 0]\nhist(logNorm_geneExp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### 识别高度可变的特征（特征选择）\n\n接下来，我们计算数据集中表现出高细胞间差异的特征子集（即，它们在一些细胞中高表达，而在其他细胞中低表达）。研究表明(Brennecke et al. 2013)在下游分析中关注这些基因有助于突出单细胞数据集中的生物信号。\n\n\nSeurat中的过程详细描述在文献 Stuart et al. 2019 中，`FindVariableFeatures()`函数中实现直接建模单细胞数据中固有的均值-方差关系来改进以前的版本。默认情况下，Seurat每个数据集返回2000个特征，这些特征将用于下游分析，如PCA。\n\n\n::: {.cell}\n\n```{.r .cell-code}\npbmc <- FindVariableFeatures(pbmc, selection.method = \"vst\", nfeatures = 2000, verbose = FALSE)\n\n# Identify the 10 most highly variable genes\ntop10 <- head(VariableFeatures(pbmc), 10)\n\n# plot variable features with and without labels\nplot1 <- VariableFeaturePlot(pbmc) + \n  theme(legend.position=\"top\")\nplot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE) + \n  theme(legend.position=\"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWhen using repel, set xnudge and ynudge to 0 for optimal results\n```\n:::\n\n```{.r .cell-code}\nplot1 + plot2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n#### 缩放数据\n\n接下来，我们应用线性变换(“缩放”)，这是在PCA等降维技术之前的标准预处理步骤。函数`ScaleData()`：\n\n- 移动每个基因的表达，使细胞间的平均表达为 0。\n- 缩放每个基因的表达，使细胞间的方差为 1。这一步在下游分析中具有同等的权重，因此高表达基因不会占主导地位。\n- 结果存储在 `pbmc[[\"RNA\"]]@scale.data`。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall.genes <- rownames(pbmc)\npbmc <- ScaleData(pbmc, features = all.genes, verbose = FALSE)\n```\n:::\n\n\n在使用上述命令时，我们使用所有基因来缩放数据。缩放是 Seurat 工作流程中的重要步骤，但仅限于将用作 PCA 输入的基因。因此，`ScaleData()`中的默认仅对先前确定的可变特征（默认值为2000）执行缩放。这将使这一步更快。\n\n在这种情况下，我们的PCA和聚类结果将不受影响。然而，Seurat 热图（用`DoHeatmap()`生成，如下图所示）需要对热图中的基因进行缩放，以确保高表达的基因不会在热图中占主导地位。我们在本教程中缩放了所有基因。\n\n`ScaleData()`函数还允许我们从单个单细胞数据集中删除不需要的变异源。例如，我们可以通过回归移除细胞周期阶段或线粒体污染相关的异质性。这个特性可以通过指定`vars.to.regress`来实现。即：\n\n```\n# skip here\npbmc <- ScaleData(pbmc, vars.to.regress = \"percent.mt\")\n```\n\n但是，特别是对于想要使用此功能的高级用户，Seurat 建议使用他们新的标准化工作流 `SCTransform()`。该方法在 Seurat 论文(Hafemeister and Satija 2019)中进行了描述，并有一个[单独的技术文档](https://satijalab.org/seurat/articles/sctransform_vignette.html)。与`ScaleData()` 一样，函数`SCTransform()`也包含一个`vars.to.regress`参数。\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}