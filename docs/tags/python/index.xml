<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on ShixiangWang
(王诗翔)</title>
    <link>/tags/python/</link>
    <description>Recent content in Python on ShixiangWang
(王诗翔)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>torch入门：使用预训练模型预测图像分类</title>
      <link>/blog/learn-torch-predict-image-with-pretrained-model/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/learn-torch-predict-image-with-pretrained-model/</guid>
      <description>代码来源图书 deep-learning-with-pytorch。
from torchvision import models import torch dir(models) resnet = models.resnet101(pretrained=True) from torchvision import transforms preprocess = transforms.Compose([ transforms.Resize(256), transforms.CenterCrop(224), transforms.ToTensor(), transforms.Normalize( mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225] )]) from PIL import Image img = Image.open(&amp;#34;../data/p1ch2/bobby.jpg&amp;#34;) img_t = preprocess(img) batch_t = torch.unsqueeze(img_t, 0) resnet.eval() out = resnet(batch_t) out with open(&amp;#39;../data/p1ch2/imagenet_classes.txt&amp;#39;) as f: labels = [line.strip() for line in f.readlines()] _, index = torch.max(out, 1) percentage = torch.nn.functional.softmax(out, dim=1)[0] * 100 # 转换为概率 labels[index[0]], percentage[index[0]].</description>
    </item>
    
    <item>
      <title>解决conda报错：Module _sysconfigdata_x86_64_conda_linux_gnu not found</title>
      <link>/blog/conda-error-sysconfigdata-not-found/</link>
      <pubDate>Tue, 14 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/conda-error-sysconfigdata-not-found/</guid>
      <description>最新可能是受conda update conda的影响，发现使用conda涉及Python的操作时一直出现问题， 报错：
ModuleNotFoundError: No module named &amp;#39;_sysconfigdata_x86_64_conda_linux_gnu&amp;#39; 例如：
$ pip list Traceback (most recent call last): File &amp;#34;~/miniconda3/bin/pip&amp;#34;, line 7, in &amp;lt;module&amp;gt; from pip._internal.cli.main import main File &amp;#34;~/miniconda3/lib/python3.9/site-packages/pip/_internal/cli/main.py&amp;#34;, line 9, in &amp;lt;module&amp;gt; from pip._internal.cli.autocompletion import autocomplete File &amp;#34;~/miniconda3/lib/python3.9/site-packages/pip/_internal/cli/autocompletion.py&amp;#34;, line 10, in &amp;lt;module&amp;gt; from pip._internal.cli.main_parser import create_main_parser File &amp;#34;~/miniconda3/lib/python3.9/site-packages/pip/_internal/cli/main_parser.py&amp;#34;, line 8, in &amp;lt;module&amp;gt; from pip._internal.cli import cmdoptions File &amp;#34;~/miniconda3/lib/python3.9/site-packages/pip/_internal/cli/cmdoptions.py&amp;#34;, line 23, in &amp;lt;module&amp;gt; from pip._internal.cli.parser import ConfigOptionParser File &amp;#34;~/miniconda3/lib/python3.9/site-packages/pip/_internal/cli/parser.py&amp;#34;, line 12, in &amp;lt;module&amp;gt; from pip.</description>
    </item>
    
    <item>
      <title>在VSCode中使用ipython执行代码</title>
      <link>/blog/use-ipython-exe-code-in-vscode/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/use-ipython-exe-code-in-vscode/</guid>
      <description>参考Stack Overflow这篇回答进行配置，将下面的内容加入settings.json.
&amp;#34;python.terminal.launchArgs&amp;#34;: [ &amp;#34;-m&amp;#34;, &amp;#34;IPython&amp;#34;, &amp;#34;--no-autoindent&amp;#34;, ], Python的数据科学社区都将编辑的重心放到了Jupyter notebook上，忽视了对.py文本本身的支持。 这个事情不知道是好是坏，但对于我这个R使用比较严重的人来说使用起来是不舒服的。 Jupyter的记录格式太笨重了，如果只是单独完成分析任务，代码加注释完全够用了。 R里面有RMarkdown格式，相比更加轻松。更重要的是，我在GitHub上2年前提的需求说 VSCode中Python文件不支持按块执行，现在也没有实现。只能找到上面的办法缓解这种不适。
我之前的帖子在：https://github.com/microsoft/vscode-python/issues/8851
我在issue中也看到了一些类似的提问和讨论，但皆不了了之。
其实还有一个痛点我没说，在执行完一句代码后，VSCode插件不会自动向下移动光标。
整个源代码编辑交互式分析的体验Python还没有编辑器能比过RStudio。</description>
    </item>
    
    <item>
      <title>:package: loon</title>
      <link>/project/loon/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/project/loon/</guid>
      <description> Project repo: https://github.com/ShixiangWang/loon  </description>
    </item>
    
  </channel>
</rss>
