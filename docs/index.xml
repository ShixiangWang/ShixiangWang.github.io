<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Reasoning</title>
<link>https://shixiangwang.github.io/index.html</link>
<atom:link href="https://shixiangwang.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Reasoning is a blog dedicated to exploring the intersection of data science, bioinformatics, and personal insights.</description>
<generator>quarto-1.3.361</generator>
<lastBuildDate>Tue, 19 Mar 2024 16:00:00 GMT</lastBuildDate>
<item>
  <title>R 设置编译选项</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-03-20-r-makevars-compiler-setting/index.html</link>
  <description><![CDATA[ 




<p>在 R 中，特别是 CentOS Linux 进行包安装和编译时，需要使用比较新的 C/C++ 编译器，在 <code>~/.R/Makevars</code> 中作如下设置。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CC</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/gcc <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++14</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX17</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++17</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span></code></pre></div>
<blockquote class="blockquote">
<p>一些情况下会加上 <code>-fopenmp</code> 选项。</p>
</blockquote>
<p>本文对之前所做记录 <a href="https://mp.weixin.qq.com/s/BoMEGabgWvjfETnIPPxJVA">CentOS/Redhat R包使用新的gcc编译【更新】</a> 的补全。</p>



 ]]></description>
  <category>Linux</category>
  <category>R</category>
  <guid>https://shixiangwang.github.io/posts/2024-03-20-r-makevars-compiler-setting/index.html</guid>
  <pubDate>Tue, 19 Mar 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>snakemake 教程精要</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-28-snakemake-basics/index.html</link>
  <description><![CDATA[ 




<p>这里把 <a href="https://snakemake.readthedocs.io/en/stable/tutorial/tutorial.html">Snakemake 教程</a> 的精要记录了下来。</p>
<section id="基础" class="level2">
<h2 class="anchored" data-anchor-id="基础">基础</h2>
<p><code>Snakefile</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remember that Snakemake works backwards from requested output, and not from available input.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check: snakemake -np mapped_reads/A.bam</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run: snakemake --cores 1 mapped_reads/A.bam</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np mapped_reads/{A,B}.bam</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np sorted_reads/B.bam</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --dag sorted_reads/{A,B}.bam.bai | dot -Tsvg &gt; dag.svg</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --dag calls/all.vcf | dot -Tsvg &gt; dag.svg</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">SAMPLES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>]</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb1-14">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb1-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb1-17"></span>
<span id="cb1-18">rule bwa_map:</span>
<span id="cb1-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb1-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/samples/{sample}.fastq"</span></span>
<span id="cb1-22">    output:</span>
<span id="cb1-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb1-24">    shell:</span>
<span id="cb1-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb1-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bwa mem {input} | samtools view -Sb - &gt; {output}"</span></span>
<span id="cb1-27"></span>
<span id="cb1-28">rule samtools_sort:</span>
<span id="cb1-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb1-31">    output:</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb1-33">    shell:</span>
<span id="cb1-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb1-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb1-36"></span>
<span id="cb1-37">rule samtools_index:</span>
<span id="cb1-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb1-40">    output:</span>
<span id="cb1-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb1-42">    shell:</span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb1-44"></span>
<span id="cb1-45">rule bcftools_call:</span>
<span id="cb1-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-47">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb1-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb1-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb1-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb1-51">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SAMPLES),</span>
<span id="cb1-52">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SAMPLES)</span>
<span id="cb1-53">    output:</span>
<span id="cb1-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb1-55">    shell:</span>
<span id="cb1-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv - &gt; {output}"</span></span>
<span id="cb1-58"></span>
<span id="cb1-59">rule plot_quals:</span>
<span id="cb1-60">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb1-62">    output:</span>
<span id="cb1-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb1-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb1-65">    script:</span>
<span id="cb1-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span></code></pre></div>
<p><code>scripts/plot-quals.py</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Similar in R: snakemake@input[[1]], snakemake@input[["myfile"]]</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all properties of the rule like input, output, wildcards, etc.</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># are available as attributes of a global snakemake object.</span></span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb2-6">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Agg"</span>)</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pysam <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VariantFile</span>
<span id="cb2-9"></span>
<span id="cb2-10">quals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [record.qual <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> record <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> VariantFile(snakemake.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])]</span>
<span id="cb2-11">plt.hist(quals)</span>
<span id="cb2-12"></span>
<span id="cb2-13">plt.savefig(snakemake.output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
</section>
<section id="advanced" class="level2">
<h2 class="anchored" data-anchor-id="advanced">Advanced</h2>
<p><code>Snakefile</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remember that Snakemake works backwards from requested output, and not from available input.</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --cores 10 # The maximum cores used</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                      # If --cores is given without a number, all available cores are used.</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With the flag --forceall you can enforce a complete re-execution of the workflow</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -n --forcerun $(snakemake --list-input-changes)</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -n --forcerun bcftools_call</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np --summary</span></span>
<span id="cb3-12"></span>
<span id="cb3-13">configfile: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config.yaml"</span></span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb3-16">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb3-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#step-3-input-functions</span></span>
<span id="cb3-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_bwa_map_input_fastqs(wildcards):</span>
<span id="cb3-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>][wildcards.sample]</span>
<span id="cb3-23"></span>
<span id="cb3-24">rule bwa_map:</span>
<span id="cb3-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb3-27">        get_bwa_map_input_fastqs</span>
<span id="cb3-28">    output:</span>
<span id="cb3-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mark output files as temporary. </span></span>
<span id="cb3-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake will delete the marked files for you, </span></span>
<span id="cb3-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># once all the consuming jobs (that need it as input) have been executed</span></span>
<span id="cb3-32">        temp(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mapped_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb3-33">    params:</span>
<span id="cb3-34">        rg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"@RG\tID:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">\tSM:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to store all log files in a subdirectory logs/, </span></span>
<span id="cb3-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prefixed by the rule or tool name.</span></span>
<span id="cb3-37">    log:</span>
<span id="cb3-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bwa_mem/{sample}.log"</span></span>
<span id="cb3-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake provides a resources directive that can be used to specify arbitrary resources,</span></span>
<span id="cb3-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., memory usage or auxiliary computing devices like GPUs. </span></span>
<span id="cb3-41">    threads: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb3-42">    shell:</span>
<span id="cb3-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb3-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># both bwa and samtools and pipe it into the file referred to by {log}</span></span>
<span id="cb3-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span>
<span id="cb3-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb3-47"></span>
<span id="cb3-48">rule samtools_sort:</span>
<span id="cb3-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb3-51">    output:</span>
<span id="cb3-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># protect the final BAM file from accidental deletion or modification</span></span>
<span id="cb3-53">        protected(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb3-54">    shell:</span>
<span id="cb3-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb3-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb3-57"></span>
<span id="cb3-58">rule samtools_index:</span>
<span id="cb3-59">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb3-61">    output:</span>
<span id="cb3-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb3-63">    shell:</span>
<span id="cb3-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb3-65"></span>
<span id="cb3-66">rule bcftools_call:</span>
<span id="cb3-67">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-68">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb3-69">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb3-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb3-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb3-72">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>]),</span>
<span id="cb3-73">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>])</span>
<span id="cb3-74">    output:</span>
<span id="cb3-75">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb3-76">    log:</span>
<span id="cb3-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bcftools_call/all.log"</span></span>
<span id="cb3-78">    params:</span>
<span id="cb3-79">        rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prior_mutation_rate"</span>]</span>
<span id="cb3-80">    shell:</span>
<span id="cb3-81">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb3-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv -P {params.rate} - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb3-83"></span>
<span id="cb3-84">rule plot_quals:</span>
<span id="cb3-85">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb3-87">    output:</span>
<span id="cb3-88">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb3-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb3-90">    script:</span>
<span id="cb3-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span>
<span id="cb3-92"></span></code></pre></div>
<p><code>config.yaml</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">samples</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">A</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/A.fastq</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">B</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/B.fastq</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">C</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/C.fastq</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior_mutation_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span></span></code></pre></div>
</section>
<section id="custom" class="level2">
<h2 class="anchored" data-anchor-id="custom">Custom</h2>
<p>上面手动设定了要处理的样本列表，能不能通过目录来处理呢？即不管有多少文件，目录下所有符合要求的样本列表都进行处理。</p>
<p><code>config.yaml</code>:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">samples</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior_mutation_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span></span></code></pre></div>
<p>在探索后我在之前的基础上给出了以下方案：</p>
<p>利用 <code>glob</code> 进行文件列表的解析，然后处理相关的 pattern 把样本列表提取出来，并以此 更新涉及到样本列表指定的部分：</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples),</span>
<span id="cb6-2">bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples)</span></code></pre></div>
<p>全部内容如下：</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb7-2"></span>
<span id="cb7-3">configfile: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config.yaml"</span></span>
<span id="cb7-4"></span>
<span id="cb7-5">input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>]</span>
<span id="cb7-6">input_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/*.fastq"</span>)</span>
<span id="cb7-7"></span>
<span id="cb7-8">samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb7-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> input_files:</span>
<span id="cb7-10">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb7-11">    samples.add(name)</span>
<span id="cb7-12"></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(samples)</span></span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb7-16">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb7-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb7-19"></span>
<span id="cb7-20">rule bwa_map:</span>
<span id="cb7-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb7-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/samples/{sample}.fastq"</span></span>
<span id="cb7-24">    output:</span>
<span id="cb7-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mark output files as temporary. </span></span>
<span id="cb7-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake will delete the marked files for you, </span></span>
<span id="cb7-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># once all the consuming jobs (that need it as input) have been executed</span></span>
<span id="cb7-28">        temp(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mapped_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb7-29">    params:</span>
<span id="cb7-30">        rg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"@RG\tID:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">\tSM:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to store all log files in a subdirectory logs/, </span></span>
<span id="cb7-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prefixed by the rule or tool name.</span></span>
<span id="cb7-33">    log:</span>
<span id="cb7-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bwa_mem/{sample}.log"</span></span>
<span id="cb7-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake provides a resources directive that can be used to specify arbitrary resources,</span></span>
<span id="cb7-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., memory usage or auxiliary computing devices like GPUs. </span></span>
<span id="cb7-37">    threads: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb7-38">    shell:</span>
<span id="cb7-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb7-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># both bwa and samtools and pipe it into the file referred to by {log}</span></span>
<span id="cb7-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span>
<span id="cb7-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb7-43"></span>
<span id="cb7-44">rule samtools_sort:</span>
<span id="cb7-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb7-47">    output:</span>
<span id="cb7-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># protect the final BAM file from accidental deletion or modification</span></span>
<span id="cb7-49">        protected(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb7-50">    shell:</span>
<span id="cb7-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb7-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb7-53"></span>
<span id="cb7-54">rule samtools_index:</span>
<span id="cb7-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb7-57">    output:</span>
<span id="cb7-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb7-59">    shell:</span>
<span id="cb7-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb7-61"></span>
<span id="cb7-62">rule bcftools_call:</span>
<span id="cb7-63">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-64">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb7-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb7-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb7-67">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb7-68">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples),</span>
<span id="cb7-69">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples)</span>
<span id="cb7-70">    output:</span>
<span id="cb7-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb7-72">    log:</span>
<span id="cb7-73">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bcftools_call/all.log"</span></span>
<span id="cb7-74">    params:</span>
<span id="cb7-75">        rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prior_mutation_rate"</span>]</span>
<span id="cb7-76">    shell:</span>
<span id="cb7-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb7-78">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv -P {params.rate} - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb7-79"></span>
<span id="cb7-80">rule plot_quals:</span>
<span id="cb7-81">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb7-83">    output:</span>
<span id="cb7-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb7-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb7-86">    script:</span>
<span id="cb7-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span>
<span id="cb7-88"></span></code></pre></div>
<p>QA 中的 <a href="https://snakemake.readthedocs.io/en/stable/project_info/faq.html#how-do-i-run-my-rule-on-all-files-of-a-certain-directory">How do I run my rule on all files of a certain directory?</a> 提供的下面的办法似乎也能解决该问题：</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">IDS, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob_wildcards(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thedir/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{id}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.fastq"</span>)</span></code></pre></div>


</section>

 ]]></description>
  <category>snakemake</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-28-snakemake-basics/index.html</guid>
  <pubDate>Tue, 27 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Can I run VS Code Server on older Linux distributions</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-25-can-i-run-vs-code-server-on-older-linux-distributions/index.html</link>
  <description><![CDATA[ 




<p>VSCode 的不断更新导致最新版本 Remotes 已经在一些 Linux server 上不再支持，这里记录下官方的解决办法，就是将版本降级到 1.85</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/remote/faq#_can-i-run-vs-code-server-on-older-linux-distributions" class="uri">https://code.visualstudio.com/docs/remote/faq#_can-i-run-vs-code-server-on-older-linux-distributions</a></li>
<li><a href="https://code.visualstudio.com/updates/v1_85" class="uri">https://code.visualstudio.com/updates/v1_85</a></li>
</ul>
<p>Downloads: Windows: <a href="https://update.code.visualstudio.com/1.85.2/win32-x64-user/stable">x64</a> <a href="https://update.code.visualstudio.com/1.85.2/win32-arm64-user/stable">Arm64</a> | Mac: <a href="https://update.code.visualstudio.com/1.85.2/darwin-universal/stable">Universal</a> <a href="https://update.code.visualstudio.com/1.85.2/darwin/stable">Intel</a> <a href="https://update.code.visualstudio.com/1.85.2/darwin-arm64/stable">silicon</a> | Linux: <a href="https://update.code.visualstudio.com/1.85.2/linux-deb-x64/stable">deb</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-rpm-x64/stable">rpm</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-x64/stable">tarball</a> <a href="https://code.visualstudio.com/docs/supporting/faq#_previous-release-versions">Arm</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-snap-x64/stable">snap</a></p>
<blockquote class="blockquote">
<p>Depending on your platform, make sure to disable updates to stay on that version. A good recommendation is to have release 1.85 as a separate installation, set up with Portable Mode（就是独立的软件目录）.</p>
<p>Portable mode is supported on the ZIP download for Windows, and the TAR.GZ download for Linux, as well as the regular Application download for macOS. See the Download page to find the correct .zip / .tar.gz file for your platform.</p>
</blockquote>



 ]]></description>
  <category>Linux</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-25-can-i-run-vs-code-server-on-older-linux-distributions/index.html</guid>
  <pubDate>Sat, 24 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>use singularity</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-23-use-singularity/index.html</link>
  <description><![CDATA[ 




<ul>
<li><a href="http://www.achelous.org/Container-Tech/Singularity-in-nutshell.html">Singularity 日常使用</a></li>
<li><a href="https://docs.sylabs.io/guides/latest/user-guide/definition_files.html">文档</a></li>
<li>https://singularityhub.github.io/</li>
<li>https://cloud.sylabs.io/library</li>
</ul>



 ]]></description>
  <category>note</category>
  <category>container</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-23-use-singularity/index.html</guid>
  <pubDate>Thu, 22 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>telescope installation</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-20-telescope-installation/index.html</link>
  <description><![CDATA[ 




<blockquote class="blockquote">
<p>注意这个帖子的有效性可能在未来某一天丧失。</p>
</blockquote>
<p>简单记录下 <code>telescope</code> 的安装，因为 <a href="https://github.com/mlbendall/telescope" class="uri">https://github.com/mlbendall/telescope</a> 提过的官方说明直接装后测试是有问题的。</p>
<p>一步步安装和debug过程：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> telescope <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge telescope python=3.8</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate telescope</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install numpy=1.19</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pysam&lt;0.17'</span></span></code></pre></div>
<blockquote class="blockquote">
<p>现在回头看可以缩减为一句命令：<code>mamba create -n telescope -c bioconda -c conda-forge telescope python=3.8 numpy=1.19 pysam&lt;0.17</code>。</p>
</blockquote>
<p>测试：</p>
<pre><code>(telescope) zhou2 22:12:47 ~/test 
$eval $(telescope test)
2024-02-18 22:13:03 INFO     
Version:                          1.0.3
Input Options
    samfile:                      /home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam
    gtffile:                      /home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/annotation.gtf
    attribute:                    locus
    no_feature_key:               __no_feature
    ncpu:                         1
    tempdir:                      None
Reporting Options
    quiet:                        False
    debug:                        False
    logfile:                      &lt;stderr&gt;
    outdir:                       .
    exp_tag:                      telescope
    updated_sam:                  False
Run Modes
    reassign_mode:                exclude
    conf_prob:                    0.9
    overlap_mode:                 threshold
    overlap_threshold:            0.2
    annotation_class:             intervaltree
Model Parameters
    pi_prior:                     0
    theta_prior:                  200000
    em_epsilon:                   1e-07
    max_iter:                     100
    use_likelihood:               False
    skip_em:                      False
 (from run in telescope_assign.py:197)
[E::idx_find_and_load] Could not retrieve index file for '/home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam'
2024-02-18 22:13:03 INFO     Loading annotation...                                        (from run in telescope_assign.py:205)
2024-02-18 22:13:03 INFO     Loaded annotation in 0 minutes and 0 secs                    (from run in telescope_assign.py:208)
2024-02-18 22:13:03 INFO     Loaded 99 features.                                          (from run in telescope_assign.py:209)
2024-02-18 22:13:03 INFO     Loading alignments...                                        (from run in telescope_assign.py:214)
[E::idx_find_and_load] Could not retrieve index file for '/home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam'
2024-02-18 22:13:05 INFO     Loaded alignment in 0 minutes and 1 secs                     (from run in telescope_assign.py:217)
2024-02-18 22:13:05 INFO     Alignment Summary:                                           (from print_summary in model.py:519)
2024-02-18 22:13:05 INFO         1000 total fragments.                                    (from print_summary in model.py:520)
2024-02-18 22:13:05 INFO             1000 mapped as pairs.                                (from print_summary in model.py:521)
2024-02-18 22:13:05 INFO             0 mapped as mixed.                                   (from print_summary in model.py:522)
2024-02-18 22:13:05 INFO             0 mapped single.                                     (from print_summary in model.py:523)
2024-02-18 22:13:05 INFO             0 failed to map.                                     (from print_summary in model.py:524)
2024-02-18 22:13:05 INFO     --                                                           (from print_summary in model.py:525)
2024-02-18 22:13:05 INFO         1000 fragments mapped to reference; of these             (from print_summary in model.py:526)
2024-02-18 22:13:05 INFO             0 had one unique alignment.                          (from print_summary in model.py:528)
2024-02-18 22:13:05 INFO             1000 had multiple alignments.                        (from print_summary in model.py:529)
2024-02-18 22:13:05 INFO     --                                                           (from print_summary in model.py:530)
2024-02-18 22:13:05 INFO         1000 fragments overlapped annotation; of these           (from print_summary in model.py:531)
2024-02-18 22:13:05 INFO             0 map to one locus.                                  (from print_summary in model.py:533)
2024-02-18 22:13:05 INFO             1000 map to multiple loci.                           (from print_summary in model.py:535)
2024-02-18 22:13:05 INFO     
                                                            (from print_summary in model.py:537)
2024-02-18 22:13:05 INFO     Running Expectation-Maximization...                          (from run in telescope_assign.py:250)
2024-02-18 22:13:05 INFO     Iteration 1, diff=1.3795                                     (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 2, diff=0.7388                                     (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 3, diff=0.24275                                    (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 4, diff=0.065133                                   (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 5, diff=0.017653                                   (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 6, diff=0.0050039                                  (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 7, diff=0.0014807                                  (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 8, diff=0.00045365                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 9, diff=0.00014275                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 10, diff=4.5844e-05                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 11, diff=1.4953e-05                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 12, diff=4.9364e-06                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 13, diff=1.645e-06                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 14, diff=5.5228e-07                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 15, diff=1.8652e-07                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 16, diff=6.3301e-08                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     EM converged after 16 iterations.                            (from em in model.py:722)
2024-02-18 22:13:05 INFO     Final log-likelihood: 95252.596293.                          (from em in model.py:723)
2024-02-18 22:13:05 INFO     EM completed in 0 minutes and 0 secs                         (from run in telescope_assign.py:253)
2024-02-18 22:13:05 INFO     Generating Report...                                         (from run in telescope_assign.py:256)
2024-02-18 22:13:05 INFO     telescope assign complete (0 minutes and 1 secs)             (from run in telescope_assign.py:263)
</code></pre>



 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-20-telescope-installation/index.html</guid>
  <pubDate>Mon, 19 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>回广州路上的感想</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-20-backtogz/index.html</link>
  <description><![CDATA[ 




<p>年后开车回广州太堵了，打破了国庆离开广州回老家开车的时长。 考虑到不会再在广州待这样的大长假了，应该以后不会再有类似的经历？</p>
<p>这里记录我感受堵车产生的两个天真想法：</p>
<ol type="1">
<li>高速的来回车道是分割的，一边堵一边完全不堵，是否可以在特殊节假日（特殊日期），在不同收费站之间封控对向车流，把对向的车道也给堵车的这条车道使用？</li>
<li>未来自动驾驶普及后，是否可能在特殊节假日高速道路汽车全部由计算中心总控，把私家车组网拼接为同一个公路网络？堵车的本质原因是车多情况下不同人的不协调导致，这种统一的调度应当可以完全解决这个问题？</li>
</ol>



 ]]></description>
  <category>personal</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-20-backtogz/index.html</guid>
  <pubDate>Mon, 19 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>shiny plot dpi</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-12-shiny-plot-dpi/index.html</link>
  <description><![CDATA[ 




<p>96 is recommended.</p>
<ul>
<li>https://mastering-shiny.org/basic-ui.html</li>
<li>https://github.com/rstudio/shiny/issues/1832</li>
</ul>



 ]]></description>
  <category>personal</category>
  <category>R</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-12-shiny-plot-dpi/index.html</guid>
  <pubDate>Sun, 11 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>免疫</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-01-22-immune/index.html</link>
  <description><![CDATA[ 




<section id="细胞因子" class="level2">
<h2 class="anchored" data-anchor-id="细胞因子">细胞因子</h2>
<p>细胞因子的分类：</p>
<ul>
<li>白细胞介素</li>
<li>干扰素</li>
<li>肿瘤坏死因子</li>
<li>集落刺激因子</li>
<li>生长因子</li>
<li>趋化性细胞因子</li>
</ul>
<p>生物学活性：</p>
<ul>
<li>介导固有免疫：抗细菌和病毒作用</li>
<li>介导和调节特异性免疫应答</li>
<li>刺激造血</li>
<li>促进血管生成</li>
<li>诱导凋亡</li>
</ul>


</section>

 ]]></description>
  <category>note</category>
  <category>免疫</category>
  <guid>https://shixiangwang.github.io/posts/2024-01-22-immune/index.html</guid>
  <pubDate>Sun, 21 Jan 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>解决 GitHub 代码拉取和推送问题</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-01-17-github-hosts/index.html</link>
  <description><![CDATA[ 




<p>国内 Linux 服务器有时候存在 GitHub 仓库无法 push 或 pull 的问题，这里主要记录下修改 hosts 来解决该问题（注意不是 100% 有效）</p>
<p>编辑 <code>/etc/hosts</code> 文件：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> vim /etc/hosts</span></code></pre></div>
<p>追加下面的内容：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">140.82.112.3</span> github.com</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">151.101.1.194</span> github.global.ssl.fastly.net  </span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">151.101.65.194</span> github.global.ssl.fastly.net  </span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">151.101.129.194</span> github.global.ssl.fastly.net  </span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">151.101.193.194</span> github.global.ssl.fastly.net </span></code></pre></div>
<p>这里的 IP 地址可能会变，如果不行可以通过 <a href="https://sites.ipaddress.com/" class="uri">https://sites.ipaddress.com/</a> 查一下。</p>
<p>重启下网络：</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> /etc/init.d/network restart</span></code></pre></div>
<blockquote class="blockquote">
<p>如果是其他平台，操作类似。</p>
</blockquote>
<ul>
<li>参考：<a href="https://juejin.cn/post/7135346231593599012" class="uri">https://juejin.cn/post/7135346231593599012</a></li>
</ul>



 ]]></description>
  <category>note</category>
  <category>Linux</category>
  <category>git</category>
  <guid>https://shixiangwang.github.io/posts/2024-01-17-github-hosts/index.html</guid>
  <pubDate>Tue, 16 Jan 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>R 针对数据进行惰性加载</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-25-lazy-loading-data-in-r/index.html</link>
  <description><![CDATA[ 




<p>在做 Shiny 开发时，有些数据太大，非常影响加载数据，这里提供了一种 lazyloading 策略，可以值得一试。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"></span>
<span id="cb1-2">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-3">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> X)</span>
<span id="cb1-4">e<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new.env</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parent=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">emptyenv</span>())</span>
<span id="cb1-5">e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> X</span>
<span id="cb1-6">e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> Y</span>
<span id="cb1-7"></span>
<span id="cb1-8">tools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">makeLazyLoadDB</span>(e, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filebase =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path.expand</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/Downloads/lazytest"</span>))</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">list =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span>())</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lazyLoad</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path.expand</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/Downloads/lazytest"</span>))</span></code></pre></div>
<ul>
<li>参考：<a href="https://stackoverflow.com/questions/21583382/r-how-to-lazyload-variables-from-inst-extdata-in-r-package" class="uri">https://stackoverflow.com/questions/21583382/r-how-to-lazyload-variables-from-inst-extdata-in-r-package</a></li>
</ul>
<p>关于参考内容中还提到 <code>delayedAssign</code> 可以实现类似的结果，但没有尝试。</p>



 ]]></description>
  <category>R</category>
  <category>shiny</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-25-lazy-loading-data-in-r/index.html</guid>
  <pubDate>Sun, 24 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>随便聊两句，可能不一定有意义</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-20-random/index.html</link>
  <description><![CDATA[ 




<p>近两年文章看的少。</p>
<p>在看一些我自己觉得做的好的文章（并不一定是高IF文章）时，总觉得我的工作质量有所不如（这已经谦虚了）。</p>
<p>细细想来，还是不够细心、耐心、专业。</p>
<p>在当前社会和周遭的环境里，有时候被潜移默化得比较急躁。很多感官上不重要的细节，成了不被关注的。 甚至有些都从来没有想到需要关注。这就是差距。</p>
<p>应该反思。现实所压迫的，除了一些无可奈何的事情，其他要勇于反抗，哪怕可能失去潜在的名利。</p>
<p>雷军最近说的好，如果可能有问题/错误的，就一定有问题/错误（大概是这么个意思）。要真诚地面对问题，解决问题。</p>
<p>幸运的是，我还比较年轻。很多事情做的不好是难免的，学习也是一直在进行的，重点在于追求精进，不要往后看，而要往前行。</p>
<p>一生很有限，要用好的工作内容回馈自己付出的时间。生活也应该这样。</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-20-random/index.html</guid>
  <pubDate>Tue, 19 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>诗歌存档</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-12-the-archive-of-poem/index.html</link>
  <description><![CDATA[ 




<p>存档下研究生期间写的一些诗，主要从<a href="https://www.jianshu.com/nb/8047834">简书</a>搬运过来。大抵作于16年底到19年初。</p>
<center>
<section id="电梯" class="level3">
<h3 class="anchored" data-anchor-id="电梯">电梯</h3>
<p>楼上的人想下来</p>
<p>楼下的人想上去</p>
<p>在电梯门口相遇</p>
<p>奔往不同的去处</p>
<p>夜深了</p>
<p>众人归寝</p>
<p>他似从未闪过你的眼窗</p>
<p>你也未曾入了他的梦</p>
</section>
<section id="脑中住着一个恶魔" class="level3">
<h3 class="anchored" data-anchor-id="脑中住着一个恶魔">脑中住着一个恶魔</h3>
<p>我终于发现——</p>
<p>我的脑中，住着一个</p>
<p>喋喋不休的恶魔</p>
<p>它巧妙地隐藏在</p>
<p>我思绪的背后，如此小心地</p>
<p>偷偷窥视着我的一切</p>
<p>以至于，二十二年的时光里</p>
<p>我毫无所知</p>
<p>它第一次出现踪迹时</p>
<p>我还小，还年轻</p>
<p>现在我知道，它一直</p>
<p>躲在我思绪的影子下</p>
<p>它的动作太快，我的上一个念头</p>
<p>才产生反应，它已经</p>
<p>没有了踪迹</p>
<p>我不知道我现在怎么发现了它</p>
<p>正如我知道它曾经有被我发现</p>
<p>啊，曼妙的思潮</p>
<p>涌过了时空的海洋</p>
<p>降临于我之身</p>
<p>贫瘠的文字和韵律般的诗词怎能描述</p>
<p>那与我共生的恶魔啊</p>
<p>闪烁的火花被语言粘附</p>
<p>怎能寻得来时的去处——</p>
<p>便是我同恶魔一起从天国降落之地</p>
</section>
<section id="我们在追寻着什么" class="level3">
<h3 class="anchored" data-anchor-id="我们在追寻着什么">我们在追寻着什么</h3>
<p>我们在追寻着什么</p>
<p>像夜空追寻黎明</p>
<p>像喧嚣追寻安静</p>
<p>厌倦着黑夜，又寻觅着孤寂</p>
<p>我们在追寻着什么</p>
<p>像群星围绕着明月</p>
<p>像鹤立在鸡群</p>
<p>突显着自立，又遮掩着卑微</p>
<p>我们在追寻着什么</p>
<p>像头仰望着星空</p>
<p>像脚觅着实地</p>
<p>怀揣着梦想，又难以飞起</p>
<p>我们在追寻着什么</p>
<p>像夸父追逐着金乌</p>
<p>像愚公搬弄着山石</p>
<p>愚昧地坚持，又诚恳地守望</p>
<p>我们在追寻着什么</p>
<p>像不甘坠在平凡</p>
<p>像生活归于平淡</p>
<p>追寻着什么，丢失了什么</p>
</section>
<section id="蝶恋花一" class="level3">
<h3 class="anchored" data-anchor-id="蝶恋花一">蝶恋花（一）</h3>
<p>枫叶落红蝉韵歇。一觉秋深，窗外风声烈。</p>
<p>柳色犹新珠露结，厌教人世轻离别。</p>
<p>故友但去音笑绝。有限心身，仍共年年月。</p>
<p>何必年光留且住，随风吹取三山去。</p>
<blockquote class="blockquote">
<p>三山：古代神话，东方大海里有三座仙山，叫做蓬莱、方丈、瀛州</p>
</blockquote>
</section>
<section id="蝶恋花二" class="level3">
<h3 class="anchored" data-anchor-id="蝶恋花二">蝶恋花（二）</h3>
<p>阅尽友朋难久聚。旧梦残痕，空落思如许。</p>
<p>相忆常叹别离苦，秋风日夜无头绪。</p>
<p>拟送相思明月处。时雨轻寒，无计留它住。</p>
<p>一树桂花香暗渡，楼高不见来时路。</p>
</section>
<section id="夜行者" class="level3">
<h3 class="anchored" data-anchor-id="夜行者">夜行者</h3>
<p>我是夜中行者，</p>
<p>在梦眠时入睡，</p>
<p>在梦醒时工作。</p>
<p>睡时我总爱睁着眼睛，</p>
<p>摆动身躯，频频顿首，</p>
<p>容易，不废气力。</p>
<p>讨厌的是有时没法，精神紧张就</p>
<p>只能收紧身形，端坐，</p>
<p>好一副可爱模样。</p>
<p>我爱工作，</p>
<p>我是夜行者，</p>
<p>我爱工作。</p>
<p>随意地逡巡，行走</p>
<p>走过四季，边走边</p>
<p>望星空，望远山，望</p>
<p>春的夜风抚柳，听</p>
<p>夏的蛙蝉相和成歌，闻</p>
<p>秋的桂树落香，触</p>
<p>冬的雪花融化，</p>
<p>——成了水</p>
<p>喔！这一年的四季。</p>
<p>喔！这夜的行者。</p>
<p>伟大的夜的行者，</p>
<p>我要唱歌，喔——</p>
<p>该死的长喉，却是个咽炎患者！</p>
<p>那就继续走吧，</p>
<p>等那梦眠时我便要睡去，如何</p>
<p>再赏这多情的四季，</p>
<p>再望情坚不移的夜空星辰。</p>
<p>啊，上天，不要</p>
<p>不要让我躺下——</p>
<p>让我继续走，前行！</p>
<p>我是夜的行者。</p>
<p>啊，不要——</p>
<p>一躺下，</p>
<p>满是空虚，脑中会传来</p>
<p>心里的声音。</p>
</section>
<section id="疯子对傻子" class="level3">
<h3 class="anchored" data-anchor-id="疯子对傻子">疯子对傻子</h3>
<p>你问，</p>
<p>你别问——</p>
<p>我从哪里来，</p>
<p>说得清</p>
<p>说的不清。</p>
<p>你念，</p>
<p>你别念——</p>
<p>我往何处去，</p>
<p>不改变</p>
<p>一直改变。</p>
<p>你笑，</p>
<p>你别笑——</p>
<p>我为何在这里，</p>
<p>人只道</p>
<p>初衷不复。</p>
<p>你哭，</p>
<p>你别哭——</p>
<p>昨梦明朝尽空，</p>
<p>恭喜我</p>
<p>已修成疯。</p>
</section>
<section id="点绛唇-望潇湘" class="level3">
<h3 class="anchored" data-anchor-id="点绛唇-望潇湘">点绛唇 望潇湘</h3>
<p>一夜春风，</p>
<p>河边吹绿柳多少？</p>
<p>数声啼鸟，</p>
<p>频传春芳晓。</p>
<p>才过春初，</p>
<p>却也春将老。</p>
<p>远山道，</p>
<p>清明芳草，</p>
<p>看取西天渺。</p>
</section>
<section id="暮春早行" class="level3">
<h3 class="anchored" data-anchor-id="暮春早行">暮春早行</h3>
<p>垂枝映絮柳，情多添为愁。</p>
<p>人生几回乐，微风绿春波。</p>
</section>
<section id="清明崇明" class="level3">
<h3 class="anchored" data-anchor-id="清明崇明">清明·崇明</h3>
<p>草木方始绿，时节入春深。</p>
<p>遥叹连天水，近寻众芳痕。</p>
<p>少小囿世面，老大拭喧尘。</p>
<p>泛舟江海上，愿为钓鱼翁。</p>
</section>
<section id="春晨惊起" class="level3">
<h3 class="anchored" data-anchor-id="春晨惊起">春晨惊起</h3>
<p>恍然大梦春秋去，</p>
<p>不知鸿雁南归来。</p>
<p>惊起一瞥门窗外，</p>
<p>楼下樱花倚春开。</p>
</section>
<section id="湿落的花你莫留恋" class="level3">
<h3 class="anchored" data-anchor-id="湿落的花你莫留恋">湿落的花，你莫留恋</h3>
<p>如果你不曾料想，</p>
<p>又岂会无端地渴望。</p>
<p>机械钟表上起了发条，</p>
<p>是它在循环——</p>
<p>还是你在旋转。</p>
<p>听四月的风声暗哑，</p>
<p>低摆抽绿的絮柳，</p>
<p>园间一夜绽满的樱花，</p>
<p>共着桃花，</p>
<p>被连雨摧残。</p>
<p>湿落一地的花啊，</p>
<p>你是樱花，还是桃花。</p>
<p>你原是渴望春雨滋润，</p>
<p>还是期待飞落前的旋转？</p>
<p>你也莫想，</p>
<p>落红化入春泥，</p>
<p>也莫贪恋，</p>
<p>这人间的风景。</p>
<p>四周有的是水泥，</p>
<p>不缺的是轮回的春季。</p>
<p>我在烟雨朦胧中写下了你，</p>
<p>也只是因为，</p>
<p>手里的机器，</p>
<p>比我拥有更多的感情。</p>
</section>
<section id="夜中的诗人" class="level3">
<h3 class="anchored" data-anchor-id="夜中的诗人">夜中的诗人</h3>
<p>光消匿醒目</p>
<p>夜于风中放歌</p>
<p>委身黑暗，或鲜明</p>
<p>你无须选择</p>
<p>选择打造的包袱</p>
<p>不必拿起，你</p>
<p>孤注一掷，不留退路</p>
<p>月是你的魂侣</p>
<p>天晴，或多雨</p>
<p>是一种姿态，只为</p>
<p>靠近她</p>
<p>再无忧伤，反复</p>
<p>你是？</p>
<p>躯壳里的空空</p>
<p>月亮之上的白白</p>
<p>空白，哦——</p>
<p>是你，夜中的诗人</p>
<p>心在跳，思想</p>
<p>在发烫</p>
</section>
<section id="五月" class="level3">
<h3 class="anchored" data-anchor-id="五月">五月</h3>
<p>一场大雨，或天晴</p>
<p>将四月的尾身摆弄</p>
<p>水与空气升起嘈杂的共舞</p>
<p>冲刷犹存春痕</p>
<p>垂降夏季的五月</p>
<p>温度骤击突来的灼感</p>
<p>掀起层层陈年的躯皮</p>
<p>燥热，或寒酷</p>
<p>一时体内沉浸</p>
<p>年年的感觉回归</p>
<p>在这个初来的夏日</p>
<p>记忆恍若齿轮</p>
<p>回拨过往的印记</p>
<p>真也是齿轮——</p>
<p>盘过一圈，忘记</p>
<p>是在拨后，或往前</p>
<p>也忘记，正站在</p>
<p>旧时开端的终点</p>
</section>
<section id="如果风不再刮" class="level3">
<h3 class="anchored" data-anchor-id="如果风不再刮">如果风不再刮</h3>
<p>如果风不再刮</p>
<p>雨将笔直地下</p>
<p>多少雨外的等待</p>
<p>一场雨中的花开</p>
<p>如果风不再刮</p>
<p>小草无声地艳羡</p>
<p>众木躯干的挺直</p>
<p>多少历史的沧桑</p>
<p>验证谁内心执着挺拔</p>
<p>谁人倒下</p>
<p>如果风不再刮</p>
<p>古道西风瘦马</p>
<p>笑成满纸黄沙</p>
<p>铮铮心怀</p>
<p>谁人来写</p>
<p>谁人来听</p>
<p>谁人来看</p>
</section>
<section id="行走在五月的风雨中" class="level3">
<h3 class="anchored" data-anchor-id="行走在五月的风雨中">行走在五月的风雨中</h3>
<p>五月的风雨初骤</p>
<p>敲打你灯下的身影清瘦</p>
<p>于飘零之中，绿叶登台</p>
<p>恍然一场离家的远游</p>
<p>乘风而上</p>
<p>随雨而下</p>
<p>风雨中的叶</p>
<p>风雨中的你</p>
<p>逢过春的花已鲜明</p>
<p>润着水的绿正斑驳</p>
<p>该骂这天的捉弄</p>
<p>该笑这云的情多</p>
<p>看天空放阴</p>
<p>你兀自犹豫着</p>
<p>行走在初夏的雨后</p>
</section>
<section id="当思绪反复成河" class="level3">
<h3 class="anchored" data-anchor-id="当思绪反复成河">当思绪反复成河</h3>
<p>我在寻找一个词语</p>
<p>砥砺思绪，寻找</p>
<p>一个开始，一句借口</p>
<p>寻找，不停地</p>
<p>要文艺，像那</p>
<p>像那悲伤逆流成河</p>
<p>唯美诗意</p>
<p>要洒脱，将会</p>
<p>悲喜均不沾</p>
<p>无言升落</p>
<p>可惜我最终也没找到</p>
<p>或许我也说不出口</p>
<p>一日一夜的二十四小时</p>
<p>八万六千四百秒，有些精准</p>
<p>当我的心跳敲过这时间</p>
<p>地球又绕过了八万里的路程</p>
<p>反复的起点，也是</p>
<p>反复的终点</p>
<p>无言的岁月，反复</p>
<p>我的思绪，反复</p>
<p>反反复复在过去的两万多个日子里</p>
<p>不觉成河</p>
<p>而我又该流向哪里呢</p>
<p>我的大海</p>
<p>我的思潮奔涌</p>
<p>却还没有走到大陆尽头</p>
</section>
<section id="道化之花" class="level3">
<h3 class="anchored" data-anchor-id="道化之花">道化之花</h3>
<p>他躺在床上</p>
<p>看海波上淫淫的细雨</p>
<p>窗外，有海岸</p>
<p>也有天空</p>
<p>怎样去塑造一幅画镜</p>
<p>我心想</p>
<p>在作者的故事里</p>
<p>在太宰的内心处</p>
<p>退潮的海水</p>
<p>释放对世界侵蚀的火焰</p>
<p>道化之花</p>
<p>在那个女人的身体上绽放，枯萎</p>
<p>是的，那个一同殉情的女人</p>
<p>谁知道是我将她杀死？</p>
<p>我的朋友，你们可知道</p>
<p>叶藏望向窗外</p>
<p>可别离我而去，我的朋友</p>
</section>
<section id="那年七夕" class="level3">
<h3 class="anchored" data-anchor-id="那年七夕">那年七夕</h3>
<p>梦里一度贪欢，推杯到天明。</p>
<p>风雨旧时已谙，何处寻真情？</p>
<p>倚马待，望流云，天蓝人痴云不停。</p>
<p>何似幼时观月，月在人无心！</p>
<p>空中百鸟低巡，小镇响雷鸣。</p>
<p>日照离人一群，有晴也无情。</p>
<p>枝折花残谁在意，最是愁煞少年心：</p>
<p>肯为新词把酿得的才学倾。</p>
<p>品得书中颜玉，词新意不新。</p>
<p>看罢太白诗行，千愁同古今。</p>
<p>读新词，写旧诗，一生伴我度悲兴。</p>
<p>万物莫不月似，当自负亏盈！</p>
<p>七夕一岁又至，泪多软语频。</p>
<p>长情更是短情，此山万年青！</p>
<p>自古世间少味趣，诗与佳人共追寻。</p>
<p>恰如我意不负长词不负卿。</p>
<blockquote class="blockquote">
<p>又翻出了14年七夕写的诗，心中莫名伤感。不，不应称为莫名。相同的情绪总是会在心底的某个时间点发酵，撒播出愁绪的气味。</p>
<p>曾把青春看做一个年龄阶段的必然经历。但我已不清楚我现在是入了青春，还是已在青春之外。时间总是耦合经历，把成长的气息悄然掩盖，而其中横跨的岁月光景，似乎仅在海马区留下关联的模式，在偶然的联想中掀起朵朵的记忆之花，提示过去真的不复存在。说到底，我们都是时间的扫墓人。</p>
</blockquote>
</section>
<section id="昏梦游思" class="level3">
<h3 class="anchored" data-anchor-id="昏梦游思">昏梦游思</h3>
<p>风似乎从海边刮来</p>
<p>轻轻地，绕过森林与高楼</p>
<p>柔柔地，轻抚垂柳与衣袖</p>
<p>我站在高楼，感受着</p>
<p>风正从海边拂来</p>
<p>暑热退散</p>
<p>天上的火球降为远景</p>
<p>由黄转红的光色</p>
<p>洗澄金日的余晖</p>
<p>把留有残温的美景</p>
<p>送将夜的君国</p>
<p>一只鸟儿不耐寂寞，啁啾</p>
<p>我猜想它不是在唱歌——</p>
<p>文字里早已写烂</p>
<p>求偶吧？身体往往</p>
<p>比灵魂更诚实</p>
<p>人儿又何尝耐得住啊，繁华的</p>
<p>闪耀着白光，黄光，霓虹光的千盏万盏</p>
<p>在夜兽的胃腔中游弋，呼吸</p>
<p>争夺尚未分解的残食</p>
<p>直到杯盘狼藉，独自蜷缩入梦</p>
<p>盼着，梦里也是这般美好的世界</p>
<p>一个只关于兽的世界</p>
<p>而我，早已化身成兽</p>
</section>
<section id="踏莎行-端午至" class="level3">
<h3 class="anchored" data-anchor-id="踏莎行-端午至">踏莎行 端午至</h3>
<p>夜色将阑，</p>
<p>黄鹂报晓，</p>
<p>树头绿叶如新袄。</p>
<p>浮光透尽室窗明，</p>
<p>群楼难掩晨辉袅。</p>
<p>芳草勃勃，</p>
<p>离乡渺渺，</p>
<p>手拨箬叶眉心挑。</p>
<p>佳节又至欲销魂，</p>
<p>频传故梦托家老。</p>
</section>
<section id="听歌" class="level3">
<h3 class="anchored" data-anchor-id="听歌">听歌</h3>
<p>旋律升起</p>
<p>音调深浅高低</p>
<p>交纵组合开始，美妙啊</p>
<p>我渴望下一段</p>
<p>心底有个相同的节奏</p>
<p>恍若红日升起</p>
<p>普照世界啊，音乐</p>
<p>要什么神佛</p>
<p>好像什么人要来了</p>
<p>或是正在走过</p>
<p>生活啊，人类</p>
<p>我呆立良久</p>
<p>心有所思</p>
<p>物皆物语</p>
</section>
<section id="独自莫凭楼" class="level3">
<h3 class="anchored" data-anchor-id="独自莫凭楼">独自莫凭楼</h3>
<p>夜塔拨紫月拨银，</p>
<p>远灯照，近蝉鸣。</p>
<p>斜窥小径少人行，</p>
<p>空余暗柳，</p>
<p>倚光落疏影。</p>
<p>不闻浦江远水流，</p>
<p>近悠悠，远断愁。</p>
<p>难悟人间有情眸，</p>
<p>唯有短叹，</p>
<p>独自莫凭楼。</p>
</section>
<section id="失眠" class="level3">
<h3 class="anchored" data-anchor-id="失眠">失眠</h3>
<p>躺着</p>
<p>凌晨三点</p>
<p>一点亮点</p>
<p>又一个三点</p>
<p>无眠……</p>
<p>我怕是病了</p>
<p>入骨的热潮裹挟</p>
<p>夜幕的深渊</p>
<p>靠近，一点</p>
<p>一点，又一点</p>
<p>在夏季的凌晨三点</p>
</section>
<section id="通宵" class="level3">
<h3 class="anchored" data-anchor-id="通宵">通宵</h3>
<p>我隐匿于黑暗</p>
<p>沉醉于思考的逻辑</p>
<p>寂静夜色里</p>
<p>指针划过零点的界限</p>
<p>在屏幕微芒中显露尖锐</p>
<p>我浑然不觉</p>
<p>思维在图影的脉搏间跳跃</p>
<p>奔跑、迷失</p>
<p>“黑夜给了我黑色的眼睛”</p>
<p>我用它影射光明</p>
<p>信息汹涌流动着</p>
<p>在闪耀RGB编码的颜色光影里</p>
<p>我无心睡眠</p>
<p>也无心失眠</p>
</section>
<section id="寂寞诗" class="level3">
<h3 class="anchored" data-anchor-id="寂寞诗">寂寞诗</h3>
<p>寂寞的人逢着寂寞的夜</p>
<p>等着同样寂寞的人</p>
<p>该是何等的寂寞？</p>
<p>寂寞上的寂寞</p>
<p>寂寞后的寂寞</p>
<p>寂寞里的寂寞</p>
<p>最终能够不寂寞？</p>
<p>有点寂寞</p>
<p>喜欢说挺寂寞</p>
<p>恐怕说好寂寞</p>
<p>说不出不寂寞</p>
<p>哦，寂寞</p>
</section>
<section id="尘光" class="level3">
<h3 class="anchored" data-anchor-id="尘光">尘光</h3>
<p>白天的时光里身处喧嚣</p>
<p>夜晚至深时终归安宁</p>
<p>这城市静卧后</p>
<p>掸去了多少尘光</p>
<p>我就要在这物心两安的时刻睡去时</p>
<p>远桥的车光恍惚闪过</p>
<p>尘光还在——</p>
<p>我侧脸望向门窗外的夜空</p>
<p>最后的一眼里——星光遮掩</p>
<p>也许它一往如常</p>
</section>
<section id="夏末" class="level3">
<h3 class="anchored" data-anchor-id="夏末">夏末</h3>
<p>阳光是无声的沉默</p>
<p>轻风在无言地相守</p>
<p>这温暖而清爽的夏末</p>
<p>几月的酷热退散</p>
<p>季节转向初秋时候</p>
<p>我在小河旁漫走</p>
<p>眼中的绿色</p>
<p>依垂在杨柳枝头</p>
<p>粼粼泛起的波光中</p>
<p>我又想起了你</p>
<p>我又想起了你</p>
<p>眼波里正泛起的湖光粼粼</p>
<p>依垂在柳梢的绿色</p>
<p>映着我在河边走过</p>
</section>
<section id="我在风中听雨" class="level3">
<h3 class="anchored" data-anchor-id="我在风中听雨">我在风中听雨</h3>
<p>我在风中听雨</p>
<p>在雨中闻风</p>
<p>在风雨中想你</p>
<p>回到室内时</p>
<p>风雨隔窗远去</p>
<p>恍如背景</p>
<p>灰白天际里</p>
<p>我轻轻将你放入心底</p>
<p>抬眼向西</p>
<p>所有方向</p>
<p>在一片迷离</p>
</section>
<section id="我是真的爱你" class="level3">
<h3 class="anchored" data-anchor-id="我是真的爱你">我是真的爱你</h3>
<p>我是真的爱你</p>
<p>不仅爱你的身体</p>
<p>也爱你的心</p>
<p>爱阳光照你时的明媚</p>
<p>也爱微风轻抚你时的温柔</p>
<p>我是真的爱你</p>
<p>愿解开所有物质的锁链</p>
<p>放下精神上的所有</p>
<p>远赴千里</p>
<p>只为将你拥入怀中</p>
<p>我是真的爱你</p>
<p>衷心地许下每一个承诺</p>
<p>又默默将它们守候，见证我们</p>
<p>走过以后所有的一年四季</p>
<p>春夏秋冬</p>
</section>
<section id="爱你的心" class="level3">
<h3 class="anchored" data-anchor-id="爱你的心">爱你的心</h3>
<p>时间抹不去</p>
<p>疾病带不走</p>
<p>别人拿不了</p>
<p>爱你的心</p>
<p>我爱的人呵</p>
<p>只有你能将它呵护</p>
<p>又能把它摧毁</p>
<p>好好对待它吧</p>
<p>它因你而坚强存在</p>
<p>也因你而软弱无助</p>
</section>
<section id="立冬后" class="level3">
<h3 class="anchored" data-anchor-id="立冬后">立冬后</h3>
<p>立冬成昨日，好风下眉秋。</p>
<p>懒起梳妆晚，对镜已白头。</p>
</section>
<section id="如一" class="level3">
<h3 class="anchored" data-anchor-id="如一">如一</h3>
<p>一边是想你的绵愁</p>
<p>一边是工作的烦忧</p>
<p>我望着窗外阴沉的上海</p>
<p>这已是第二个年头</p>
<p>慢道忧虑的日子终将过去</p>
<p>去了归来，频频回首</p>
<p>一边是遇你的欢喜</p>
<p>一边是成长的苦痛</p>
<p>我在冬日写下此诗时</p>
<p>岁月正努力奔往春季</p>
<p>诗中也努力与四季作一场别离</p>
<p>末尾刻下爱你的如一</p>
</section>
<section id="认岁月" class="level3">
<h3 class="anchored" data-anchor-id="认岁月">认岁月</h3>
<p>若寻岁月身，音容辨旧痕。</p>
<p>凭吊芳华易，健忘父母恩。</p>
</section>
<section id="晨起怅然有感" class="level3">
<h3 class="anchored" data-anchor-id="晨起怅然有感">晨起怅然有感</h3>
<p>一盏黎明一盏灯，一宿思绪梦难成。</p>
<p>只恨神州地高远，别后山河是故人。</p>
</section>
<section id="我昨日逢着一条狗" class="level3">
<h3 class="anchored" data-anchor-id="我昨日逢着一条狗">我昨日逢着一条狗</h3>
<p>我昨日逢着一条狗</p>
<p>我散步路过的时候</p>
<p>看到它透过窗户</p>
<p>正对着我咧嘴笑</p>
<p>狗什么时候学会笑的？</p>
<p>我心里惊讶得很——</p>
<p>居然跟人一样</p>
<p>皮肉拉扯，琢磨不透</p>
<p>可能是在问好吧</p>
<p>我点点头</p>
<p>倒是一条好狗</p>
<p>眼睛也闪着亮泽</p>
<p>今天我又想遇着它</p>
<p>却看到门口小孩杵着狗皮在耍</p>
<p>一身贼亮的毛</p>
<p>还有塌陷下去的笑</p>
</section>
<section id="一场九百年的梦" class="level3">
<h3 class="anchored" data-anchor-id="一场九百年的梦">一场九百年的梦</h3>
<p>我做了一场九百年的梦</p>
<p>旁人问我为何</p>
<p>我告诉他——</p>
<p>我自己感觉如此呀</p>
<p>我的感觉一向准确</p>
<p>九百年，不多不少</p>
<p>在那之前，老师叫我们——</p>
<p>用“一场”造个句子</p>
<p>正好不多不少，九百年</p>
<p>我睡了九百年</p>
<p>然后写了下来</p>
<p>他骂我不老实——</p>
<p>“你，你怎可能睡得这么久？”</p>
<p>我微笑摇摇头</p>
<p>指了指我的席位</p>
<p>牌子上写着——</p>
<p>“一场九百年的梦”</p>
</section>
<section id="吃掉你" class="level3">
<h3 class="anchored" data-anchor-id="吃掉你">吃掉你</h3>
<p>我已经饱了</p>
<p>胃口撑的满满</p>
<p>可是……</p>
<p>为什么心里还有欲望</p>
<p>想要吃掉你</p>
<p>春风有些安静</p>
<p>请感受我的呼吸——</p>
<p>亲爱的</p>
<p>在床上，在梦里</p>
<p>来吧，让我们</p>
<p>依靠彼此</p>
<p>不要沉醉这夜</p>
<p>亲爱的，</p>
<p>也不要悲恼这黑</p>
<p>我将你挽进心底</p>
<p>不管它</p>
<p>明月圆缺</p>
<p>窗外迷离</p>
</section>
<section id="做梦" class="level3">
<h3 class="anchored" data-anchor-id="做梦">做梦</h3>
<p>似假非假，似空非空。</p>
<p>如不醒来，未觉梦中。</p>
</section>
<section id="去做梦" class="level3">
<h3 class="anchored" data-anchor-id="去做梦">去做梦</h3>
<p>夜沸腾得厉害</p>
<p>在黑暗里熬煮着</p>
<p>摇晃的城市里</p>
<p>大地满是水泡</p>
<p>那惨白的</p>
<p>早已退避的月光</p>
<p>是往别处去了</p>
<p>还是正蜷缩养伤？</p>
<p>还是睡去吧——</p>
<p>去梦里吧</p>
<p>至少梦里，可能</p>
<p>有一个想象的太阳</p>
</section>
<section id="小时" class="level3">
<h3 class="anchored" data-anchor-id="小时">24小时</h3>
<p>工作、学习、吃饭与睡眠</p>
<p>这日常的四件事情</p>
<p>将一天的24小时分割</p>
<p>一大段、一大段、一小段、一大段</p>
<p>还有究竟有多少间隙</p>
<p>我说不清</p>
<p>我好像做了很多</p>
<p>在这一天天的24小时</p>
<p>在这一段段分割的时空里</p>
<p>但却好像乱了</p>
<p>心里血液喷薄的红线</p>
<p>将身躯一圈圈紧绕</p>
<p>24小时，又24小时</p>
<p>我看不见它的线头</p>
<p>也瞧不见它的去处</p>
<p>只感觉越来越紧</p>
<p>冒着火色的双眼</p>
<p>越来难以看清</p>
<p>24小时够了吗？</p>
<p>不够再上24小时。</p>
<p>我在畅想，也在回望</p>
<p>可悲的是，就这样</p>
<p>本来连续的生命里</p>
<p>我活成了不连续的自、己</p>
</section>
<section id="我即将在这午后的阳光下睡去" class="level3">
<h3 class="anchored" data-anchor-id="我即将在这午后的阳光下睡去">我即将在这午后的阳光下睡去</h3>
<p>我即将在这午后的阳光下睡去</p>
<p>面对门窗，背靠办公椅</p>
<p>黄白的光斜着倾洒</p>
<p>在栏杆处投下斑驳的灰影</p>
<p>侵袭宿舍的每一个方寸</p>
<p>也照亮着这容身的方寸</p>
<p>微闭的眼睛里</p>
<p>存着远方天空的片段</p>
<p>连续地播放着</p>
<p>是白芒白茫的记忆</p>
<p>一只难以呼唤其名的鸟</p>
<p>横着从中间飞过</p>
<p>叫着春天，催我睡去</p>
</section>
<section id="我们这座城市" class="level3">
<h3 class="anchored" data-anchor-id="我们这座城市">我们这座城市</h3>
<p>阳光混合氧气充斥这座城市</p>
<p>像世界上的其他一万座城市。</p>
<p>看的见的光与看不见的虚无和着</p>
<p>输送给这座城市人口养料。</p>
<p>百万，千万</p>
<p>寥寥字眼里埋葬人口下的生活：</p>
<p>我们精心得像蚂蚁构造这座城市，</p>
<p>也忙碌得像蚂蚁存在着却好像只是路过。</p>
<p>我们像单纯地渴望活着一样</p>
<p>渴望着黑暗甬道的下一个出口——</p>
<p>可是，我们依然按照路牌的指引</p>
<p>不自主地拥抱人流，涌入车厢</p>
<p>毫无畏惧地驶向又一个</p>
<p>又下一个黑暗的地方。</p>
<p>前进啊，</p>
<p>像与车轨一路摩擦前行的列车，</p>
<p>我们与这座城市碰撞相融，</p>
<p>直到分不清它是青春</p>
<p>还是它就是我们。</p>
</section>
<section id="相交的平行线" class="level3">
<h3 class="anchored" data-anchor-id="相交的平行线">相交的平行线</h3>
<p>我曾经以为，</p>
<p>两条平行直线不会相交，</p>
<p>但宇宙就是这样，</p>
<p>在视线的远方，</p>
<p>人生的某个拐点，</p>
<p>我们彼此开始交汇，</p>
<p>融合。</p>
<p>这是相对论的咒语——</p>
<p>它在一直在那里，</p>
<p>而我们一起在这里。</p>
<blockquote class="blockquote">
<p>在欧氏几何中，在两条平行线中做一条直线AB，以直线AB为半径以逆时针方向做圆，然后以直线AB为半径以顺时针方向再做一个圆，从两个圆的交点做垂线CD垂直于直线AB，若CD与AB的角的角度是90度，则说明两条平行线不会相交。</p>
<p>但欧几里得不敢思考当两条平行线无限长时的情况…..</p>
<p>于是包括罗素、黎曼在内的科学家假设当两条平行线无限长时，他们会在无穷远处相交。（例如：在地球的球面上，就会发现，相互垂直于赤道的经线会相交于北极点和南极点。）后来，非欧几何和黎曼空间就诞生了，该成果给了爱因斯坦很大的启发．</p>
</blockquote>
</section>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section">2018-06-15</h3>
<p>由来万夫勇，挟此生雄风。笑尽一杯酒，杀人都市中。</p>
<p>“剑术已成君把去，有蛟龙处斩蛟龙”。</p>
</section>
<section id="探春" class="level3">
<h3 class="anchored" data-anchor-id="探春">探春</h3>
<p>樱红在园绿在野，东君扶柳捧金蝶。</p>
<p>人间终把寒根断，三月花开好时节。</p>
</section>
<section id="section-1" class="level3">
<h3 class="anchored" data-anchor-id="section-1">2019-04-05</h3>
<p>自然的规律</p>
<p>真真伟大的造物</p>
<p>它从无声息地彰显</p>
<p>你不由分说地融入</p>
<p>物理学家用数学丈量它</p>
<p>而我，</p>
<p>于生活中感触</p>
</section></center>




 ]]></description>
  <category>诗</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-12-the-archive-of-poem/index.html</guid>
  <pubDate>Mon, 11 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>少年时</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-12-the-poem-of-youth/index.html</link>
  <description><![CDATA[ 




<p>这里主要存储下大学期间随笔写作经整理的诗篇。</p>
<p>网页放一首。</p>
<center>
<p><strong>镜照</strong> <br></p>
<p>听夜风沉沉</p>
<p>弹奏在其中的吉他一声声</p>
<p>寂静的黑里</p>
<p>见不到家乡的月与星辰</p>
<p>远方，谁在等 <br></p>
<p>看秋叶层层</p>
<p>潜藏于体表的圆圈一轮轮</p>
<p>微冷的雨中</p>
<p>何处疗梦里的痴与伤痕</p>
<p>近处，我轻问 <br></p>
<p>山一程，水一程</p>
<p>一路千里的风尘</p>
<p>生命的刻度勾勒距离的尺度</p>
<p>我越走越浑</p>
<p>瞧，镜子里的身影</p>
<p>白皙的脸上斑点纵横</p>
<p>总被迷惑在模糊的清晰</p>
<p>而一走近</p>
<p>现实的自己</p>
<p>呈现得一滴不剩</p>
<p>这岁月的梦魇</p>
<p>该死的真诚 <br></p>
<p>逃不掉，如何跑</p>
<p>问问问，一声一声接一声</p>
<p>我对着我自己</p>
<p>里头是静止的灵魂</p>
外面是活着的人生 <br>
</center>
<p>全文见<a href="少年时.pdf">《少年时》</a></p>
<blockquote class="blockquote">
<p>感谢梦婷几年前的整理。</p>
</blockquote>



 ]]></description>
  <category>诗</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-12-the-poem-of-youth/index.html</guid>
  <pubDate>Mon, 11 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>The world is not all sunshine and rainbows</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-08-the-world-is-not-all-sunshine-and-rainbows/index.html</link>
  <description><![CDATA[ 




<p>刷短视频的时候看到小孩跟史泰龙激情地对一段电影（洛奇）台词，把它翻找了出来，记录一下。</p>
<p>　　You let people stick a finger in your face and tell you you’re not good.</p>
<p>　　你让别人指着脸说你不好。</p>
<p>　　And when things got hard, you started to looking for something to blame, like a big shadow.</p>
<p>　　当遇到不顺心的事，你开始怪罪其他事，比如说巨大的阴影。</p>
<p>　　Let me tell you something you already know.</p>
<p>　　让我告诉你一些你已经知道的事情。</p>
<p>　　The world is not all sunshine and rainbows.</p>
<p>　　这世界不完全都是阳光和彩虹。</p>
<p>　　It’s a very mean and nasty place, and I don’t care how tough you are.</p>
<p>　　这是一个非常卑鄙险恶的世界，我不在乎你是多么坚强。</p>
<p>　　It will beat you to your knees and keep you there if you let it.</p>
<p>　　如果你屈服，他会把你打得永远趴在地上。</p>
<p>　　You, me or nobody is gonna hit as hard as life.</p>
<p>　　你，我，没有人能比生活更会击打人了。</p>
<p>　　But it’s not about how hard you hit. It’s about how hard you get hit and keep moving forward, how much you can take and keep moving forward.</p>
<p>　　但这不在于你击打的多重，而在于你能被击打的多重，仍保持前进，在于你能怎么承受，然后继续前进。</p>
<p>　　That’s how winning is done.</p>
<p>　　这才是真正的胜利。</p>
<p>　　Now if you know what you’re worth, go and get what you’re worth.</p>
<p>　　现在如果你知道你的价值，你就前进实现你的价值。</p>
<p>　　But you gotta be willing to take the hits, and not pointing fingers saying you aren’t where you wanna be because of him or her or anybody!</p>
<p>　　但你必须乐意承受挨打，而不是没能实现目标时却指着别人说是因为他或她的原因!</p>
<p>　　Cowards do that, and that ain’t you! You’re better than that!</p>
<p>　　懦夫才会那样做!你不是!你远比那个出色!</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-08-the-world-is-not-all-sunshine-and-rainbows/index.html</guid>
  <pubDate>Thu, 07 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>E pluribus unum: From Complexity, Universality</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-07-e-pluribus-unum/index.html</link>
  <description><![CDATA[ 




<p>标题是陶哲轩于 2012 年发表的<a href="https://direct.mit.edu/daed/article/141/3/23/27037/E-pluribus-unum-From-Complexity-Universality">一篇论文</a>题目，表达了从多样性、复杂性中产生统一、普遍性的意念。这可以涉及到社会、科学、文化或其他领域，强调在多样性和复杂性中寻找普遍性原则或价值观。</p>
<blockquote class="blockquote">
<p>探究宇宙中的秩序和混沌一直是科学研究的核心命题。陶哲轩教授的这篇洞察性文章引领我们进入普适的世界——一个展现了如何从错综复杂的微观动态系统中抽象出简明的宏观规律的奇妙领域。从统计学的经典规律到物理学中的相变现象，从自然数序列的神秘规律到量子力学的精确预测，普适性作为一种被广泛记录和验证的模式在各种不同尺度和领域中展现了其惊人的一致性。然而，尽管这些规律已被实证学科反复确认，但对于普适性的严格数学基础仍存在着诸多未知之谜。</p>
<p>– <a href="https://mp.weixin.qq.com/s/X72WIF0qzPMMRKDoKJiDZw">译文</a></p>
</blockquote>
<p>感觉这就是我一直想要追求的科研道路，但如何从细节入手，进入这一方世界，当前的我还一无所知。</p>
<p>自然是一朵变幻莫测的云，永远如一，又从不相同。 —— Ralph Waldo Emerson，《历史》(1841年)</p>
<p>译文一些摘要：</p>
<ul>
<li>在一个包含许多相互作用组件的系统上无法执行切实可行的计算，这一现象被称为“维数诅咒”。尽管存在这个诅咒，但是当组件数量足够大时，通常会出现一个令人惊奇的现象：复杂系统的聚合属性（注：就是统计量，例如均值）可以不可思议地再次变得可预测，并由简单的自然法则支配。</li>
<li>更令人惊讶的是，整个系统的宏观规律常常在很大程度上与控制系统内部单个组件的微观规律无关。换句话说，人们可以用完全不同类型的对象替换微观组件，并在宏观层面上获得相同的控制规律。这意味着，无论系统的微观组成如何，只要系统的组件数量足够多，宏观规律就会出现，并且这些规律可以独立于微观组件的特性而存在。我们就说宏观规律是普适的。</li>
<li>大数定律（Law of large numbers）：在数学与统计学中，大数定律又称为大数法则、大数律，是描述相当多次数重复实验后的结果的定律。根据这个定律，随着样本数量的增加，其算术平均值越来越有高的几率接近期望值。大数定律非常重要，因为它“说明”了一些随机事件均值的长期稳定性。人们发现，在重复试验中，随着试验次数的增加，事件发生的频率趋向于一个稳定值；人们同时也发现，在对物理量的测量实践中，测定值的算术平均也具备稳定性。比如，我们向上抛掷一枚硬币，硬币落下后哪一面朝上是偶然的，但当我们抛硬币的次数足够多后，达到上万次甚至几十万、几百万次之后，我们会发现硬币每一面向上的次数约占总次数的二分之一，亦即偶然中包含着必然。大数定律是数学和自然界中最简单、最容易理解的普适性规律之一，但它绝不是唯一的一个。</li>
<li>另一个最基本的普适性规律的例子是中心极限定理（Central Limit Theorem）。粗略地说，这个定理断言，如果一个统计量是由许多独立且随机波动的组成部分组合而成，且没有一个组成部分对整体有决定性影响，那么这个统计量将近似地按照一种称为正态分布（或高斯分布）的规律分布，或者更通俗地称为钟形曲线。这个规律是普遍的，因为无论个别成分如何波动，或者成分有多少个，它都成立（尽管成分数量越多，规律的准确度越高）。</li>
<li>中心极限定理存在着一些扩展，它们是针对某些略有不同的统计数据类型的普适性规律。本福德定律（Benford’s Law）就是一个例子，它是关于大量级统计数据的前几位数字的一个普适性规律，如一个国家的人口数量或账户的金额大小；这个法则给出了一些反直觉的预测，比如，在自然界中出现的任何给定统计数据都更可能以数字1开头，而不是数字9开头——实际上以1开头的概率是以9开头的六倍多。</li>
<li>类似地，Zipf 定律是描述特定类别中最大统计量的普适性规律，例如世界上人口最多的国家或英文中使用频率最高的单词。它指出，统计数据的大小通常与其排名成反比；因此，例如，第十大的数据大约是第五大数据的一半大小。这个法则对于最顶端的两三个数据可能不太精确，但在之后的数据中准确性提高。与数学上较容易理解的中心极限定理和本福德定律不同，Zipf 定律是基于经验的。它是通过实践观察而确定的，但数学家们尚未给出一个完全满意和有说服力的解释，来说明这个定律怎样产生以及为什么具有普适性。</li>
<li>在20世纪50年代，著名物理学家和诺贝尔奖得主尤金·维格纳（Eugene Wigner）研究了这些共振统计数据，并提出了一个非凡的数学模型来解释它们，就是我们现在所称的随机矩阵模型（random matrix model）。这些模型精确的数学细节太过技术性，在此不便描述。但总的来说，可以将这样的模型看作是一个大量质量的集合，所有质量都通过各种随机选择的、不同强度的弹簧连接在一起。这样一个机械系统将在一定的频率下振荡（或共振）；维格纳假设认为，大型原子核的共振应该类似于随机矩阵模型的共振。特别地，它们应呈现相同的排斥效应。因为可以严格证明随机矩阵模型的频率排斥，所以可以对核共振实验观察到的相同现象提供启发式的解释。高斯酉集（Gaussian Unitary Ensemble，GUE）假设</li>
<li>然而，普适性定律确实存在一定的局限。以中心极限定理为例，它预测了任何由众多小的、独立因素组合而成的数量都将趋向钟形曲线分布。但如果不满足该定理所需的前提假设，这个定律就可能不适用。比如说，所有成年人（男性和女性）的身高分布并不符合标准的钟形曲线，因为性别这一单一因素对身高的影响巨大，无法被其他所有环境和遗传因素平衡掉。</li>
<li>中心极限定理还有一个重要的失效场景，那就是构成某个量的独立因素并非真正独立，而是存在相关性，导致它们倾向于同涨同跌。在这样的情况下，可能形成“胖尾”现象（俗称“黑天鹅”），其数值会比中心极限定理所预测的平均值波动范围大得多。这一现象在金融模型中特别重要，在处理复杂金融工具时尤其明显，比如通过汇集抵押贷款所形成的抵押债务担保证券（CDOs）。只有在假设各个抵押贷款相互独立时，中心极限定理才能用来评估这些工具的风险；但在近期金融危机中（典型的“黑天鹅”事件），这种独立性假设戏剧性地崩溃了，导致许多持有这些证券的投资者和它们的保险公司遭受巨大财务损失。数学模型的强大仅取决于其背后的假设是否坚实。</li>
<li>普适性规律瓦解的第三种情形是系统没有足够的自由度来使得这些定律生效。举例来说，宇宙学家可以依据流体力学的普适性规律来描述整个星系的运动模式，然而，在仅受到三个天体引力影响的环境下，单个卫星的运动可能要复杂得多——这实际上就是所谓的火箭科学。</li>
<li>流体力学的普适性规律还会在介观尺度上失效：这个尺度比单分子的微观尺度要大，但又小于宏观尺度，后者是普适性规律适用的范围。一个典型的介观流体例子是流经血管的血液；构成这种液体的血细胞非常大，以至于它们不能简单地被视作微观分子的集合体，而应该被认为是具有复杂行为的介观实体。其他一些具有有趣介观特性的材料包括胶体流体（比如泥浆）、某些类型的纳米材料和量子点等；为这类材料建立准确的数学模型仍然是一个持续存在的挑战。</li>
<li>古德哈特定律（Goodhart’s law）表明，当一个度量指标成为目标时，它就不再是一个好的度量指标。</li>
</ul>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-07-e-pluribus-unum/index.html</guid>
  <pubDate>Wed, 06 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>从 Faker 夺冠讨论竞争与热爱</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-21-talking-from-faker/index.html</link>
  <description><![CDATA[ 




<p>好的想法需要记录，在这里动笔前，昨天睡前的好想法差点从指缝中溜走。</p>
<hr>
<p>Faker，闪耀英雄联盟十年的职业选手，带领 T1 再次登上王座。 这是他的第 4 座世界赛冠军奖杯，但他离上一次登顶已经过去很多年了。 想要回忆，都已经得翻过我人生几千天的篇章。在那个懵懂和充满斗气的年代， 他也是青涩，却以高超的技巧以魔王的姿态统治了游戏中的王朝。</p>
<p>但他又再次登顶了，当众多英雄折戟沉沙、黯然退出，为什么他还在坚持？ 为什么在沦入尘沙时坚持，为什么在近年当千年老二坚持？奶奶对他说， 要做便做到最好。他早已做到最好，为什么还在坚持？</p>
<p>我思考了很久。只有热爱，才能解释。</p>
<p>在越加竞争的世界里，我曾以为科研工作是一个宁静的港湾，但很显然，飓风已成，一切都将被席卷。 当资源的博奕无法避免，个人而言，躺平是最下层的解法。 为什么今年的比赛 Faker 带领的 T1 能够把把将 LPL 战队击穿，如人机一般？ 我在一个知乎的帖子里看到了最认同的解析：<a href="https://www.zhihu.com/question/630835967/answer/3294626092">“不惧强度对抗”</a>。 「不怕摩擦，不怕双方接触，寻求双方对抗。」在对抗中寻找战机和赛果。</p>
<p>未战先怯，败亡之道。</p>
<p>这狠狠地击中了我近年的“科研心态”。个人独立独行时，我们天然地寻求庇护之所，以求遮风挡雨、得以存活。 我们把对思想的追求降低到对生活的满足，就此沉沦。工作/事业，绝不会因为你把它当作一份工作而出色，它只会 因为你的热爱，你灌注的思想情绪而出彩。</p>
<p>固然，世界，特别是周遭的环境变化太大、压力太巨，但追求之心、努力之行不该有所松懈。不要让任何的标签定义，不要让任何的时间限制，不要让任何的思想束缚，一步一步、锤炼再锤炼、博弈再博弈。</p>
<p>与天斗，其乐无穷；与地斗，其乐无穷；与人斗，其乐无穷。</p>



 ]]></description>
  <category>thought</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-21-talking-from-faker/index.html</guid>
  <pubDate>Mon, 20 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>谈谈使用过的代码编辑器</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-15-talk-about-ides/index.html</link>
  <description><![CDATA[ 




<p>最近在使用 JupyterLab 时感觉受挫，想简单总结下自己这些年使用过的代码编辑器（有较长的使用时间）。</p>
<p>最开始接触的应该是 Sublime text3，简单、轻量、速度响应快，缺点是要自己搞定盗版问题、要自己配置、装插件等。</p>
<p>后面大量使用 R 和利用 R 开发，所以 RStudio 和 RStudio Server 使用非常多，它可以系统解决利用 R 进行的一系列数据处理和开发工作。缺点是单线程、有时候出问题会卡得很、与其他编程语言几乎很难协同，包括我常用的 Bash 和偶尔用的 Python，这类体验感很不好。</p>
<p>再后面有用过 Jupyter 笔记本，优点是简约轻便，它对 Python 的支持比较好，其他比较烂，界面和导航不太行，我近期尝试部署 JupyterLab 后发现对插件的支持体验不是很理想，然后插件对 R 的支持比较烂。</p>
<p>还用过 JetBrains 的一系列编辑器，包括支持 Python、Go等等的不同软件名称，但基本框架是一样的，后面在 IDEA 中都可以进行支持，优点是交互感好、界面专业、插件稳定好用、非常适合开发，缺点是不太适合数据分析探索类工作，也比较笨重。如果是学生/老师用户可以免费使用。</p>
<p>全部使用过的所有编辑器中综合体验感、性能、特性等比较完美的是 VS Code，不愧是大厂出产的产品，这些年陆续间歇在用，功能演进频繁但不失稳定，目前包括 R、Python、Jupyter的支持都比较好，更不说其他常用编程了。缺点是 VS Code 在 R 方面的专业性没有 RStudio 强（特别是图像预览的方便程度），另外界面有时候个人使用起来不是很喜欢（相比于 JetBrains 产品）。</p>
<p>当前还有一些新的产品在推动编辑器的发展，包括JB 的 Fleet，我觉得非常有前景。</p>
<p>当然了，终端上用过 Vim，它基本是命令行的无冕之王，虽然我极少在终端写代码，但用它基本已经满足了。之前还学习过 Vim 和相关配置、包括 Emacs，但实际上个人的使用偏好和职业领域导致这一块的使用极少有所进展，只是满足偶尔的编辑需求。而这部分需求，现状VS Code 都是可以替代的。</p>
<p>综上看，如果是从事与我类似的数据科学工作和开发的读者朋友，优先选择 VS Code 和 RStudio 是比较好的选择。</p>



 ]]></description>
  <category>R</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-15-talk-about-ides/index.html</guid>
  <pubDate>Tue, 14 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>随想</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-14-random-thoughts/index.html</link>
  <description><![CDATA[ 




<p>没有问题只有目标的数据分析，就像人有大脑却缺乏灵魂。</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-14-random-thoughts/index.html</guid>
  <pubDate>Mon, 13 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>SRA 测序数据下载和处理三部曲</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-13-download-and-prepare-sra-data/index.html</link>
  <description><![CDATA[ 




<p>这里简单记录和备忘下下载和预处理 SRA 数据我常用的三个基本步骤。</p>
<section id="依赖准备" class="level2">
<h2 class="anchored" data-anchor-id="依赖准备">依赖准备</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge parallel-fastq-dump <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sra-tools&gt;=3.0.0'</span> fastp</span></code></pre></div>
</section>
<section id="步骤" class="level2">
<h2 class="anchored" data-anchor-id="步骤">步骤</h2>
<ol type="1">
<li>下载</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--max-size</span> 100GB <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> yes <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> yes <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> SRR8670672</span></code></pre></div>
<ol start="2" type="1">
<li>转换数据格式为 FASTQ</li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parallel-fastq-dump</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> 20 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> fq/ <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--split-3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gzip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> SRR8670672</span></code></pre></div>
<ol start="3" type="1">
<li>预处理 FASTQ 文件</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> fq/SRR8670672_1.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-I</span> fq/SRR8670672_2.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> output/SRR8670672_1.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> output/SRR8670672_2.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span> output/SRR8670672.html <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-j</span> output/SRR8670672.json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--thread</span> 16 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dont_overwrite</span></span></code></pre></div>
<p>如果多个文件还可以结合 <code>multiqc</code>。</p>


</section>

 ]]></description>
  <category>note</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-13-download-and-prepare-sra-data/index.html</guid>
  <pubDate>Sun, 12 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>dont forget</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-10-29-dont-forget/index.html</link>
  <description><![CDATA[ 




<p>不要忘记，有一个诺贝尔奖的梦。</p>
<p>不要忘记，最多也就剩下四十余年。</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-10-29-dont-forget/index.html</guid>
  <pubDate>Sat, 28 Oct 2023 16:00:00 GMT</pubDate>
</item>
</channel>
</rss>
