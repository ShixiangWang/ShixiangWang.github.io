<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Reasoning</title>
<link>https://shixiangwang.github.io/index.html</link>
<atom:link href="https://shixiangwang.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Reasoning is a blog dedicated to exploring the intersection of data science, bioinformatics, and personal insights.</description>
<generator>quarto-1.3.361</generator>
<lastBuildDate>Mon, 11 Dec 2023 16:00:00 GMT</lastBuildDate>
<item>
  <title>诗歌存档</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-12-the-archive-of-poem/index.html</link>
  <description><![CDATA[ 




<p>存档下研究生期间写的一些诗，主要从<a href="https://www.jianshu.com/nb/8047834">简书</a>搬运过来。大抵作于16年底到19年初。</p>
<center>
<section id="电梯" class="level3">
<h3 class="anchored" data-anchor-id="电梯">电梯</h3>
<p>楼上的人想下来</p>
<p>楼下的人想上去</p>
<p>在电梯门口相遇</p>
<p>奔往不同的去处</p>
<p>夜深了</p>
<p>众人归寝</p>
<p>他似从未闪过你的眼窗</p>
<p>你也未曾入了他的梦</p>
</section>
<section id="脑中住着一个恶魔" class="level3">
<h3 class="anchored" data-anchor-id="脑中住着一个恶魔">脑中住着一个恶魔</h3>
<p>我终于发现——</p>
<p>我的脑中，住着一个</p>
<p>喋喋不休的恶魔</p>
<p>它巧妙地隐藏在</p>
<p>我思绪的背后，如此小心地</p>
<p>偷偷窥视着我的一切</p>
<p>以至于，二十二年的时光里</p>
<p>我毫无所知</p>
<p>它第一次出现踪迹时</p>
<p>我还小，还年轻</p>
<p>现在我知道，它一直</p>
<p>躲在我思绪的影子下</p>
<p>它的动作太快，我的上一个念头</p>
<p>才产生反应，它已经</p>
<p>没有了踪迹</p>
<p>我不知道我现在怎么发现了它</p>
<p>正如我知道它曾经有被我发现</p>
<p>啊，曼妙的思潮</p>
<p>涌过了时空的海洋</p>
<p>降临于我之身</p>
<p>贫瘠的文字和韵律般的诗词怎能描述</p>
<p>那与我共生的恶魔啊</p>
<p>闪烁的火花被语言粘附</p>
<p>怎能寻得来时的去处——</p>
<p>便是我同恶魔一起从天国降落之地</p>
</section>
<section id="我们在追寻着什么" class="level3">
<h3 class="anchored" data-anchor-id="我们在追寻着什么">我们在追寻着什么</h3>
<p>我们在追寻着什么</p>
<p>像夜空追寻黎明</p>
<p>像喧嚣追寻安静</p>
<p>厌倦着黑夜，又寻觅着孤寂</p>
<p>我们在追寻着什么</p>
<p>像群星围绕着明月</p>
<p>像鹤立在鸡群</p>
<p>突显着自立，又遮掩着卑微</p>
<p>我们在追寻着什么</p>
<p>像头仰望着星空</p>
<p>像脚觅着实地</p>
<p>怀揣着梦想，又难以飞起</p>
<p>我们在追寻着什么</p>
<p>像夸父追逐着金乌</p>
<p>像愚公搬弄着山石</p>
<p>愚昧地坚持，又诚恳地守望</p>
<p>我们在追寻着什么</p>
<p>像不甘坠在平凡</p>
<p>像生活归于平淡</p>
<p>追寻着什么，丢失了什么</p>
</section>
<section id="蝶恋花一" class="level3">
<h3 class="anchored" data-anchor-id="蝶恋花一">蝶恋花（一）</h3>
<p>枫叶落红蝉韵歇。一觉秋深，窗外风声烈。</p>
<p>柳色犹新珠露结，厌教人世轻离别。</p>
<p>故友但去音笑绝。有限心身，仍共年年月。</p>
<p>何必年光留且住，随风吹取三山去。</p>
<blockquote class="blockquote">
<p>三山：古代神话，东方大海里有三座仙山，叫做蓬莱、方丈、瀛州</p>
</blockquote>
</section>
<section id="蝶恋花二" class="level3">
<h3 class="anchored" data-anchor-id="蝶恋花二">蝶恋花（二）</h3>
<p>阅尽友朋难久聚。旧梦残痕，空落思如许。</p>
<p>相忆常叹别离苦，秋风日夜无头绪。</p>
<p>拟送相思明月处。时雨轻寒，无计留它住。</p>
<p>一树桂花香暗渡，楼高不见来时路。</p>
</section>
<section id="夜行者" class="level3">
<h3 class="anchored" data-anchor-id="夜行者">夜行者</h3>
<p>我是夜中行者，</p>
<p>在梦眠时入睡，</p>
<p>在梦醒时工作。</p>
<p>睡时我总爱睁着眼睛，</p>
<p>摆动身躯，频频顿首，</p>
<p>容易，不废气力。</p>
<p>讨厌的是有时没法，精神紧张就</p>
<p>只能收紧身形，端坐，</p>
<p>好一副可爱模样。</p>
<p>我爱工作，</p>
<p>我是夜行者，</p>
<p>我爱工作。</p>
<p>随意地逡巡，行走</p>
<p>走过四季，边走边</p>
<p>望星空，望远山，望</p>
<p>春的夜风抚柳，听</p>
<p>夏的蛙蝉相和成歌，闻</p>
<p>秋的桂树落香，触</p>
<p>冬的雪花融化，</p>
<p>——成了水</p>
<p>喔！这一年的四季。</p>
<p>喔！这夜的行者。</p>
<p>伟大的夜的行者，</p>
<p>我要唱歌，喔——</p>
<p>该死的长喉，却是个咽炎患者！</p>
<p>那就继续走吧，</p>
<p>等那梦眠时我便要睡去，如何</p>
<p>再赏这多情的四季，</p>
<p>再望情坚不移的夜空星辰。</p>
<p>啊，上天，不要</p>
<p>不要让我躺下——</p>
<p>让我继续走，前行！</p>
<p>我是夜的行者。</p>
<p>啊，不要——</p>
<p>一躺下，</p>
<p>满是空虚，脑中会传来</p>
<p>心里的声音。</p>
</section>
<section id="疯子对傻子" class="level3">
<h3 class="anchored" data-anchor-id="疯子对傻子">疯子对傻子</h3>
<p>你问，</p>
<p>你别问——</p>
<p>我从哪里来，</p>
<p>说得清</p>
<p>说的不清。</p>
<p>你念，</p>
<p>你别念——</p>
<p>我往何处去，</p>
<p>不改变</p>
<p>一直改变。</p>
<p>你笑，</p>
<p>你别笑——</p>
<p>我为何在这里，</p>
<p>人只道</p>
<p>初衷不复。</p>
<p>你哭，</p>
<p>你别哭——</p>
<p>昨梦明朝尽空，</p>
<p>恭喜我</p>
<p>已修成疯。</p>
</section>
<section id="点绛唇-望潇湘" class="level3">
<h3 class="anchored" data-anchor-id="点绛唇-望潇湘">点绛唇 望潇湘</h3>
<p>一夜春风，</p>
<p>河边吹绿柳多少？</p>
<p>数声啼鸟，</p>
<p>频传春芳晓。</p>
<p>才过春初，</p>
<p>却也春将老。</p>
<p>远山道，</p>
<p>清明芳草，</p>
<p>看取西天渺。</p>
</section>
<section id="暮春早行" class="level3">
<h3 class="anchored" data-anchor-id="暮春早行">暮春早行</h3>
<p>垂枝映絮柳，情多添为愁。</p>
<p>人生几回乐，微风绿春波。</p>
</section>
<section id="清明崇明" class="level3">
<h3 class="anchored" data-anchor-id="清明崇明">清明·崇明</h3>
<p>草木方始绿，时节入春深。</p>
<p>遥叹连天水，近寻众芳痕。</p>
<p>少小囿世面，老大拭喧尘。</p>
<p>泛舟江海上，愿为钓鱼翁。</p>
</section>
<section id="春晨惊起" class="level3">
<h3 class="anchored" data-anchor-id="春晨惊起">春晨惊起</h3>
<p>恍然大梦春秋去，</p>
<p>不知鸿雁南归来。</p>
<p>惊起一瞥门窗外，</p>
<p>楼下樱花倚春开。</p>
</section>
<section id="湿落的花你莫留恋" class="level3">
<h3 class="anchored" data-anchor-id="湿落的花你莫留恋">湿落的花，你莫留恋</h3>
<p>如果你不曾料想，</p>
<p>又岂会无端地渴望。</p>
<p>机械钟表上起了发条，</p>
<p>是它在循环——</p>
<p>还是你在旋转。</p>
<p>听四月的风声暗哑，</p>
<p>低摆抽绿的絮柳，</p>
<p>园间一夜绽满的樱花，</p>
<p>共着桃花，</p>
<p>被连雨摧残。</p>
<p>湿落一地的花啊，</p>
<p>你是樱花，还是桃花。</p>
<p>你原是渴望春雨滋润，</p>
<p>还是期待飞落前的旋转？</p>
<p>你也莫想，</p>
<p>落红化入春泥，</p>
<p>也莫贪恋，</p>
<p>这人间的风景。</p>
<p>四周有的是水泥，</p>
<p>不缺的是轮回的春季。</p>
<p>我在烟雨朦胧中写下了你，</p>
<p>也只是因为，</p>
<p>手里的机器，</p>
<p>比我拥有更多的感情。</p>
</section>
<section id="夜中的诗人" class="level3">
<h3 class="anchored" data-anchor-id="夜中的诗人">夜中的诗人</h3>
<p>光消匿醒目</p>
<p>夜于风中放歌</p>
<p>委身黑暗，或鲜明</p>
<p>你无须选择</p>
<p>选择打造的包袱</p>
<p>不必拿起，你</p>
<p>孤注一掷，不留退路</p>
<p>月是你的魂侣</p>
<p>天晴，或多雨</p>
<p>是一种姿态，只为</p>
<p>靠近她</p>
<p>再无忧伤，反复</p>
<p>你是？</p>
<p>躯壳里的空空</p>
<p>月亮之上的白白</p>
<p>空白，哦——</p>
<p>是你，夜中的诗人</p>
<p>心在跳，思想</p>
<p>在发烫</p>
</section>
<section id="五月" class="level3">
<h3 class="anchored" data-anchor-id="五月">五月</h3>
<p>一场大雨，或天晴</p>
<p>将四月的尾身摆弄</p>
<p>水与空气升起嘈杂的共舞</p>
<p>冲刷犹存春痕</p>
<p>垂降夏季的五月</p>
<p>温度骤击突来的灼感</p>
<p>掀起层层陈年的躯皮</p>
<p>燥热，或寒酷</p>
<p>一时体内沉浸</p>
<p>年年的感觉回归</p>
<p>在这个初来的夏日</p>
<p>记忆恍若齿轮</p>
<p>回拨过往的印记</p>
<p>真也是齿轮——</p>
<p>盘过一圈，忘记</p>
<p>是在拨后，或往前</p>
<p>也忘记，正站在</p>
<p>旧时开端的终点</p>
</section>
<section id="如果风不再刮" class="level3">
<h3 class="anchored" data-anchor-id="如果风不再刮">如果风不再刮</h3>
<p>如果风不再刮</p>
<p>雨将笔直地下</p>
<p>多少雨外的等待</p>
<p>一场雨中的花开</p>
<p>如果风不再刮</p>
<p>小草无声地艳羡</p>
<p>众木躯干的挺直</p>
<p>多少历史的沧桑</p>
<p>验证谁内心执着挺拔</p>
<p>谁人倒下</p>
<p>如果风不再刮</p>
<p>古道西风瘦马</p>
<p>笑成满纸黄沙</p>
<p>铮铮心怀</p>
<p>谁人来写</p>
<p>谁人来听</p>
<p>谁人来看</p>
</section>
<section id="行走在五月的风雨中" class="level3">
<h3 class="anchored" data-anchor-id="行走在五月的风雨中">行走在五月的风雨中</h3>
<p>五月的风雨初骤</p>
<p>敲打你灯下的身影清瘦</p>
<p>于飘零之中，绿叶登台</p>
<p>恍然一场离家的远游</p>
<p>乘风而上</p>
<p>随雨而下</p>
<p>风雨中的叶</p>
<p>风雨中的你</p>
<p>逢过春的花已鲜明</p>
<p>润着水的绿正斑驳</p>
<p>该骂这天的捉弄</p>
<p>该笑这云的情多</p>
<p>看天空放阴</p>
<p>你兀自犹豫着</p>
<p>行走在初夏的雨后</p>
</section>
<section id="当思绪反复成河" class="level3">
<h3 class="anchored" data-anchor-id="当思绪反复成河">当思绪反复成河</h3>
<p>我在寻找一个词语</p>
<p>砥砺思绪，寻找</p>
<p>一个开始，一句借口</p>
<p>寻找，不停地</p>
<p>要文艺，像那</p>
<p>像那悲伤逆流成河</p>
<p>唯美诗意</p>
<p>要洒脱，将会</p>
<p>悲喜均不沾</p>
<p>无言升落</p>
<p>可惜我最终也没找到</p>
<p>或许我也说不出口</p>
<p>一日一夜的二十四小时</p>
<p>八万六千四百秒，有些精准</p>
<p>当我的心跳敲过这时间</p>
<p>地球又绕过了八万里的路程</p>
<p>反复的起点，也是</p>
<p>反复的终点</p>
<p>无言的岁月，反复</p>
<p>我的思绪，反复</p>
<p>反反复复在过去的两万多个日子里</p>
<p>不觉成河</p>
<p>而我又该流向哪里呢</p>
<p>我的大海</p>
<p>我的思潮奔涌</p>
<p>却还没有走到大陆尽头</p>
</section>
<section id="道化之花" class="level3">
<h3 class="anchored" data-anchor-id="道化之花">道化之花</h3>
<p>他躺在床上</p>
<p>看海波上淫淫的细雨</p>
<p>窗外，有海岸</p>
<p>也有天空</p>
<p>怎样去塑造一幅画镜</p>
<p>我心想</p>
<p>在作者的故事里</p>
<p>在太宰的内心处</p>
<p>退潮的海水</p>
<p>释放对世界侵蚀的火焰</p>
<p>道化之花</p>
<p>在那个女人的身体上绽放，枯萎</p>
<p>是的，那个一同殉情的女人</p>
<p>谁知道是我将她杀死？</p>
<p>我的朋友，你们可知道</p>
<p>叶藏望向窗外</p>
<p>可别离我而去，我的朋友</p>
</section>
<section id="那年七夕" class="level3">
<h3 class="anchored" data-anchor-id="那年七夕">那年七夕</h3>
<p>梦里一度贪欢，推杯到天明。</p>
<p>风雨旧时已谙，何处寻真情？</p>
<p>倚马待，望流云，天蓝人痴云不停。</p>
<p>何似幼时观月，月在人无心！</p>
<p>空中百鸟低巡，小镇响雷鸣。</p>
<p>日照离人一群，有晴也无情。</p>
<p>枝折花残谁在意，最是愁煞少年心：</p>
<p>肯为新词把酿得的才学倾。</p>
<p>品得书中颜玉，词新意不新。</p>
<p>看罢太白诗行，千愁同古今。</p>
<p>读新词，写旧诗，一生伴我度悲兴。</p>
<p>万物莫不月似，当自负亏盈！</p>
<p>七夕一岁又至，泪多软语频。</p>
<p>长情更是短情，此山万年青！</p>
<p>自古世间少味趣，诗与佳人共追寻。</p>
<p>恰如我意不负长词不负卿。</p>
<blockquote class="blockquote">
<p>又翻出了14年七夕写的诗，心中莫名伤感。不，不应称为莫名。相同的情绪总是会在心底的某个时间点发酵，撒播出愁绪的气味。</p>
<p>曾把青春看做一个年龄阶段的必然经历。但我已不清楚我现在是入了青春，还是已在青春之外。时间总是耦合经历，把成长的气息悄然掩盖，而其中横跨的岁月光景，似乎仅在海马区留下关联的模式，在偶然的联想中掀起朵朵的记忆之花，提示过去真的不复存在。说到底，我们都是时间的扫墓人。</p>
</blockquote>
</section>
<section id="昏梦游思" class="level3">
<h3 class="anchored" data-anchor-id="昏梦游思">昏梦游思</h3>
<p>风似乎从海边刮来</p>
<p>轻轻地，绕过森林与高楼</p>
<p>柔柔地，轻抚垂柳与衣袖</p>
<p>我站在高楼，感受着</p>
<p>风正从海边拂来</p>
<p>暑热退散</p>
<p>天上的火球降为远景</p>
<p>由黄转红的光色</p>
<p>洗澄金日的余晖</p>
<p>把留有残温的美景</p>
<p>送将夜的君国</p>
<p>一只鸟儿不耐寂寞，啁啾</p>
<p>我猜想它不是在唱歌——</p>
<p>文字里早已写烂</p>
<p>求偶吧？身体往往</p>
<p>比灵魂更诚实</p>
<p>人儿又何尝耐得住啊，繁华的</p>
<p>闪耀着白光，黄光，霓虹光的千盏万盏</p>
<p>在夜兽的胃腔中游弋，呼吸</p>
<p>争夺尚未分解的残食</p>
<p>直到杯盘狼藉，独自蜷缩入梦</p>
<p>盼着，梦里也是这般美好的世界</p>
<p>一个只关于兽的世界</p>
<p>而我，早已化身成兽</p>
</section>
<section id="踏莎行-端午至" class="level3">
<h3 class="anchored" data-anchor-id="踏莎行-端午至">踏莎行 端午至</h3>
<p>夜色将阑，</p>
<p>黄鹂报晓，</p>
<p>树头绿叶如新袄。</p>
<p>浮光透尽室窗明，</p>
<p>群楼难掩晨辉袅。</p>
<p>芳草勃勃，</p>
<p>离乡渺渺，</p>
<p>手拨箬叶眉心挑。</p>
<p>佳节又至欲销魂，</p>
<p>频传故梦托家老。</p>
</section>
<section id="听歌" class="level3">
<h3 class="anchored" data-anchor-id="听歌">听歌</h3>
<p>旋律升起</p>
<p>音调深浅高低</p>
<p>交纵组合开始，美妙啊</p>
<p>我渴望下一段</p>
<p>心底有个相同的节奏</p>
<p>恍若红日升起</p>
<p>普照世界啊，音乐</p>
<p>要什么神佛</p>
<p>好像什么人要来了</p>
<p>或是正在走过</p>
<p>生活啊，人类</p>
<p>我呆立良久</p>
<p>心有所思</p>
<p>物皆物语</p>
</section>
<section id="独自莫凭楼" class="level3">
<h3 class="anchored" data-anchor-id="独自莫凭楼">独自莫凭楼</h3>
<p>夜塔拨紫月拨银，</p>
<p>远灯照，近蝉鸣。</p>
<p>斜窥小径少人行，</p>
<p>空余暗柳，</p>
<p>倚光落疏影。</p>
<p>不闻浦江远水流，</p>
<p>近悠悠，远断愁。</p>
<p>难悟人间有情眸，</p>
<p>唯有短叹，</p>
<p>独自莫凭楼。</p>
</section>
<section id="失眠" class="level3">
<h3 class="anchored" data-anchor-id="失眠">失眠</h3>
<p>躺着</p>
<p>凌晨三点</p>
<p>一点亮点</p>
<p>又一个三点</p>
<p>无眠……</p>
<p>我怕是病了</p>
<p>入骨的热潮裹挟</p>
<p>夜幕的深渊</p>
<p>靠近，一点</p>
<p>一点，又一点</p>
<p>在夏季的凌晨三点</p>
</section>
<section id="通宵" class="level3">
<h3 class="anchored" data-anchor-id="通宵">通宵</h3>
<p>我隐匿于黑暗</p>
<p>沉醉于思考的逻辑</p>
<p>寂静夜色里</p>
<p>指针划过零点的界限</p>
<p>在屏幕微芒中显露尖锐</p>
<p>我浑然不觉</p>
<p>思维在图影的脉搏间跳跃</p>
<p>奔跑、迷失</p>
<p>“黑夜给了我黑色的眼睛”</p>
<p>我用它影射光明</p>
<p>信息汹涌流动着</p>
<p>在闪耀RGB编码的颜色光影里</p>
<p>我无心睡眠</p>
<p>也无心失眠</p>
</section>
<section id="寂寞诗" class="level3">
<h3 class="anchored" data-anchor-id="寂寞诗">寂寞诗</h3>
<p>寂寞的人逢着寂寞的夜</p>
<p>等着同样寂寞的人</p>
<p>该是何等的寂寞？</p>
<p>寂寞上的寂寞</p>
<p>寂寞后的寂寞</p>
<p>寂寞里的寂寞</p>
<p>最终能够不寂寞？</p>
<p>有点寂寞</p>
<p>喜欢说挺寂寞</p>
<p>恐怕说好寂寞</p>
<p>说不出不寂寞</p>
<p>哦，寂寞</p>
</section>
<section id="尘光" class="level3">
<h3 class="anchored" data-anchor-id="尘光">尘光</h3>
<p>白天的时光里身处喧嚣</p>
<p>夜晚至深时终归安宁</p>
<p>这城市静卧后</p>
<p>掸去了多少尘光</p>
<p>我就要在这物心两安的时刻睡去时</p>
<p>远桥的车光恍惚闪过</p>
<p>尘光还在——</p>
<p>我侧脸望向门窗外的夜空</p>
<p>最后的一眼里——星光遮掩</p>
<p>也许它一往如常</p>
</section>
<section id="夏末" class="level3">
<h3 class="anchored" data-anchor-id="夏末">夏末</h3>
<p>阳光是无声的沉默</p>
<p>轻风在无言地相守</p>
<p>这温暖而清爽的夏末</p>
<p>几月的酷热退散</p>
<p>季节转向初秋时候</p>
<p>我在小河旁漫走</p>
<p>眼中的绿色</p>
<p>依垂在杨柳枝头</p>
<p>粼粼泛起的波光中</p>
<p>我又想起了你</p>
<p>我又想起了你</p>
<p>眼波里正泛起的湖光粼粼</p>
<p>依垂在柳梢的绿色</p>
<p>映着我在河边走过</p>
</section>
<section id="我在风中听雨" class="level3">
<h3 class="anchored" data-anchor-id="我在风中听雨">我在风中听雨</h3>
<p>我在风中听雨</p>
<p>在雨中闻风</p>
<p>在风雨中想你</p>
<p>回到室内时</p>
<p>风雨隔窗远去</p>
<p>恍如背景</p>
<p>灰白天际里</p>
<p>我轻轻将你放入心底</p>
<p>抬眼向西</p>
<p>所有方向</p>
<p>在一片迷离</p>
</section>
<section id="我是真的爱你" class="level3">
<h3 class="anchored" data-anchor-id="我是真的爱你">我是真的爱你</h3>
<p>我是真的爱你</p>
<p>不仅爱你的身体</p>
<p>也爱你的心</p>
<p>爱阳光照你时的明媚</p>
<p>也爱微风轻抚你时的温柔</p>
<p>我是真的爱你</p>
<p>愿解开所有物质的锁链</p>
<p>放下精神上的所有</p>
<p>远赴千里</p>
<p>只为将你拥入怀中</p>
<p>我是真的爱你</p>
<p>衷心地许下每一个承诺</p>
<p>又默默将它们守候，见证我们</p>
<p>走过以后所有的一年四季</p>
<p>春夏秋冬</p>
</section>
<section id="爱你的心" class="level3">
<h3 class="anchored" data-anchor-id="爱你的心">爱你的心</h3>
<p>时间抹不去</p>
<p>疾病带不走</p>
<p>别人拿不了</p>
<p>爱你的心</p>
<p>我爱的人呵</p>
<p>只有你能将它呵护</p>
<p>又能把它摧毁</p>
<p>好好对待它吧</p>
<p>它因你而坚强存在</p>
<p>也因你而软弱无助</p>
</section>
<section id="立冬后" class="level3">
<h3 class="anchored" data-anchor-id="立冬后">立冬后</h3>
<p>立冬成昨日，好风下眉秋。</p>
<p>懒起梳妆晚，对镜已白头。</p>
</section>
<section id="如一" class="level3">
<h3 class="anchored" data-anchor-id="如一">如一</h3>
<p>一边是想你的绵愁</p>
<p>一边是工作的烦忧</p>
<p>我望着窗外阴沉的上海</p>
<p>这已是第二个年头</p>
<p>慢道忧虑的日子终将过去</p>
<p>去了归来，频频回首</p>
<p>一边是遇你的欢喜</p>
<p>一边是成长的苦痛</p>
<p>我在冬日写下此诗时</p>
<p>岁月正努力奔往春季</p>
<p>诗中也努力与四季作一场别离</p>
<p>末尾刻下爱你的如一</p>
</section>
<section id="认岁月" class="level3">
<h3 class="anchored" data-anchor-id="认岁月">认岁月</h3>
<p>若寻岁月身，音容辨旧痕。</p>
<p>凭吊芳华易，健忘父母恩。</p>
</section>
<section id="晨起怅然有感" class="level3">
<h3 class="anchored" data-anchor-id="晨起怅然有感">晨起怅然有感</h3>
<p>一盏黎明一盏灯，一宿思绪梦难成。</p>
<p>只恨神州地高远，别后山河是故人。</p>
</section>
<section id="我昨日逢着一条狗" class="level3">
<h3 class="anchored" data-anchor-id="我昨日逢着一条狗">我昨日逢着一条狗</h3>
<p>我昨日逢着一条狗</p>
<p>我散步路过的时候</p>
<p>看到它透过窗户</p>
<p>正对着我咧嘴笑</p>
<p>狗什么时候学会笑的？</p>
<p>我心里惊讶得很——</p>
<p>居然跟人一样</p>
<p>皮肉拉扯，琢磨不透</p>
<p>可能是在问好吧</p>
<p>我点点头</p>
<p>倒是一条好狗</p>
<p>眼睛也闪着亮泽</p>
<p>今天我又想遇着它</p>
<p>却看到门口小孩杵着狗皮在耍</p>
<p>一身贼亮的毛</p>
<p>还有塌陷下去的笑</p>
</section>
<section id="一场九百年的梦" class="level3">
<h3 class="anchored" data-anchor-id="一场九百年的梦">一场九百年的梦</h3>
<p>我做了一场九百年的梦</p>
<p>旁人问我为何</p>
<p>我告诉他——</p>
<p>我自己感觉如此呀</p>
<p>我的感觉一向准确</p>
<p>九百年，不多不少</p>
<p>在那之前，老师叫我们——</p>
<p>用“一场”造个句子</p>
<p>正好不多不少，九百年</p>
<p>我睡了九百年</p>
<p>然后写了下来</p>
<p>他骂我不老实——</p>
<p>“你，你怎可能睡得这么久？”</p>
<p>我微笑摇摇头</p>
<p>指了指我的席位</p>
<p>牌子上写着——</p>
<p>“一场九百年的梦”</p>
</section>
<section id="吃掉你" class="level3">
<h3 class="anchored" data-anchor-id="吃掉你">吃掉你</h3>
<p>我已经饱了</p>
<p>胃口撑的满满</p>
<p>可是……</p>
<p>为什么心里还有欲望</p>
<p>想要吃掉你</p>
<p>春风有些安静</p>
<p>请感受我的呼吸——</p>
<p>亲爱的</p>
<p>在床上，在梦里</p>
<p>来吧，让我们</p>
<p>依靠彼此</p>
<p>不要沉醉这夜</p>
<p>亲爱的，</p>
<p>也不要悲恼这黑</p>
<p>我将你挽进心底</p>
<p>不管它</p>
<p>明月圆缺</p>
<p>窗外迷离</p>
</section>
<section id="做梦" class="level3">
<h3 class="anchored" data-anchor-id="做梦">做梦</h3>
<p>似假非假，似空非空。</p>
<p>如不醒来，未觉梦中。</p>
</section>
<section id="去做梦" class="level3">
<h3 class="anchored" data-anchor-id="去做梦">去做梦</h3>
<p>夜沸腾得厉害</p>
<p>在黑暗里熬煮着</p>
<p>摇晃的城市里</p>
<p>大地满是水泡</p>
<p>那惨白的</p>
<p>早已退避的月光</p>
<p>是往别处去了</p>
<p>还是正蜷缩养伤？</p>
<p>还是睡去吧——</p>
<p>去梦里吧</p>
<p>至少梦里，可能</p>
<p>有一个想象的太阳</p>
</section>
<section id="小时" class="level3">
<h3 class="anchored" data-anchor-id="小时">24小时</h3>
<p>工作、学习、吃饭与睡眠</p>
<p>这日常的四件事情</p>
<p>将一天的24小时分割</p>
<p>一大段、一大段、一小段、一大段</p>
<p>还有究竟有多少间隙</p>
<p>我说不清</p>
<p>我好像做了很多</p>
<p>在这一天天的24小时</p>
<p>在这一段段分割的时空里</p>
<p>但却好像乱了</p>
<p>心里血液喷薄的红线</p>
<p>将身躯一圈圈紧绕</p>
<p>24小时，又24小时</p>
<p>我看不见它的线头</p>
<p>也瞧不见它的去处</p>
<p>只感觉越来越紧</p>
<p>冒着火色的双眼</p>
<p>越来难以看清</p>
<p>24小时够了吗？</p>
<p>不够再上24小时。</p>
<p>我在畅想，也在回望</p>
<p>可悲的是，就这样</p>
<p>本来连续的生命里</p>
<p>我活成了不连续的自、己</p>
</section>
<section id="我即将在这午后的阳光下睡去" class="level3">
<h3 class="anchored" data-anchor-id="我即将在这午后的阳光下睡去">我即将在这午后的阳光下睡去</h3>
<p>我即将在这午后的阳光下睡去</p>
<p>面对门窗，背靠办公椅</p>
<p>黄白的光斜着倾洒</p>
<p>在栏杆处投下斑驳的灰影</p>
<p>侵袭宿舍的每一个方寸</p>
<p>也照亮着这容身的方寸</p>
<p>微闭的眼睛里</p>
<p>存着远方天空的片段</p>
<p>连续地播放着</p>
<p>是白芒白茫的记忆</p>
<p>一只难以呼唤其名的鸟</p>
<p>横着从中间飞过</p>
<p>叫着春天，催我睡去</p>
</section>
<section id="我们这座城市" class="level3">
<h3 class="anchored" data-anchor-id="我们这座城市">我们这座城市</h3>
<p>阳光混合氧气充斥这座城市</p>
<p>像世界上的其他一万座城市。</p>
<p>看的见的光与看不见的虚无和着</p>
<p>输送给这座城市人口养料。</p>
<p>百万，千万</p>
<p>寥寥字眼里埋葬人口下的生活：</p>
<p>我们精心得像蚂蚁构造这座城市，</p>
<p>也忙碌得像蚂蚁存在着却好像只是路过。</p>
<p>我们像单纯地渴望活着一样</p>
<p>渴望着黑暗甬道的下一个出口——</p>
<p>可是，我们依然按照路牌的指引</p>
<p>不自主地拥抱人流，涌入车厢</p>
<p>毫无畏惧地驶向又一个</p>
<p>又下一个黑暗的地方。</p>
<p>前进啊，</p>
<p>像与车轨一路摩擦前行的列车，</p>
<p>我们与这座城市碰撞相融，</p>
<p>直到分不清它是青春</p>
<p>还是它就是我们。</p>
</section>
<section id="相交的平行线" class="level3">
<h3 class="anchored" data-anchor-id="相交的平行线">相交的平行线</h3>
<p>我曾经以为，</p>
<p>两条平行直线不会相交，</p>
<p>但宇宙就是这样，</p>
<p>在视线的远方，</p>
<p>人生的某个拐点，</p>
<p>我们彼此开始交汇，</p>
<p>融合。</p>
<p>这是相对论的咒语——</p>
<p>它在一直在那里，</p>
<p>而我们一起在这里。</p>
<blockquote class="blockquote">
<p>在欧氏几何中，在两条平行线中做一条直线AB，以直线AB为半径以逆时针方向做圆，然后以直线AB为半径以顺时针方向再做一个圆，从两个圆的交点做垂线CD垂直于直线AB，若CD与AB的角的角度是90度，则说明两条平行线不会相交。</p>
<p>但欧几里得不敢思考当两条平行线无限长时的情况…..</p>
<p>于是包括罗素、黎曼在内的科学家假设当两条平行线无限长时，他们会在无穷远处相交。（例如：在地球的球面上，就会发现，相互垂直于赤道的经线会相交于北极点和南极点。）后来，非欧几何和黎曼空间就诞生了，该成果给了爱因斯坦很大的启发．</p>
</blockquote>
</section>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section">2018-06-15</h3>
<p>由来万夫勇，挟此生雄风。笑尽一杯酒，杀人都市中。</p>
<p>“剑术已成君把去，有蛟龙处斩蛟龙”。</p>
</section>
<section id="探春" class="level3">
<h3 class="anchored" data-anchor-id="探春">探春</h3>
<p>樱红在园绿在野，东君扶柳捧金蝶。</p>
<p>人间终把寒根断，三月花开好时节。</p>
</section>
<section id="section-1" class="level3">
<h3 class="anchored" data-anchor-id="section-1">2019-04-05</h3>
</section></center>




 ]]></description>
  <category>诗</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-12-the-archive-of-poem/index.html</guid>
  <pubDate>Mon, 11 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>少年时</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-12-the-poem-of-youth/index.html</link>
  <description><![CDATA[ 




<p>这里主要存储下大学期间随笔写作经整理的诗篇。</p>
<p>网页放一首。</p>
<center>
<p><strong>镜照</strong> <br></p>
<p>听夜风沉沉</p>
<p>弹奏在其中的吉他一声声</p>
<p>寂静的黑里</p>
<p>见不到家乡的月与星辰</p>
<p>远方，谁在等 <br></p>
<p>看秋叶层层</p>
<p>潜藏于体表的圆圈一轮轮</p>
<p>微冷的雨中</p>
<p>何处疗梦里的痴与伤痕</p>
<p>近处，我轻问 <br></p>
<p>山一程，水一程</p>
<p>一路千里的风尘</p>
<p>生命的刻度勾勒距离的尺度</p>
<p>我越走越浑</p>
<p>瞧，镜子里的身影</p>
<p>白皙的脸上斑点纵横</p>
<p>总被迷惑在模糊的清晰</p>
<p>而一走近</p>
<p>现实的自己</p>
<p>呈现得一滴不剩</p>
<p>这岁月的梦魇</p>
<p>该死的真诚 <br></p>
<p>逃不掉，如何跑</p>
<p>问问问，一声一声接一声</p>
<p>我对着我自己</p>
<p>里头是静止的灵魂</p>
外面是活着的人生 <br>
</center>
<p>全文见<a href="少年时.pdf">《少年时》</a></p>
<blockquote class="blockquote">
<p>感谢梦婷</p>
</blockquote>



 ]]></description>
  <category>诗</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-12-the-poem-of-youth/index.html</guid>
  <pubDate>Mon, 11 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>The world is not all sunshine and rainbows</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-08-the-world-is-not-all-sunshine-and-rainbows/index.html</link>
  <description><![CDATA[ 




<p>刷短视频的时候看到小孩跟史泰龙激情地对一段电影（洛奇）台词，把它翻找了出来，记录一下。</p>
<p>　　You let people stick a finger in your face and tell you you’re not good.</p>
<p>　　你让别人指着脸说你不好。</p>
<p>　　And when things got hard, you started to looking for something to blame, like a big shadow.</p>
<p>　　当遇到不顺心的事，你开始怪罪其他事，比如说巨大的阴影。</p>
<p>　　Let me tell you something you already know.</p>
<p>　　让我告诉你一些你已经知道的事情。</p>
<p>　　The world is not all sunshine and rainbows.</p>
<p>　　这世界不完全都是阳光和彩虹。</p>
<p>　　It’s a very mean and nasty place, and I don’t care how tough you are.</p>
<p>　　这是一个非常卑鄙险恶的世界，我不在乎你是多么坚强。</p>
<p>　　It will beat you to your knees and keep you there if you let it.</p>
<p>　　如果你屈服，他会把你打得永远趴在地上。</p>
<p>　　You, me or nobody is gonna hit as hard as life.</p>
<p>　　你，我，没有人能比生活更会击打人了。</p>
<p>　　But it’s not about how hard you hit. It’s about how hard you get hit and keep moving forward, how much you can take and keep moving forward.</p>
<p>　　但这不在于你击打的多重，而在于你能被击打的多重，仍保持前进，在于你能怎么承受，然后继续前进。</p>
<p>　　That’s how winning is done.</p>
<p>　　这才是真正的胜利。</p>
<p>　　Now if you know what you’re worth, go and get what you’re worth.</p>
<p>　　现在如果你知道你的价值，你就前进实现你的价值。</p>
<p>　　But you gotta be willing to take the hits, and not pointing fingers saying you aren’t where you wanna be because of him or her or anybody!</p>
<p>　　但你必须乐意承受挨打，而不是没能实现目标时却指着别人说是因为他或她的原因!</p>
<p>　　Cowards do that, and that ain’t you! You’re better than that!</p>
<p>　　懦夫才会那样做!你不是!你远比那个出色!</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-08-the-world-is-not-all-sunshine-and-rainbows/index.html</guid>
  <pubDate>Thu, 07 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>E pluribus unum: From Complexity, Universality</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-12-07-e-pluribus-unum/index.html</link>
  <description><![CDATA[ 




<p>标题是陶哲轩于 2012 年发表的<a href="https://direct.mit.edu/daed/article/141/3/23/27037/E-pluribus-unum-From-Complexity-Universality">一篇论文</a>题目，表达了从多样性、复杂性中产生统一、普遍性的意念。这可以涉及到社会、科学、文化或其他领域，强调在多样性和复杂性中寻找普遍性原则或价值观。</p>
<blockquote class="blockquote">
<p>探究宇宙中的秩序和混沌一直是科学研究的核心命题。陶哲轩教授的这篇洞察性文章引领我们进入普适的世界——一个展现了如何从错综复杂的微观动态系统中抽象出简明的宏观规律的奇妙领域。从统计学的经典规律到物理学中的相变现象，从自然数序列的神秘规律到量子力学的精确预测，普适性作为一种被广泛记录和验证的模式在各种不同尺度和领域中展现了其惊人的一致性。然而，尽管这些规律已被实证学科反复确认，但对于普适性的严格数学基础仍存在着诸多未知之谜。</p>
<p>– <a href="https://mp.weixin.qq.com/s/X72WIF0qzPMMRKDoKJiDZw">译文</a></p>
</blockquote>
<p>感觉这就是我一直想要追求的科研道路，但如何从细节入手，进入这一方世界，当前的我还一无所知。</p>
<p>自然是一朵变幻莫测的云，永远如一，又从不相同。 —— Ralph Waldo Emerson，《历史》(1841年)</p>
<p>译文一些摘要：</p>
<ul>
<li>在一个包含许多相互作用组件的系统上无法执行切实可行的计算，这一现象被称为“维数诅咒”。尽管存在这个诅咒，但是当组件数量足够大时，通常会出现一个令人惊奇的现象：复杂系统的聚合属性（注：就是统计量，例如均值）可以不可思议地再次变得可预测，并由简单的自然法则支配。</li>
<li>更令人惊讶的是，整个系统的宏观规律常常在很大程度上与控制系统内部单个组件的微观规律无关。换句话说，人们可以用完全不同类型的对象替换微观组件，并在宏观层面上获得相同的控制规律。这意味着，无论系统的微观组成如何，只要系统的组件数量足够多，宏观规律就会出现，并且这些规律可以独立于微观组件的特性而存在。我们就说宏观规律是普适的。</li>
<li>大数定律（Law of large numbers）：在数学与统计学中，大数定律又称为大数法则、大数律，是描述相当多次数重复实验后的结果的定律。根据这个定律，随着样本数量的增加，其算术平均值越来越有高的几率接近期望值。大数定律非常重要，因为它“说明”了一些随机事件均值的长期稳定性。人们发现，在重复试验中，随着试验次数的增加，事件发生的频率趋向于一个稳定值；人们同时也发现，在对物理量的测量实践中，测定值的算术平均也具备稳定性。比如，我们向上抛掷一枚硬币，硬币落下后哪一面朝上是偶然的，但当我们抛硬币的次数足够多后，达到上万次甚至几十万、几百万次之后，我们会发现硬币每一面向上的次数约占总次数的二分之一，亦即偶然中包含着必然。大数定律是数学和自然界中最简单、最容易理解的普适性规律之一，但它绝不是唯一的一个。</li>
<li>另一个最基本的普适性规律的例子是中心极限定理（Central Limit Theorem）。粗略地说，这个定理断言，如果一个统计量是由许多独立且随机波动的组成部分组合而成，且没有一个组成部分对整体有决定性影响，那么这个统计量将近似地按照一种称为正态分布（或高斯分布）的规律分布，或者更通俗地称为钟形曲线。这个规律是普遍的，因为无论个别成分如何波动，或者成分有多少个，它都成立（尽管成分数量越多，规律的准确度越高）。</li>
<li>中心极限定理存在着一些扩展，它们是针对某些略有不同的统计数据类型的普适性规律。本福德定律（Benford’s Law）就是一个例子，它是关于大量级统计数据的前几位数字的一个普适性规律，如一个国家的人口数量或账户的金额大小；这个法则给出了一些反直觉的预测，比如，在自然界中出现的任何给定统计数据都更可能以数字1开头，而不是数字9开头——实际上以1开头的概率是以9开头的六倍多。</li>
<li>类似地，Zipf 定律是描述特定类别中最大统计量的普适性规律，例如世界上人口最多的国家或英文中使用频率最高的单词。它指出，统计数据的大小通常与其排名成反比；因此，例如，第十大的数据大约是第五大数据的一半大小。这个法则对于最顶端的两三个数据可能不太精确，但在之后的数据中准确性提高。与数学上较容易理解的中心极限定理和本福德定律不同，Zipf 定律是基于经验的。它是通过实践观察而确定的，但数学家们尚未给出一个完全满意和有说服力的解释，来说明这个定律怎样产生以及为什么具有普适性。</li>
<li>在20世纪50年代，著名物理学家和诺贝尔奖得主尤金·维格纳（Eugene Wigner）研究了这些共振统计数据，并提出了一个非凡的数学模型来解释它们，就是我们现在所称的随机矩阵模型（random matrix model）。这些模型精确的数学细节太过技术性，在此不便描述。但总的来说，可以将这样的模型看作是一个大量质量的集合，所有质量都通过各种随机选择的、不同强度的弹簧连接在一起。这样一个机械系统将在一定的频率下振荡（或共振）；维格纳假设认为，大型原子核的共振应该类似于随机矩阵模型的共振。特别地，它们应呈现相同的排斥效应。因为可以严格证明随机矩阵模型的频率排斥，所以可以对核共振实验观察到的相同现象提供启发式的解释。高斯酉集（Gaussian Unitary Ensemble，GUE）假设</li>
<li>然而，普适性定律确实存在一定的局限。以中心极限定理为例，它预测了任何由众多小的、独立因素组合而成的数量都将趋向钟形曲线分布。但如果不满足该定理所需的前提假设，这个定律就可能不适用。比如说，所有成年人（男性和女性）的身高分布并不符合标准的钟形曲线，因为性别这一单一因素对身高的影响巨大，无法被其他所有环境和遗传因素平衡掉。</li>
<li>中心极限定理还有一个重要的失效场景，那就是构成某个量的独立因素并非真正独立，而是存在相关性，导致它们倾向于同涨同跌。在这样的情况下，可能形成“胖尾”现象（俗称“黑天鹅”），其数值会比中心极限定理所预测的平均值波动范围大得多。这一现象在金融模型中特别重要，在处理复杂金融工具时尤其明显，比如通过汇集抵押贷款所形成的抵押债务担保证券（CDOs）。只有在假设各个抵押贷款相互独立时，中心极限定理才能用来评估这些工具的风险；但在近期金融危机中（典型的“黑天鹅”事件），这种独立性假设戏剧性地崩溃了，导致许多持有这些证券的投资者和它们的保险公司遭受巨大财务损失。数学模型的强大仅取决于其背后的假设是否坚实。</li>
<li>普适性规律瓦解的第三种情形是系统没有足够的自由度来使得这些定律生效。举例来说，宇宙学家可以依据流体力学的普适性规律来描述整个星系的运动模式，然而，在仅受到三个天体引力影响的环境下，单个卫星的运动可能要复杂得多——这实际上就是所谓的火箭科学。</li>
<li>流体力学的普适性规律还会在介观尺度上失效：这个尺度比单分子的微观尺度要大，但又小于宏观尺度，后者是普适性规律适用的范围。一个典型的介观流体例子是流经血管的血液；构成这种液体的血细胞非常大，以至于它们不能简单地被视作微观分子的集合体，而应该被认为是具有复杂行为的介观实体。其他一些具有有趣介观特性的材料包括胶体流体（比如泥浆）、某些类型的纳米材料和量子点等；为这类材料建立准确的数学模型仍然是一个持续存在的挑战。</li>
<li>古德哈特定律（Goodhart’s law）表明，当一个度量指标成为目标时，它就不再是一个好的度量指标。</li>
</ul>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-12-07-e-pluribus-unum/index.html</guid>
  <pubDate>Wed, 06 Dec 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>从 Faker 夺冠讨论竞争与热爱</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-21-talking-from-faker/index.html</link>
  <description><![CDATA[ 




<p>好的想法需要记录，在这里动笔前，昨天睡前的好想法差点从指缝中溜走。</p>
<hr>
<p>Faker，闪耀英雄联盟十年的职业选手，带领 T1 再次登上王座。 这是他的第 4 座世界赛冠军奖杯，但他离上一次登顶已经过去很多年了。 想要回忆，都已经得翻过我人生几千天的篇章。在那个懵懂和充满斗气的年代， 他也是青涩，却以高超的技巧以魔王的姿态统治了游戏中的王朝。</p>
<p>但他又再次登顶了，当众多英雄折戟沉沙、黯然退出，为什么他还在坚持？ 为什么在沦入尘沙时坚持，为什么在近年当千年老二坚持？奶奶对他说， 要做便做到最好。他早已做到最好，为什么还在坚持？</p>
<p>我思考了很久。只有热爱，才能解释。</p>
<p>在越加竞争的世界里，我曾以为科研工作是一个宁静的港湾，但很显然，飓风已成，一切都将被席卷。 当资源的博奕无法避免，个人而言，躺平是最下层的解法。 为什么今年的比赛 Faker 带领的 T1 能够把把将 LPL 战队击穿，如人机一般？ 我在一个知乎的帖子里看到了最认同的解析：<a href="https://www.zhihu.com/question/630835967/answer/3294626092">“不惧强度对抗”</a>。 「不怕摩擦，不怕双方接触，寻求双方对抗。」在对抗中寻找战机和赛果。</p>
<p>未战先怯，败亡之道。</p>
<p>这狠狠地击中了我近年的“科研心态”。个人独立独行时，我们天然地寻求庇护之所，以求遮风挡雨、得以存活。 我们把对思想的追求降低到对生活的满足，就此沉沦。工作/事业，绝不会因为你把它当作一份工作而出色，它只会 因为你的热爱，你灌注的思想情绪而出彩。</p>
<p>固然，世界，特别是周遭的环境变化太大、压力太巨，但追求之心、努力之行不该有所松懈。不要让任何的标签定义，不要让任何的时间限制，不要让任何的思想束缚，一步一步、锤炼再锤炼、博弈再博弈。</p>
<p>与天斗，其乐无穷；与地斗，其乐无穷；与人斗，其乐无穷。</p>



 ]]></description>
  <category>thought</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-21-talking-from-faker/index.html</guid>
  <pubDate>Mon, 20 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>谈谈使用过的代码编辑器</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-15-talk-about-ides/index.html</link>
  <description><![CDATA[ 




<p>最近在使用 JupyterLab 时感觉受挫，想简单总结下自己这些年使用过的代码编辑器（有较长的使用时间）。</p>
<p>最开始接触的应该是 Sublime text3，简单、轻量、速度响应快，缺点是要自己搞定盗版问题、要自己配置、装插件等。</p>
<p>后面大量使用 R 和利用 R 开发，所以 RStudio 和 RStudio Server 使用非常多，它可以系统解决利用 R 进行的一系列数据处理和开发工作。缺点是单线程、有时候出问题会卡得很、与其他编程语言几乎很难协同，包括我常用的 Bash 和偶尔用的 Python，这类体验感很不好。</p>
<p>再后面有用过 Jupyter 笔记本，优点是简约轻便，它对 Python 的支持比较好，其他比较烂，界面和导航不太行，我近期尝试部署 JupyterLab 后发现对插件的支持体验不是很理想，然后插件对 R 的支持比较烂。</p>
<p>还用过 JetBrains 的一系列编辑器，包括支持 Python、Go等等的不同软件名称，但基本框架是一样的，后面在 IDEA 中都可以进行支持，优点是交互感好、界面专业、插件稳定好用、非常适合开发，缺点是不太适合数据分析探索类工作，也比较笨重。如果是学生/老师用户可以免费使用。</p>
<p>全部使用过的所有编辑器中综合体验感、性能、特性等比较完美的是 VS Code，不愧是大厂出产的产品，这些年陆续间歇在用，功能演进频繁但不失稳定，目前包括 R、Python、Jupyter的支持都比较好，更不说其他常用编程了。缺点是 VS Code 在 R 方面的专业性没有 RStudio 强（特别是图像预览的方便程度），另外界面有时候个人使用起来不是很喜欢（相比于 JetBrains 产品）。</p>
<p>当前还有一些新的产品在推动编辑器的发展，包括JB 的 Fleet，我觉得非常有前景。</p>
<p>当然了，终端上用过 Vim，它基本是命令行的无冕之王，虽然我极少在终端写代码，但用它基本已经满足了。之前还学习过 Vim 和相关配置、包括 Emacs，但实际上个人的使用偏好和职业领域导致这一块的使用极少有所进展，只是满足偶尔的编辑需求。而这部分需求，现状VS Code 都是可以替代的。</p>
<p>综上看，如果是从事与我类似的数据科学工作和开发的读者朋友，优先选择 VS Code 和 RStudio 是比较好的选择。</p>



 ]]></description>
  <category>R</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-15-talk-about-ides/index.html</guid>
  <pubDate>Tue, 14 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>随想</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-14-random-thoughts/index.html</link>
  <description><![CDATA[ 




<p>没有问题只有目标的数据分析，就像人有大脑却缺乏灵魂。</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-14-random-thoughts/index.html</guid>
  <pubDate>Mon, 13 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>SRA 测序数据下载和处理三部曲</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-11-13-download-and-prepare-sra-data/index.html</link>
  <description><![CDATA[ 




<p>这里简单记录和备忘下下载和预处理 SRA 数据我常用的三个基本步骤。</p>
<section id="依赖准备" class="level2">
<h2 class="anchored" data-anchor-id="依赖准备">依赖准备</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge parallel-fastq-dump <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sra-tools&gt;=3.0.0'</span> fastp</span></code></pre></div>
</section>
<section id="步骤" class="level2">
<h2 class="anchored" data-anchor-id="步骤">步骤</h2>
<ol type="1">
<li>下载</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--max-size</span> 100GB <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-C</span> yes <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> yes <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> . <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> SRR8670672</span></code></pre></div>
<ol start="2" type="1">
<li>转换数据格式为 FASTQ</li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parallel-fastq-dump</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> 20 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> fq/ <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--split-3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gzip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> SRR8670672</span></code></pre></div>
<ol start="3" type="1">
<li>预处理 FASTQ 文件</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fastp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> fq/SRR8670672_1.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-I</span> fq/SRR8670672_2.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> output/SRR8670672_1.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> output/SRR8670672_2.fastq.gz <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-h</span> output/SRR8670672.html <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-j</span> output/SRR8670672.json <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--thread</span> 16 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dont_overwrite</span></span></code></pre></div>
<p>如果多个文件还可以结合 <code>multiqc</code>。</p>


</section>

 ]]></description>
  <category>note</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2023-11-13-download-and-prepare-sra-data/index.html</guid>
  <pubDate>Sun, 12 Nov 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>dont forget</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-10-29-dont-forget/index.html</link>
  <description><![CDATA[ 




<p>不要忘记，有一个诺贝尔奖的梦。</p>
<p>不要忘记，最多也就剩下四十余年。</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-10-29-dont-forget/index.html</guid>
  <pubDate>Sat, 28 Oct 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>南京行记 两首</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-10-27-revist-nanjing/index.html</link>
  <description><![CDATA[ 




<center>
<section id="其一-重访南京有感" class="level3">
<h3 class="anchored" data-anchor-id="其一-重访南京有感">其一 重访南京有感</h3>
</section></center>
<p><br></p>
<center>
<p>烟水近，城镇明，高楼须弥作蝼蚁。</p>
<p>夜半独飞落江宁，驰霄横度三千里。</p>
<p>旧都印，故金陵，六朝风流休说起。</p>
夫子庙头看古今，忆往年书生意气。
</center>
<center>
<img src="https://shixiangwang.github.io/posts/2023-10-27-revist-nanjing/rv_nj_1.jpg" style="width:50.0%;height:50.0%">
</center>
<center>

<section id="其二-足踏秦淮有记" class="level3">
<h3 class="anchored" data-anchor-id="其二-足踏秦淮有记">其二 足踏秦淮有记</h3>
</section></center>
<p><br></p>
<center>
<p>行路迟迟眼欲呆，金陵小巷赋文才。</p>
<p>流水车龙听钟鼓，穿街梧桐掩楼牌。</p>
<p>集庆门接迎凤道，长干桥通雨花台。</p>
<p>秦淮酒家今安在，旧里新村说不来。</p>
</center>
<center>
<img src="https://shixiangwang.github.io/posts/2023-10-27-revist-nanjing/rv_nj_2.jpg" style="width:50.0%;height:50.0%">
</center>




 ]]></description>
  <category>诗</category>
  <guid>https://shixiangwang.github.io/posts/2023-10-27-revist-nanjing/index.html</guid>
  <pubDate>Thu, 26 Oct 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>聊聊开源协议：我们可以免费使用开源软件吗？</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-10-19-can-i-use-open-source-tools-for-free/index.html</link>
  <description><![CDATA[ 




<p>答案是 YES!!!</p>
<p>逐步了解开源的朋友，可能会对开源协议产生困惑。既然协议中有那么多的限定，我们是不是在一些情况下无法使用他们呢？</p>
<p>如果是商业行为的使用（用别人的东西赚钱不应该遵守一些条条框框吗？），咱们暂且不论。作为个人使用者，我们首先需要区分“使用软件”和“改写软件”是两个完全不同的行为，而开源协议中各种条目都是写给那些改写它的人看的！</p>
<div style="background-color: white; padding: 0px;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-10-19-can-i-use-open-source-tools-for-free/https:/www.ruanyifeng.com/blogimg/asset/201105/free_software_licenses.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">来源：https://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html</figcaption>
</figure>
</div>
</div>
<blockquote class="blockquote">
<p>注意这里的第一出发点就是是否发生了“改写”行为。</p>
</blockquote>
<p>简单说就是不改源码，所有开源协议都支持写闭源软件。</p>
<p>我之前也很困惑，所以看过很多介绍。主要是我们混淆了修改别人的代码和使用别人代码，开源协议限制的是对别人代码的修改（包括在你自己的软件包里拷贝了他人的源码），不限制后者。</p>
<p>一般我们做数据分析，喜欢拷贝和利用已有的代码，这就是“改写”行为。假设我们不遵守相关的协议（比如有些博客要求你放上博客地址和作者等等），那么就违规啦。但是，如果你是看着别人的思路或代码自己完全重新写的， 就不是“改写”行为了！所以，不难发现，如果存在违规，这种除了本人其他人是没法分辨的。当然了，一般网上公开的代码也不存在任何的协议，以及常见的代码很难溯源和追责，所以我们不需要考虑这些问题，根据自己情况使用就行。</p>



 ]]></description>
  <category>thought</category>
  <guid>https://shixiangwang.github.io/posts/2023-10-19-can-i-use-open-source-tools-for-free/index.html</guid>
  <pubDate>Wed, 18 Oct 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>结合 quarto 出版系统和 webr 技术</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-10-09-webr-in-quarto/index.html</link>
  <description><![CDATA[ <script src="https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs/loader.js"></script><script type="module" id="webr-monaco-editor-init">

  // Configure the Monaco Editor's loader
  require.config({
    paths: {
      'vs': 'https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs'
    }
  });
</script><p>这是一个简单的例子，直接通过浏览器运行 <a href="https://docs.r-wasm.org/webr/latest/">webr 技术</a>来实时运行 R 代码。你还可以实时修改代码进行交互式探索！</p>
<button class="btn btn-default btn-webr" disabled="" type="button" id="webr-run-button-1">🟡 Loading
  webR...</button>
<div id="webr-editor-1"></div>
<div id="webr-code-output-1" aria-live="assertive">
  <pre style="visibility: hidden"></pre>
</div>
<script type="module">
  // Retrieve webR code cell information
  const runButton = document.getElementById("webr-run-button-1");
  const outputDiv = document.getElementById("webr-code-output-1");
  const editorDiv = document.getElementById("webr-editor-1");

  // Add a light grey outline around the code editor
  editorDiv.style.border = "1px solid #eee";

  // Load the Monaco Editor and create an instance
  let editor;
  require(['vs/editor/editor.main'], function () {
    editor = monaco.editor.create(editorDiv, {
      value: `fit = lm(mpg ~ am, data = mtcars)
summary(fit)`,
      language: 'r',
      theme: 'vs-light',
      automaticLayout: true,           // TODO: Could be problematic for slide decks
      scrollBeyondLastLine: false,
      minimap: {
        enabled: false
      },
      fontSize: '17.5rem',               // Bootstrap is 1 rem
      renderLineHighlight: "none",     // Disable current line highlighting
      hideCursorInOverviewRuler: true  // Remove cursor indictor in right hand side scroll bar
    });

    // Dynamically modify the height of the editor window if new lines are added.
    let ignoreEvent = false;
    const updateHeight = () => {
      const contentHeight = editor.getContentHeight();
      // We're avoiding a width change
      //editorDiv.style.width = `${width}px`;
      editorDiv.style.height = `${contentHeight}px`;
      try {
        ignoreEvent = true;

        // The key to resizing is this call
        editor.layout();
      } finally {
        ignoreEvent = false;
      }
    };

    // Helper function to check if selected text is empty
    function isEmptyCodeText(selectedCodeText) {
      return (selectedCodeText === null || selectedCodeText === undefined || selectedCodeText === "");
    }

    // Registry of keyboard shortcuts that should be re-added to each editor window
    // when focus changes.
    const addWebRKeyboardShortCutCommands = () => {
      // Add a keydown event listener for Shift+Enter to run all code in cell
      editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {

        // Retrieve all text inside the editor
        executeCode(editor.getValue());
      });

      // Add a keydown event listener for CMD/Ctrl+Enter to run selected code
      editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, () => {

        // Get the selected text from the editor
        const selectedText = editor.getModel().getValueInRange(editor.getSelection());
        // Check if no code is selected
        if (isEmptyCodeText(selectedText)) {
          // Obtain the current cursor position
          let currentPosition = editor.getPosition();
          // Retrieve the current line content
          let currentLine = editor.getModel().getLineContent(currentPosition.lineNumber);

          // Propose a new position to move the cursor to
          let newPosition = new monaco.Position(currentPosition.lineNumber + 1, 1);

          // Check if the new position is beyond the last line of the editor
          if (newPosition.lineNumber > editor.getModel().getLineCount()) {
            // Add a new line at the end of the editor
            editor.executeEdits("addNewLine", [{
            range: new monaco.Range(newPosition.lineNumber, 1, newPosition.lineNumber, 1),
            text: "\n", 
            forceMoveMarkers: true,
            }]);
          }
          
          // Run the entire line of code.
          executeCode(currentLine);

          // Move cursor to new position
          editor.setPosition(newPosition);
        } else {
          // Code to run when Ctrl+Enter is pressed with selected code
          executeCode(selectedText);
        }
      });
    }

    // Register an on focus event handler for when a code cell is selected to update
    // what keyboard shortcut commands should work.
    // This is a workaround to fix a regression that happened with multiple
    // editor windows since Monaco 0.32.0 
    // https://github.com/microsoft/monaco-editor/issues/2947
    editor.onDidFocusEditorText(addWebRKeyboardShortCutCommands);

    // Register an on change event for when new code is added to the editor window
    editor.onDidContentSizeChange(updateHeight);

    // Manually re-update height to account for the content we inserted into the call
    updateHeight();
  });

  // Function to execute the code (accepts code as an argument)
  async function executeCode(codeToRun) {
    // Disable run button for code cell active
    runButton.disabled = true;

    // Disallowing execution of other code cells
    document.querySelectorAll(".btn-webr").forEach((btn) => {
      btn.disabled = true;
    });

    // Emphasize the active code cell
    runButton.innerHTML = '<i class="fa-solid fa-spinner fa-spin" style="color: #7894c4;"></i> <span>Run Code</span>';

    // Create a canvas variable for graphics
    let canvas = undefined;

    // Initialize webR
    await globalThis.webR.init();

    // Setup a webR canvas by making a namespace call into the {webr} package
    await webR.evalRVoid("webr::canvas(width=504, height=360)");

    // Capture output data from evaluating the code
    const result = await webRCodeShelter.captureR(codeToRun, {
      withAutoprint: true,
      captureStreams: true,
      captureConditions: false//,
      // env: webR.objs.emptyEnv, // maintain a global environment for webR v0.2.0
    });

    // Start attempting to parse the result data
    try {

      // Stop creating images
      await webR.evalRVoid("dev.off()");

      // Merge output streams of STDOUT and STDErr (messages and errors are combined.)
      const out = result.output.filter(
        evt => evt.type == "stdout" || evt.type == "stderr"
      ).map((evt) => evt.data).join("\n");

      // Clean the state
      const msgs = await webR.flush();

      // Output each image stored
      msgs.forEach(msg => {
        // Determine if old canvas can be used or a new canvas is required.
        if (msg.type === 'canvas'){
          // Add image to the current canvas
          if (msg.data.event === 'canvasImage') {
            canvas.getContext('2d').drawImage(msg.data.image, 0, 0);
          } else if (msg.data.event === 'canvasNewPage') {
            // Generate a new canvas element
            canvas = document.createElement("canvas");
            canvas.setAttribute("width", 2 * 504);
            canvas.setAttribute("height", 2 * 360);
            canvas.style.width = "700px";
            canvas.style.display = "block";
            canvas.style.margin = "auto";
          }
        }
      });

      // Nullify the outputDiv of content
      outputDiv.innerHTML = "";

      // Design an output object for messages
      const pre = document.createElement("pre");
      if (/\S/.test(out)) {
        // Display results as text
        const code = document.createElement("code");
        code.innerText = out;
        pre.appendChild(code);
      } else {
        // If nothing is present, hide the element.
        pre.style.visibility = "hidden";
      }
      outputDiv.appendChild(pre);

      // Place the graphics on the canvas
      if (canvas) {
        const p = document.createElement("p");
        p.appendChild(canvas);
        outputDiv.appendChild(p);
      }
    } finally {
      // Clean up the remaining code
      webRCodeShelter.purge();
    }

    // Switch to allowing execution of code
    document.querySelectorAll(".btn-webr").forEach((btn) => {
      btn.disabled = false;
    });

    // Revert to the initial code cell state
    runButton.innerHTML = '<i class="fa-solid fa-play" style="color: #0d9c29;"></i> <span>Run Code</span>';
  }

  // Add a click event listener to the run button
  runButton.onclick = function () {
    executeCode(editor.getValue());
  };
</script><button class="btn btn-default btn-webr" disabled="" type="button" id="webr-run-button-2">🟡 Loading
  webR...</button>
<div id="webr-editor-2"></div>
<div id="webr-code-output-2" aria-live="assertive">
  <pre style="visibility: hidden"></pre>
</div>
<script type="module">
  // Retrieve webR code cell information
  const runButton = document.getElementById("webr-run-button-2");
  const outputDiv = document.getElementById("webr-code-output-2");
  const editorDiv = document.getElementById("webr-editor-2");

  // Add a light grey outline around the code editor
  editorDiv.style.border = "1px solid #eee";

  // Load the Monaco Editor and create an instance
  let editor;
  require(['vs/editor/editor.main'], function () {
    editor = monaco.editor.create(editorDiv, {
      value: `par(bg = "#f7f7f7")

plot(x = mtcars$mpg, y = mtcars$am)`,
      language: 'r',
      theme: 'vs-light',
      automaticLayout: true,           // TODO: Could be problematic for slide decks
      scrollBeyondLastLine: false,
      minimap: {
        enabled: false
      },
      fontSize: '17.5rem',               // Bootstrap is 1 rem
      renderLineHighlight: "none",     // Disable current line highlighting
      hideCursorInOverviewRuler: true  // Remove cursor indictor in right hand side scroll bar
    });

    // Dynamically modify the height of the editor window if new lines are added.
    let ignoreEvent = false;
    const updateHeight = () => {
      const contentHeight = editor.getContentHeight();
      // We're avoiding a width change
      //editorDiv.style.width = `${width}px`;
      editorDiv.style.height = `${contentHeight}px`;
      try {
        ignoreEvent = true;

        // The key to resizing is this call
        editor.layout();
      } finally {
        ignoreEvent = false;
      }
    };

    // Helper function to check if selected text is empty
    function isEmptyCodeText(selectedCodeText) {
      return (selectedCodeText === null || selectedCodeText === undefined || selectedCodeText === "");
    }

    // Registry of keyboard shortcuts that should be re-added to each editor window
    // when focus changes.
    const addWebRKeyboardShortCutCommands = () => {
      // Add a keydown event listener for Shift+Enter to run all code in cell
      editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {

        // Retrieve all text inside the editor
        executeCode(editor.getValue());
      });

      // Add a keydown event listener for CMD/Ctrl+Enter to run selected code
      editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, () => {

        // Get the selected text from the editor
        const selectedText = editor.getModel().getValueInRange(editor.getSelection());
        // Check if no code is selected
        if (isEmptyCodeText(selectedText)) {
          // Obtain the current cursor position
          let currentPosition = editor.getPosition();
          // Retrieve the current line content
          let currentLine = editor.getModel().getLineContent(currentPosition.lineNumber);

          // Propose a new position to move the cursor to
          let newPosition = new monaco.Position(currentPosition.lineNumber + 1, 1);

          // Check if the new position is beyond the last line of the editor
          if (newPosition.lineNumber > editor.getModel().getLineCount()) {
            // Add a new line at the end of the editor
            editor.executeEdits("addNewLine", [{
            range: new monaco.Range(newPosition.lineNumber, 1, newPosition.lineNumber, 1),
            text: "\n", 
            forceMoveMarkers: true,
            }]);
          }
          
          // Run the entire line of code.
          executeCode(currentLine);

          // Move cursor to new position
          editor.setPosition(newPosition);
        } else {
          // Code to run when Ctrl+Enter is pressed with selected code
          executeCode(selectedText);
        }
      });
    }

    // Register an on focus event handler for when a code cell is selected to update
    // what keyboard shortcut commands should work.
    // This is a workaround to fix a regression that happened with multiple
    // editor windows since Monaco 0.32.0 
    // https://github.com/microsoft/monaco-editor/issues/2947
    editor.onDidFocusEditorText(addWebRKeyboardShortCutCommands);

    // Register an on change event for when new code is added to the editor window
    editor.onDidContentSizeChange(updateHeight);

    // Manually re-update height to account for the content we inserted into the call
    updateHeight();
  });

  // Function to execute the code (accepts code as an argument)
  async function executeCode(codeToRun) {
    // Disable run button for code cell active
    runButton.disabled = true;

    // Disallowing execution of other code cells
    document.querySelectorAll(".btn-webr").forEach((btn) => {
      btn.disabled = true;
    });

    // Emphasize the active code cell
    runButton.innerHTML = '<i class="fa-solid fa-spinner fa-spin" style="color: #7894c4;"></i> <span>Run Code</span>';

    // Create a canvas variable for graphics
    let canvas = undefined;

    // Initialize webR
    await globalThis.webR.init();

    // Setup a webR canvas by making a namespace call into the {webr} package
    await webR.evalRVoid("webr::canvas(width=504, height=360)");

    // Capture output data from evaluating the code
    const result = await webRCodeShelter.captureR(codeToRun, {
      withAutoprint: true,
      captureStreams: true,
      captureConditions: false//,
      // env: webR.objs.emptyEnv, // maintain a global environment for webR v0.2.0
    });

    // Start attempting to parse the result data
    try {

      // Stop creating images
      await webR.evalRVoid("dev.off()");

      // Merge output streams of STDOUT and STDErr (messages and errors are combined.)
      const out = result.output.filter(
        evt => evt.type == "stdout" || evt.type == "stderr"
      ).map((evt) => evt.data).join("\n");

      // Clean the state
      const msgs = await webR.flush();

      // Output each image stored
      msgs.forEach(msg => {
        // Determine if old canvas can be used or a new canvas is required.
        if (msg.type === 'canvas'){
          // Add image to the current canvas
          if (msg.data.event === 'canvasImage') {
            canvas.getContext('2d').drawImage(msg.data.image, 0, 0);
          } else if (msg.data.event === 'canvasNewPage') {
            // Generate a new canvas element
            canvas = document.createElement("canvas");
            canvas.setAttribute("width", 2 * 504);
            canvas.setAttribute("height", 2 * 360);
            canvas.style.width = "700px";
            canvas.style.display = "block";
            canvas.style.margin = "auto";
          }
        }
      });

      // Nullify the outputDiv of content
      outputDiv.innerHTML = "";

      // Design an output object for messages
      const pre = document.createElement("pre");
      if (/\S/.test(out)) {
        // Display results as text
        const code = document.createElement("code");
        code.innerText = out;
        pre.appendChild(code);
      } else {
        // If nothing is present, hide the element.
        pre.style.visibility = "hidden";
      }
      outputDiv.appendChild(pre);

      // Place the graphics on the canvas
      if (canvas) {
        const p = document.createElement("p");
        p.appendChild(canvas);
        outputDiv.appendChild(p);
      }
    } finally {
      // Clean up the remaining code
      webRCodeShelter.purge();
    }

    // Switch to allowing execution of code
    document.querySelectorAll(".btn-webr").forEach((btn) => {
      btn.disabled = false;
    });

    // Revert to the initial code cell state
    runButton.innerHTML = '<i class="fa-solid fa-play" style="color: #0d9c29;"></i> <span>Run Code</span>';
  }

  // Add a click event listener to the run button
  runButton.onclick = function () {
    executeCode(editor.getValue());
  };
</script><button class="btn btn-default btn-webr" disabled="" type="button" id="webr-run-button-3">🟡 Loading
  webR...</button>
<div id="webr-editor-3"></div>
<div id="webr-code-output-3" aria-live="assertive">
  <pre style="visibility: hidden"></pre>
</div>
<script type="module">
  // Retrieve webR code cell information
  const runButton = document.getElementById("webr-run-button-3");
  const outputDiv = document.getElementById("webr-code-output-3");
  const editorDiv = document.getElementById("webr-editor-3");

  // Add a light grey outline around the code editor
  editorDiv.style.border = "1px solid #eee";

  // Load the Monaco Editor and create an instance
  let editor;
  require(['vs/editor/editor.main'], function () {
    editor = monaco.editor.create(editorDiv, {
      value: `par(bg = "#f7f7f7")

set.seed(2)
x <- rnorm(100)
boxplot(x)`,
      language: 'r',
      theme: 'vs-light',
      automaticLayout: true,           // TODO: Could be problematic for slide decks
      scrollBeyondLastLine: false,
      minimap: {
        enabled: false
      },
      fontSize: '17.5rem',               // Bootstrap is 1 rem
      renderLineHighlight: "none",     // Disable current line highlighting
      hideCursorInOverviewRuler: true  // Remove cursor indictor in right hand side scroll bar
    });

    // Dynamically modify the height of the editor window if new lines are added.
    let ignoreEvent = false;
    const updateHeight = () => {
      const contentHeight = editor.getContentHeight();
      // We're avoiding a width change
      //editorDiv.style.width = `${width}px`;
      editorDiv.style.height = `${contentHeight}px`;
      try {
        ignoreEvent = true;

        // The key to resizing is this call
        editor.layout();
      } finally {
        ignoreEvent = false;
      }
    };

    // Helper function to check if selected text is empty
    function isEmptyCodeText(selectedCodeText) {
      return (selectedCodeText === null || selectedCodeText === undefined || selectedCodeText === "");
    }

    // Registry of keyboard shortcuts that should be re-added to each editor window
    // when focus changes.
    const addWebRKeyboardShortCutCommands = () => {
      // Add a keydown event listener for Shift+Enter to run all code in cell
      editor.addCommand(monaco.KeyMod.Shift | monaco.KeyCode.Enter, () => {

        // Retrieve all text inside the editor
        executeCode(editor.getValue());
      });

      // Add a keydown event listener for CMD/Ctrl+Enter to run selected code
      editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, () => {

        // Get the selected text from the editor
        const selectedText = editor.getModel().getValueInRange(editor.getSelection());
        // Check if no code is selected
        if (isEmptyCodeText(selectedText)) {
          // Obtain the current cursor position
          let currentPosition = editor.getPosition();
          // Retrieve the current line content
          let currentLine = editor.getModel().getLineContent(currentPosition.lineNumber);

          // Propose a new position to move the cursor to
          let newPosition = new monaco.Position(currentPosition.lineNumber + 1, 1);

          // Check if the new position is beyond the last line of the editor
          if (newPosition.lineNumber > editor.getModel().getLineCount()) {
            // Add a new line at the end of the editor
            editor.executeEdits("addNewLine", [{
            range: new monaco.Range(newPosition.lineNumber, 1, newPosition.lineNumber, 1),
            text: "\n", 
            forceMoveMarkers: true,
            }]);
          }
          
          // Run the entire line of code.
          executeCode(currentLine);

          // Move cursor to new position
          editor.setPosition(newPosition);
        } else {
          // Code to run when Ctrl+Enter is pressed with selected code
          executeCode(selectedText);
        }
      });
    }

    // Register an on focus event handler for when a code cell is selected to update
    // what keyboard shortcut commands should work.
    // This is a workaround to fix a regression that happened with multiple
    // editor windows since Monaco 0.32.0 
    // https://github.com/microsoft/monaco-editor/issues/2947
    editor.onDidFocusEditorText(addWebRKeyboardShortCutCommands);

    // Register an on change event for when new code is added to the editor window
    editor.onDidContentSizeChange(updateHeight);

    // Manually re-update height to account for the content we inserted into the call
    updateHeight();
  });

  // Function to execute the code (accepts code as an argument)
  async function executeCode(codeToRun) {
    // Disable run button for code cell active
    runButton.disabled = true;

    // Disallowing execution of other code cells
    document.querySelectorAll(".btn-webr").forEach((btn) => {
      btn.disabled = true;
    });

    // Emphasize the active code cell
    runButton.innerHTML = '<i class="fa-solid fa-spinner fa-spin" style="color: #7894c4;"></i> <span>Run Code</span>';

    // Create a canvas variable for graphics
    let canvas = undefined;

    // Initialize webR
    await globalThis.webR.init();

    // Setup a webR canvas by making a namespace call into the {webr} package
    await webR.evalRVoid("webr::canvas(width=504, height=360)");

    // Capture output data from evaluating the code
    const result = await webRCodeShelter.captureR(codeToRun, {
      withAutoprint: true,
      captureStreams: true,
      captureConditions: false//,
      // env: webR.objs.emptyEnv, // maintain a global environment for webR v0.2.0
    });

    // Start attempting to parse the result data
    try {

      // Stop creating images
      await webR.evalRVoid("dev.off()");

      // Merge output streams of STDOUT and STDErr (messages and errors are combined.)
      const out = result.output.filter(
        evt => evt.type == "stdout" || evt.type == "stderr"
      ).map((evt) => evt.data).join("\n");

      // Clean the state
      const msgs = await webR.flush();

      // Output each image stored
      msgs.forEach(msg => {
        // Determine if old canvas can be used or a new canvas is required.
        if (msg.type === 'canvas'){
          // Add image to the current canvas
          if (msg.data.event === 'canvasImage') {
            canvas.getContext('2d').drawImage(msg.data.image, 0, 0);
          } else if (msg.data.event === 'canvasNewPage') {
            // Generate a new canvas element
            canvas = document.createElement("canvas");
            canvas.setAttribute("width", 2 * 504);
            canvas.setAttribute("height", 2 * 360);
            canvas.style.width = "700px";
            canvas.style.display = "block";
            canvas.style.margin = "auto";
          }
        }
      });

      // Nullify the outputDiv of content
      outputDiv.innerHTML = "";

      // Design an output object for messages
      const pre = document.createElement("pre");
      if (/\S/.test(out)) {
        // Display results as text
        const code = document.createElement("code");
        code.innerText = out;
        pre.appendChild(code);
      } else {
        // If nothing is present, hide the element.
        pre.style.visibility = "hidden";
      }
      outputDiv.appendChild(pre);

      // Place the graphics on the canvas
      if (canvas) {
        const p = document.createElement("p");
        p.appendChild(canvas);
        outputDiv.appendChild(p);
      }
    } finally {
      // Clean up the remaining code
      webRCodeShelter.purge();
    }

    // Switch to allowing execution of code
    document.querySelectorAll(".btn-webr").forEach((btn) => {
      btn.disabled = false;
    });

    // Revert to the initial code cell state
    runButton.innerHTML = '<i class="fa-solid fa-play" style="color: #0d9c29;"></i> <span>Run Code</span>';
  }

  // Add a click event listener to the run button
  runButton.onclick = function () {
    executeCode(editor.getValue());
  };
</script><p>技术详情可以参阅 <a href="https://quarto-webr.thecoatlessprofessor.com/">quarto-webr 拓展文档</a>。 目前该插件（包括 webR）还在积极的开发中，期待未来更加成熟稳定，跟本地执行代码一样方便和容易， 我相信这会极大地改变开发者和使用者的交互方式。</p>



 ]]></description>
  <category>R</category>
  <guid>https://shixiangwang.github.io/posts/2023-10-09-webr-in-quarto/index.html</guid>
  <pubDate>Sun, 08 Oct 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>2023 年诺贝尔生理或医学奖授予 KK</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-10-09-kk-nobel/index.html</link>
  <description><![CDATA[ 




<p>匈牙利科学家Katalin Karikó和美国科学家Drew Weissman获得了2023年诺贝尔生理学奖或医学奖，因为他们在核苷酸碱基修饰方面的发现，使得开发出针对COVID-19的有效mRNA疫苗成为可能。</p>
<p>虽然处于生物医学领域，但对于 mRNA 疫苗也只是耳闻，而没有细致去了解过。真正让我着力写下这篇记录的，是Katalin Karikó几十年跌宕起伏的科研生涯，这给予我莫大的震撼和感动。 在流量的推荐下我也刷到了两位获奖者的采访视频，相比于Drew Weissman的沉稳冷静，KK溢于言表的热情和笑容让我再次深刻感受到科学研究的魅力。</p>
<p>我似乎能够通过附着在KK身上的岁月痕迹去窥探未来我可能的命运，当然，我并不是说我能够产生巨大的科学贡献并幸运地荣获这类科学大奖。 我在思考的是，我该用如何的态度去面对未来不确定的职业道路，如何去探寻和坚持未来想做的工作、去感受生活的起落、去陪伴爱人家人、去教育子女。 人是一种复杂的多细胞生物，在岁月的成长中，我们引入了太多物质与精神的变量，但所谓“不忘初心”的，不是回到多少年前某个幼稚的思考、充满天真梦想的时刻， 而是坚持一种贯穿身心与时空的信念和力量，让自我的“神迹”绽放在心灵的沃野，完成一场超脱自我的“成佛”之旅。</p>
<p>最后用 KK 讲述的一段话作为你我的共勉：</p>
<blockquote class="blockquote">
<p>涉足科学领域，你会经常在毫无把握的情况下工作。我经常把做科学比作我女儿的划船：你在一艘向后行驶的船上，看不清鱼鳍线有多远（卡里科的女儿苏珊·弗朗西亚是两届奥运会赛艇冠军和金牌得主）。所以我认为，激情、专注和使命感是在研究生涯中取得成就的关键因素。</p>
</blockquote>



 ]]></description>
  <category>academic</category>
  <category>news</category>
  <category>personal</category>
  <guid>https://shixiangwang.github.io/posts/2023-10-09-kk-nobel/index.html</guid>
  <pubDate>Sun, 08 Oct 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>ShowMeAI 速查表</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-10-07-show-me-ai-cheatsheet/index.html</link>
  <description><![CDATA[ 




<p>#分享# #AI# 今天看到 showmeAI（<a href="https://github.com/ShowMeAI-Hub" class="uri">https://github.com/ShowMeAI-Hub</a>），有一些速查表非常不错，这里整理分享给大家。 <a href="https://www.aliyundrive.com/s/mogzKzDSinf" class="uri">https://www.aliyundrive.com/s/mogzKzDSinf</a> 点击链接保存，或者复制本段内容，打开「阿里云盘」APP ，无需下载极速在线查看，视频原画倍速播放。</p>



 ]]></description>
  <category>machine-learning</category>
  <category>Python</category>
  <category>resource</category>
  <guid>https://shixiangwang.github.io/posts/2023-10-07-show-me-ai-cheatsheet/index.html</guid>
  <pubDate>Fri, 06 Oct 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Shiny 开发学习路径</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-09-13-shiny-learning-path-for-bioinformatics/index.html</link>
  <description><![CDATA[ 




<p>生信领域越来越多的数据库/网页工具采用 <a href="https://shiny.posit.co/">Shiny</a> 框架进行搭建，Shiny 的流行度/拓展性在随着时间增加。因此，掌握 Shiny 服务于自己的项目/课题成为生信人的一个新的技能。 在这篇文章中，作为一个有经验的 Shiny 学习者和 Shiny 工具的开发者，我将介绍学习和掌握 Shiny 进行开发的核心路径和相关推荐的（免费）资料。对于每一个关卡（技能点）， 我会给出大致的（<strong>全职学习</strong>）时间估计（以周为单位）。</p>
<blockquote class="blockquote">
<p>网络上的资料对于个人来说是无穷尽的，我会尽量选择我认可的最核心读物，方便大家进行相关的学习。当然， 个人的能力有限，欢迎讨论和补充。</p>
<p>注意，Shiny 现在已经支持了 Python 的实现，但本文只介绍以 R 为基础的学习路径。</p>
</blockquote>
<section id="关卡1r-基础2-3-周" class="level2">
<h2 class="anchored" data-anchor-id="关卡1r-基础2-3-周">关卡1：R 基础（2-3 周）</h2>
<p>学习 <a href="https://r4ds.had.co.nz/"><em>R for Data Science</em></a>。</p>
<p><img src="https://shixiangwang.github.io/posts/2023-09-13-shiny-learning-path-for-bioinformatics/https:/d33wubrfki0l68.cloudfront.net/b88ef926a004b0fce72b2526b0b5c4413666a4cb/24a30/cover.png" class="img-fluid"></p>
<p>要求掌握 1-21 章的全部内容，后续章节初学者以了解为主，根据兴趣和时间进行实践。</p>
<p>核心要点：</p>
<ul>
<li>tidyverse 的数据处理理念</li>
<li>readr 读取操作</li>
<li>dplyr 数据处理理念和核心操作</li>
<li>ggplot2 可视化理念和核心操作</li>
</ul>
<p>读者目标自查：可以独自完成从磁盘读取文件、过滤/转换数据、分组处理/聚合数据、生成可视化图表。</p>
</section>
<section id="关卡2-网页基础-html5css-0.5-1-周" class="level2">
<h2 class="anchored" data-anchor-id="关卡2-网页基础-html5css-0.5-1-周">关卡2: 网页基础 HTML5/CSS （0.5-1 周）</h2>
<p>阅读一遍 <a href="https://www.runoob.com/html/html-tutorial.html">HTML 教程</a> 和 <a href="https://www.runoob.com/css/css-tutorial.html">CSS 教程</a>。</p>
<p>HTML 教程是重点，建议花多一些时间阅读；CSS 起到辅助和美化的作用，对于初学者，了解其基本语法、如何设定即可。</p>
<p>核心要点：</p>
<ul>
<li>网页结构</li>
<li>网页标签语法以及条目</li>
<li>CSS 的设定</li>
</ul>
<p>读者目标自查：可以徒手写一个简单的网页，并通过 CSS 引入一些格式化。</p>
</section>
<section id="关卡3shiny-学习2-3-周" class="level2">
<h2 class="anchored" data-anchor-id="关卡3shiny-学习2-3-周">关卡3：Shiny 学习（2-3 周）</h2>
<p>学习 <a href="https://mastering-shiny.org/"><em>Mastering Shiny</em></a>。</p>
<p><img src="https://shixiangwang.github.io/posts/2023-09-13-shiny-learning-path-for-bioinformatics/https:/d33wubrfki0l68.cloudfront.net/0c97eee3d8fc820f3a8d670c08b286e8a524257b/e426c/cover.png" class="img-fluid"></p>
<p>要求认真阅读全部内容，并根据读物的代码进行实践，边学边练。</p>
<p>核心要点：</p>
<ul>
<li>Shiny app 结构</li>
<li>Shiny 网页布局</li>
<li>Shiny reactivity</li>
<li>Shiny module</li>
</ul>
<p>读者目标自查：可以在关卡1的基础上，将可视化展示通过 Shiny app 实现，并提供多个选项用于控制图形的输出展示。</p>
</section>
<section id="关卡4-学习如何组织-shiny-app-代码1-周以上" class="level2">
<h2 class="anchored" data-anchor-id="关卡4-学习如何组织-shiny-app-代码1-周以上">关卡4: 学习如何组织 Shiny app 代码（1 周以上）</h2>
<p>好的代码结构，会极大地方便运维和拓展你写的 Shiny app。 下面有几种推荐的代码组织形式，读者可以根据自己的需求参考设定，也可以根据罗列的资料逐步学习。</p>
<ul>
<li>Shiny 默认的代码部署方式
<ul>
<li>使用一个 <code>app.R</code> 文件存储全部的前后端代码，适合非常小的应用。</li>
<li>使用单独的 <code>ui.R</code> 和 <code>server.R</code> 文件放前后端代码，适合稍微复杂一点的小应用。</li>
<li>在以上两种设定的基础上，将复杂的操作逻辑统统整理为函数，放到单独的 <code>R/</code> 目录下或者一个 <code>functions.R</code> 文件中方便调用和维护。如果更复杂一点，可以整理为一个 R 包，需要通过 <a href="https://r-pkgs.org/"><em>R Packages</em></a> 学习如何开发 R 包。</li>
</ul></li>
<li>使用 <a href="https://github.com/ThinkR-open/golem">golem</a> 框架，学习 <a href="https://engineering-shiny.org/index.html"><em>Engineering Production-Grade Shiny Apps</em></a></li>
<li>使用 <a href="https://github.com/Appsilon/rhino">rhino</a> 框架，通过 <a href="https://appsilon.github.io/rhino/">官方各种文档</a> 学习。</li>
</ul>
<p>读者目标自查：理解和熟练掌握 Shiny 默认的代码部署方式。</p>
</section>
<section id="关卡5-学习如何部署-shiny-app1-2-周" class="level2">
<h2 class="anchored" data-anchor-id="关卡5-学习如何部署-shiny-app1-2-周">关卡5: 学习如何部署 Shiny app（1-2 周）</h2>
<p>当你开发的 app 可用时，接下来就是进行部署，方便自己测试或者他人使用。有以下几种部署的方式：</p>
<ol type="1">
<li>通过 Posit 公司提供的 <a href="https://www.shinyapps.io/">shinyapps 服务</a>。推荐初学者尝试和摸索。</li>
<li>自己在本地的/云服务商的 Linux 服务器上进行部署，需要了解 Linux 系统并掌握 Linux 的基本操作（阅读 <a href="https://seankross.com/the-unix-workbench/">The Unix Workbench</a>）。具体的部署可以参考以下几篇文章：
<ol type="1">
<li><a href="https://mp.weixin.qq.com/s/f8QWD8RH6MTfvHSd57t2FQ"><em>在Ubuntu服务器上配置Shiny应用</em></a></li>
<li><a href="https://www.linode.com/docs/guides/how-to-deploy-rshiny-server-on-ubuntu-and-debian"><em>How to Deploy Interactive R Apps with Shiny Server</em></a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-shiny-server-on-ubuntu-20-04"><em>How To Set Up Shiny Server on Ubuntu 20.04</em></a></li>
</ol></li>
</ol>
<p>读者目标自查：掌握第 1 种应用部署方式；探索第 2 种部署方式并能解决遇到的问题。</p>
</section>
<section id="关卡6-学习和重现完整的-shiny-app2周以上" class="level2">
<h2 class="anchored" data-anchor-id="关卡6-学习和重现完整的-shiny-app2周以上">关卡6: 学习和重现完整的 Shiny app（2周以上）</h2>
<p>这是最后一道关口，闯关意味着你具备了独立完成 app 开发的能力。大家（特别是初学者）需要谨记，一个好的 app 在于它的代码结构清晰、能够完成任务，不在于漂亮的 UI。 所有的功能实现应当把完成分析/可视化目标为第一位，然后再花时间探索具体的 UI 美化。</p>
<p>由于各类读者背景和需求不一致，我这里只做一些通用的学习资料推荐，针对读者所在领域的 app 开发，需要读者自行了解和掌握相关知识背景、分析技能，在此基础上寻找一些已经通过 Shiny 实现的数据库/工具的源代码仓库进行学习。</p>
<ul>
<li>Shiny examples: <a href="https://github.com/rstudio/shiny-examples" class="uri">https://github.com/rstudio/shiny-examples</a></li>
<li>Shiny gallery：<a href="https://shiny.posit.co/r/gallery/" class="uri">https://shiny.posit.co/r/gallery/</a>。官方提供了很多功能特性的 app 实现。</li>
<li>Shiny Data Portal: <a href="https://github.com/SebKrantz/shiny-data-portal" class="uri">https://github.com/SebKrantz/shiny-data-portal</a>。A free Shiny Application to host, filter, aggregate and and download data in various formats.</li>
<li>machLearn, Machine learning dashboard created with R/shiny: <a href="https://github.com/davesteps/machLearn" class="uri">https://github.com/davesteps/machLearn</a></li>
<li>Shiny app for customizing Raincloud plots: <a href="https://github.com/gabrifc/raincloud-shiny" class="uri">https://github.com/gabrifc/raincloud-shiny</a></li>
</ul>
</section>
<section id="推荐资料" class="level2">
<h2 class="anchored" data-anchor-id="推荐资料">推荐资料</h2>
<p>在本文中，我尽量避免推荐比较多的资料，因为对于初学者过多的资料带来的是混淆与压力。我希望你能够通过上述的关卡真正有效地学习和掌握 Shiny 开发的知识要点，并应用于你感兴趣的项目中去。 作为本文的最后一部分，我将提供一些非常重要的资源地址，希望在你困惑或者想要学习更多内容时找到灵感！</p>
<ul>
<li><a href="https://github.com/veeps/shiny_workshop" class="uri">https://github.com/veeps/shiny_workshop</a></li>
<li><a href="https://github.com/grabear/awesome-rshiny" class="uri">https://github.com/grabear/awesome-rshiny</a></li>
<li><a href="https://github.com/nanxstats/awesome-shiny-extensions" class="uri">https://github.com/nanxstats/awesome-shiny-extensions</a></li>
<li><a href="https://github.com/davidruvolo51/shinyAppTutorials" class="uri">https://github.com/davidruvolo51/shinyAppTutorials</a></li>
<li><a href="https://github.com/daattali/advanced-shiny" class="uri">https://github.com/daattali/advanced-shiny</a></li>
</ul>
<p>Enjoy playing with Shiny!</p>


</section>

 ]]></description>
  <category>shiny</category>
  <category>R</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2023-09-13-shiny-learning-path-for-bioinformatics/index.html</guid>
  <pubDate>Tue, 12 Sep 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>检查 CPU 的使用量</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-09-13-check-cpu-usage/index.html</link>
  <description><![CDATA[ 




<p>在 Linux 服务器上有时候需要检查下 CPU 的使用量，现在一般 server 的 CPU 都比较多，而在计算的时候 CPU 也是在动态切换的，像 htop 这种命令输出可以直观的看大体有多少被占用，但没法得到具体的数值。 而传统的指标 cpu load，一般也不太会去看，我们在运算时想的是尽量占用剩余的 CPU，所以如果能够得到比较直观的数字比较好。下面是一个 bash 函数，可以放到 <code>~/.bashrc</code> 中去。 也可以直接在 Shell 中运行。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cpu()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">top</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-bn2</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Cpu'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-P</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(....|...) id,'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">awk</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{print "CPU Usage: " 100-$8 "%"}'</span></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>具体的解释可以看来源文章：https://www.baeldung.com/linux/get-cpu-usage</p>



 ]]></description>
  <category>Linux</category>
  <category>bioinformatics</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2023-09-13-check-cpu-usage/index.html</guid>
  <pubDate>Tue, 12 Sep 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>MAPQ（映射质量）与-AS（比对得分）</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-09-12-mapq-and-as/index.html</link>
  <description><![CDATA[ 




<p>今天看 bwa mem 的 <code>-q</code> 选项，非常困惑：“-q, Don’t reduce the mapping quality of split alignment of lower alignment score”。 与我原来想象中 mapping quality 和 alignment score 两个东西应该相同所不同的是，我查询后发现这的确是两个不同的概念。</p>
<p>mapping quality (MAPQ) 是告诉你某一个 read 来自某一个基因组区域的可靠程度（可信度），而 alignment score（AS）告诉你的是这个序列与参考序列有多相似（生信图书/教程中一般说的比对算法得分就是这个），匹配的多得分就高。</p>
<p>如果你的 reads 完美的匹配到了多个基因组区域，那 AS 就会高但是 MAPQ 会低，如果你的 reads 有一些错配之类的，但匹配到某些位点的可信度比其他位点高，那么 AS 会低，但 MAPQ 会高。</p>
<blockquote class="blockquote">
<p>参考： https://www.biostars.org/p/179457/</p>
</blockquote>
<section id="更多阅读" class="level3">
<h3 class="anchored" data-anchor-id="更多阅读">更多阅读</h3>
<ul>
<li>https://genome.cshlp.org/content/suppl/2008/09/26/gr.078212.108.DC1/maq-supp.pdf</li>
<li>https://bioinformatics.stackexchange.com/questions/2417/meaning-of-bwa-mem-mapq-scores</li>
<li>https://maq.sourceforge.net/qual.shtml</li>
<li>https://support.illumina.com/content/dam/illumina-support/help/Illumina_DRAGEN_Bio_IT_Platform_v3_7_1000000141465/Content/SW/Informatics/Dragen/TPipelineMAPQ_fDG.htm</li>
<li>https://blog.csdn.net/tanzuozhev/article/details/89115080</li>
</ul>


</section>

 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2023-09-12-mapq-and-as/index.html</guid>
  <pubDate>Mon, 11 Sep 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>discourse on the method</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-09-04-discourse-on-the-method/index.html</link>
  <description><![CDATA[ 




<p>笛卡尔在《方法论》中揭示了科学研究和发明创造的普适方法，并概括为 4 个步骤：</p>
<ol type="1">
<li>不盲从，不接受任何自己不清楚的真理。不管什么权威的结论，只要没有经过自己的研究，都可以怀疑。</li>
<li>化繁为简、化整为零。</li>
<li>解决小问题时，按照先易后难的次序，逐步解决。</li>
<li>解决全部小问题后，综合看是否解决了原来的问题。</li>
</ol>
<p>科学发展的规律为：</p>
<ol type="1">
<li>提出问题</li>
<li>进行实验</li>
<li>从实验中得到结论并解释</li>
<li>将结论推广并普遍化</li>
<li>在实践中找出新的问题</li>
</ol>
<blockquote class="blockquote">
<p>来源： 吴军 —— 《全球科技通史》</p>
</blockquote>



 ]]></description>
  <category>academic</category>
  <category>note</category>
  <category>thought</category>
  <guid>https://shixiangwang.github.io/posts/2023-09-04-discourse-on-the-method/index.html</guid>
  <pubDate>Sun, 03 Sep 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>circRNA鉴定流程-使用手册</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/index.html</link>
  <description><![CDATA[ 




<p>本系统提供了一个使用四种方法（CIRIquant、Circexplorer2、find_circ和circRNA_finder）从转录组双端测序的FASTQ文件中轻松且可重复地检测环状RNA（circRNA）的计算流程。</p>
<section id="功能特性" class="level2">
<h2 class="anchored" data-anchor-id="功能特性">功能特性</h2>
<ul>
<li>多方法鉴定和整合</li>
<li>并行计算支持</li>
<li>断点续跑</li>
<li>结果整合和规整化输出</li>
<li>日志记录</li>
</ul>
</section>
<section id="准备工作" class="level2">
<h2 class="anchored" data-anchor-id="准备工作">准备工作</h2>
<section id="操作系统环境" class="level3">
<h3 class="anchored" data-anchor-id="操作系统环境">操作系统环境</h3>
<p>本系统需要运行在 Linux 系统环境中（不限发行版本，测试系统包括 Ubuntu、CentOS）。 需要用户知道如何操作 Linux 系统。</p>
</section>
<section id="步骤1.-安装所需的conda环境" class="level3">
<h3 class="anchored" data-anchor-id="步骤1.-安装所需的conda环境">步骤1. 安装所需的conda环境</h3>
<ol type="1">
<li><p>（可选）创建一个名为’circrna’的独立Linux帐户，用于部署和运行循环RNA识别流程。</p></li>
<li><p>安装<a href="https://docs.conda.io/en/latest/miniconda.html">miniconda3</a>到默认路径，即<code>~/miniconda3</code>。 如果按照上述推荐设置，conda应该可在<code>/home/circrna/miniconda3</code>处使用。</p></li>
<li><p>使用<code>conda install -n base --override-channels -c conda-forge mamba 'python_abi=*=*cp*'</code>将<a href="https://mamba.readthedocs.io/en/latest/installation.html">mamba</a>安装到<code>base</code>环境中。</p></li>
<li><p>使用以下命令安装<a href="https://just.systems/">just</a>：<code>curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin</code>。请将<code>~/bin</code>添加到您的<code>$PATH</code>中。 您可以将<code>~/bin</code>更改为任何位置，但在进入终端时需要使<code>just</code>可用。</p></li>
<li><p>安装<a href="https://github.com/shenwei356/rush">rush</a>并将其路径添加到<code>$PATH</code>，类似于<code>just</code>。</p></li>
<li><p>（可选）如果需要，设置conda和pypi（pip）的注册表。例如，如果您在中国，我建议使用以下链接进行设置：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/">https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/</a> 和 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/">https://mirrors.tuna.tsinghua.edu.cn/help/pypi/</a>。</p></li>
<li><p>使用本软著提供的代码，并切换到代码目录。</p></li>
<li><p>按顺序安装conda环境。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> circrna-pipeline</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> CIRIquant</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">just</span> install</span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ../FindCirc</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">just</span> install</span>
<span id="cb1-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ../Circexplorer2</span>
<span id="cb1-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">just</span> install</span>
<span id="cb1-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ../circRNA_finder</span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">just</span> install</span></code></pre></div></li>
</ol>
<p>请确保已创建所有conda环境并安装了所需的软件。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903160124763.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903160124763</figcaption>
</figure>
</div>
</section>
<section id="步骤2.-准备比对索引参考文件和配置文件" class="level3">
<h3 class="anchored" data-anchor-id="步骤2.-准备比对索引参考文件和配置文件">步骤2. 准备比对索引、参考文件和配置文件</h3>
<p>要运行流程，需要准备好一些参考数据文件。</p>
<ol type="1">
<li><p>准备基因组fasta文件和gtf文件。我们使用<code>GRCh38.primary_assembly.genome.fa</code>和<code>gencode.v34.annotation.gtf</code>。</p></li>
<li><p>对于Circexplorer2，您需要使用<code>Circexplorer2</code>环境中的<code>fetch_ucsc.py</code>脚本下载参考文件<code>hg38_ref_all.txt</code>（应与您的参考基因组相对应）。</p></li>
<li><p>准备比对索引，<a href="config_zhou.sh">config_zhou.sh</a>中记录了命令和配置，截图如下。</p>
<img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903160258992.png" class="img-fluid" alt="image-20230903160258992">
<p>请注意，在运行索引命令之前，您需要激活相应的环境。</p>
<p>例如，为CIRIquant准备索引。 <code>sh  source activate CIRIquant  bwa index -a bwtsw -p /path/to/GRCh38.primary_assembly.genome.fa /path/to/GRCh38.primary_assembly.genome.fa  hisat2-build -p 40 /path/to/GRCh38.primary_assembly.genome.fa /path/to/GRCh38.primary_assembly.genome.fa</code></p></li>
<li><p>对于CIRIquant，需要一个<code>yml</code>文件来设置软件和文件的路径，例如hg38.yml (CIRIquant/hg38.yml，截图如下)。您需要修改内容以适应您的设置（也可以创建另一个<code>yml</code>文件）。</p>
<img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903160451460.png" class="img-fluid" alt="image-20230903160451460"></li>
<li><p>设置一个<code>config.sh</code>文件，它使用SHELL变量设置了所有必需的设置，config_zhou.sh (config_zhou.sh) 是一个很好的参考（当然，您可以根据需要修改其内容）。</p>
<img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903160258992.png" class="img-fluid" alt="image-20230903160258992"></li>
</ol>
</section>
</section>
<section id="使用流程" class="level2">
<h2 class="anchored" data-anchor-id="使用流程">使用流程</h2>
<section id="预处理转录组双端测序的-fastq-文件" class="level3">
<h3 class="anchored" data-anchor-id="预处理转录组双端测序的-fastq-文件">预处理转录组双端测序的 fastq 文件</h3>
<p>这一部分的代码存储在 qc 和common目录下面，我们提供了 <code>md5check.sh</code> 方便用户对自己的数据进行 md5 完整性检查，确保数据完整后可以开始进行数据的预处理步骤，包括质控、去除双端的人为标记序列（adapters）。用户输入的文件后缀需要确保为<code>_1.fastq.gz</code>和<code>_2.fastq.gz</code>。示例文件列表截图如下，红色框选了文件后缀。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903160856615.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903160856615</figcaption>
</figure>
</div>
<p>完成后可以进行预处理操作，下面提供了示例的 Shell 脚本。</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 指定软件路径</span></span>
<span id="cb2-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">py</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/home/circrna/miniconda3/bin/python3</span>
<span id="cb2-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/home/circrna/miniconda3/bin/fastp</span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 指定代码目录</span></span>
<span id="cb2-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PIPELINE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/home/circrna/circrna-pipeline</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 指定输入、输出路径</span></span>
<span id="cb2-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fqfile</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>./sample_list.txt</span>
<span id="cb2-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">indir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/input</span>
<span id="cb2-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oudir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/output</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 配置 CPU 数目</span></span>
<span id="cb2-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>20</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 调用脚本生成输入目录下的样本 ID 列表</span></span>
<span id="cb2-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${py}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PIPELINE}</span>/common/ll_fq.py <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${indir}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${fqfile}</span></span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 调用预处理命令到后台运行，并将运行的日志导出到 test_qc.log</span></span>
<span id="cb2-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nohup</span> bash <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PIPELINE}</span>/qc/fp.sh <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${fqfile}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${indir}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${oudir}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${nthreads}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${fp}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> test_qc.log <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span></code></pre></div>
<p>下面截图展示了预处理的日志信息，最终会生成样本的质量检测报告（html文件）。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903161015118.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903161015118</figcaption>
</figure>
</div>
<p>报告文件截图：</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903161412806.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903161412806</figcaption>
</figure>
</div>
</section>
<section id="运行检测流程" class="level3">
<h3 class="anchored" data-anchor-id="运行检测流程">运行检测流程</h3>
<p>创建一个包含以下设置和命令的shell脚本。</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 指定输入、输出路径</span></span>
<span id="cb3-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fqfile</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>./sample_list.txt</span>
<span id="cb3-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">indir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/include/paired/fastq/files</span>
<span id="cb3-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">oudir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/output</span>
<span id="cb3-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>20</span>
<span id="cb3-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">config</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/your/config.sh</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">common/ll_fq.py</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${indir}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${fqfile}</span></span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nohup</span> bash caller.sh <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${fqfile}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${indir}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${oudir}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${nthreads}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${config}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> run.log <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;</span></span></code></pre></div>
<blockquote class="blockquote">
<p>必须在conda <code>base</code>环境中（或已安装<code>python3</code>的情况下）执行该脚本。 如果您已经自己准备了<code>sample_list.txt</code>文件。 您可以注释掉<code>common/ll_fq.py</code>这一行，然后可以在bash中运行该脚本 而无需任何其他要求（例如，不需要从<code>base</code>环境中安装<code>python3</code>）。</p>
</blockquote>
<p>我建议使用2个样本测试流程。如果一切顺利，然后运行您拥有的所有数据文件。流程将跳过已生成结果文件的样本。</p>
<p>日志截图：</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903162126629.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903162126629</figcaption>
</figure>
</div>
<p>如果运行出现中断，再次运行脚本/命令即可，流程会自动跳过已检测完成的样本。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903162238611.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903162238611</figcaption>
</figure>
</div>
</section>
<section id="检查检测输出结果" class="level3">
<h3 class="anchored" data-anchor-id="检查检测输出结果">检查检测输出结果</h3>
<p>输出目录包含根据样本名称和方法组合的结果文件。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903161627392.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903161627392</figcaption>
</figure>
</div>
<p>结果文件通常包含循环RNA的位置和计数值。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903161702141.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903161702141</figcaption>
</figure>
</div>
</section>
<section id="聚合结果" class="level3">
<h3 class="anchored" data-anchor-id="聚合结果">聚合结果</h3>
<p>上述生成了 4 种检测方法的单独结果，我们下一步需要对结果进行聚合，相关代码放在 aggr 目录下。</p>
<p><code>aggr_beds.R</code> 提供了对方法结果聚合的代码，示例运行命令为：</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./aggr/aggr_dataset.R</span> /path/to/result /path/to/aggr_output</span></code></pre></div>
<p>这样每一个样本都有一个聚合的结果文件。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903161752469.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903161752469</figcaption>
</figure>
</div>
<p>进一步，用户还可以利用 <code>aggr_dataset.R</code> 对全部的样本（即整个输入数据集）结果生成一个整合结果。</p>
<p>调用命令为：</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./aggr/aggr_dataset.R</span> /path/to/aggr_output /path/to/dataset_output</span></code></pre></div>
<p>最后结果会在 <code>/path/to/dataset_output</code> 生成 <code>aggr_output_circRNA.tsv.gz</code> 文件，这是一个大的压缩数据表格，包含以下一些列信息。</p>
<pre><code>id, symbol, strand, chrom, startUpBSE, endDownBSE, tool, samples...</code></pre>
<ul>
<li>id: circRNA 的唯一标记信息</li>
<li>symbol: 基因名</li>
<li>strand: 链信息</li>
<li>chrom: circRNA 染色体信息</li>
<li>startUpBSE: circRNA 染色体起点</li>
<li>endDownBSE: circRNA 染色体终点</li>
<li>tool: 方法标记</li>
<li>samples…：其他每列都对应处理的一个样本</li>
</ul>
<p>下面是测试生成的文件：</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903162442921.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903162442921</figcaption>
</figure>
</div>
<p>查看它的部分内容数据：</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/https:/cdn.jsdelivr.net/gh/shixiangwang/cdn/img/image-20230903162511289.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-20230903162511289</figcaption>
</figure>
</div>
<p>用户可以利用流程不同的结果进行下游的分析和研究，包括：</p>
<ul>
<li>不同方法的检测结果</li>
<li>同一个样本不同方法检测的聚合结果</li>
<li>整个输入样本数据集的检测整合结果</li>
</ul>


</section>
</section>

 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2023-09-03-use-circrna-pipeline/index.html</guid>
  <pubDate>Sat, 02 Sep 2023 16:00:00 GMT</pubDate>
</item>
<item>
  <title>pnas</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2023-08-31-pnas/index.html</link>
  <description><![CDATA[ 




<p>想发一篇 PNAS，希望 3 年内能达成。</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2023-08-31-pnas/index.html</guid>
  <pubDate>Wed, 30 Aug 2023 16:00:00 GMT</pubDate>
</item>
</channel>
</rss>
