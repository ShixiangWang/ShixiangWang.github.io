<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Reasoning</title>
<link>https://shixiangwang.github.io/</link>
<atom:link href="https://shixiangwang.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Reasoning is a blog dedicated to exploring the intersection of data science, bioinformatics, and personal insights.</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Sun, 17 Nov 2024 16:00:00 GMT</lastBuildDate>
<item>
  <title>random - 书摘</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-18-random/</link>
  <description><![CDATA[ 





<p>道可顿悟，事须渐修。</p>
<hr>
<ul>
<li>复杂的事情复杂说，是<strong>压力</strong>。</li>
<li>复杂的事情简单说，是<strong>能力</strong>。</li>
<li>复杂的事情有趣说，是<strong>魅力</strong>。</li>
</ul>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-18-random/</guid>
  <pubDate>Sun, 17 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>既不喜欢，也不讨厌</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-17-random/</link>
  <description><![CDATA[ 





<p>今天在同妹妹的闲聊中得到她对于当前大学所学习专业的感受，“既不喜欢，也不讨厌”，我恍然中回到了我自己的大一的时候（12年前了），也是这般的感受，不仅仅是我自己，周围听到的也大多数是这种声音。我突然间有了一些个人感慨和领悟，当然可能是片面的，那就是：如果我们国家的高等教育能够显著地（不一定都改变了，而是发生了显著地增加）将这种“既不喜欢，也不讨厌”的感受改变成“这就是我喜欢的”或者“这就是我想要尝试的”，我们国内的高等教育可能才发生了真正重大的进步。</p>



 ]]></description>
  <category>random</category>
  <category>thought</category>
  <category>教育</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-17-random/</guid>
  <pubDate>Sat, 16 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Zero Shot, One Shot 和 Few Shot</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-14-zero-shot/</link>
  <description><![CDATA[ 





<p>在大语言模型中有这几个相似的概念，区别在于，传统的模型需要通过梯度下降等方式来更新和预测新的任务，而针对大语言模型，更针对的说是预训练模型，我们在实际使用时给出一些例子，会让结果更好。</p>
<p>Zero shot 就是完全不提供任何例子，直接给出任务以及数据，如中英文翻译，然后给出想要翻译的词。One shot即先给出一个实例，再给出想要翻译的词。Few shot即给出多个实例，一般3-10个。</p>



 ]]></description>
  <category>AI</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-14-zero-shot/</guid>
  <pubDate>Wed, 13 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>我记得</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-11-random/</link>
  <description><![CDATA[ 





<p>记忆是那么不牢固，我们一辈子又深陷其中，它追溯到我们来的时候，去往我们不可预知又必然而然的终点。</p>
<p>我越来越觉得，世界上美的东西，是难以描述和述说的，那是种主观的感受和体验。真正重要的文字和言语，是对这种体验的启发。</p>
<p>来去的意义、学习的意义、工作的意义、生活的意义、安稳的意义、名利的意义，有时候在我的脑海中时沉时浮，它们是“意义”，也是“活着”的目的和证明，但真正能代表我们这一生的痕迹吗？</p>
<p>在寻找工作，填写项目时，我一遍又一遍填写我的简历内容，好像生平已经被这些一两百字的描述吸收殆尽，我突然有一种惶恐，世人有可能会从这些文字中了解我吗？就如同我小时学习的那些诗人生平一般？</p>
<p>死亡，真是一种阴影！</p>
<hr>
<iframe width="560" height="315" src="https://www.youtube.com/embed/MmMvMF3ZC4o?si=Ct79YECsfQYotj6R" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<hr>
<blockquote class="blockquote">
<p>《我记得》歌词</p>
</blockquote>
<p>我带着比身体重的行李</p>
<p>游入尼罗河底</p>
<p>经过几道闪电 看到一堆光圈</p>
<p>不确定是不是这里</p>
<p>我看到几个人站在一起</p>
<p>他们拿着剪刀摘走我的行李</p>
<p>擦拭我的脑袋 没有机会返回去</p>
<p>直到我听见一个声音 我确定是你</p>
<p>可你怎记得我</p>
<p>我带来了另界的消息</p>
<p>可我怎么告知你</p>
<p>注定失忆着相遇</p>
<p>我记得这里是片树林 后面有个山坡</p>
<p>山坡上的枣树每当秋天到来</p>
<p>我们把枣装满口袋</p>
<p>我记得除了朋友我还 做过你的叔父</p>
<p>你总喜欢跟在我的屁股后面</p>
<p>只是为了那几个铜钱</p>
<p>我记得我们曾是恋人 后来战争爆发</p>
<p>你上战场后就再也没有回来</p>
<p>直到收不到你的信</p>
<p>我们总这样重复分离 却要重新开始</p>
<p>相互送别对方 说着来世再见</p>
<p>再次失忆着相聚</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>在路上我遇到了一位故去多年的人</p>
<p>她是如此年轻 扎着过肩马尾</p>
<p>露出和你一样的笑</p>
<p>她和我讲了很多关于你成长的故事</p>
<p>在星空另一端 思念从未停止</p>
<p>如同墓碑上的名字</p>
<p>不要哭我最亲爱的人 我最好的玩伴</p>
<p>时空是个圆圈 直行或是转弯</p>
<p>我们最终都会相见</p>
<p>在城池的某个拐角处 在夕阳西下时</p>
<p>在万家灯火的某一扇窗纱里</p>
<p>人们失忆着相聚</p>
<p>呜 快来抱抱 快来抱抱我</p>
<p>呜 快来抱抱 快来抱抱我</p>
<p>我终于找到你</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-11-random/</guid>
  <pubDate>Sun, 10 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>sigmoid 的数学与计算实现</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-10-21-sigmoid_2ways/</link>
  <description><![CDATA[ 





<p>深度学习中的 Sigmoid 激活函数的定义公式为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_k%20=%20%5Cfrac%7Bexp(a_k)%7D%7B%5Csum_%7Bi=1%7D%5E%7Bn%7Dexp(a_i)%7D%0A"></p>
<p>在计算实现上优化后的公式为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_k%20=%20%5Cfrac%7Bexp(a_k%20+%20C)%7D%7B%5Csum_%7Bi=1%7D%5E%7Bn%7Dexp(a_i%20+%20C)%7D%0A"></p>
<p>将 C 设定为 <img src="https://latex.codecogs.com/png.latex?exp(a_i)"> 的最大值，就可以规避计算机计算溢出问题。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> softmax(a):</span>
<span id="cb1-4">    exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(a)</span>
<span id="cb1-5">    sum_exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(exp_a)</span>
<span id="cb1-6">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sum_exp_a</span>
<span id="cb1-7"></span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> y</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> softmax2(a):</span>
<span id="cb1-11">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(a)</span>
<span id="cb1-12">    exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> c)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 溢出对策</span></span>
<span id="cb1-13">    sum_exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(exp_a)</span>
<span id="cb1-14">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sum_exp_a</span>
<span id="cb1-15"></span>
<span id="cb1-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> y</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax(10) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax(1000) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax2(10) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax2(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax2(1000) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax2(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p>结果：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❯</span> python sigmoid_2ways.py</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">10</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [1.23394576e-04 9.99876605e-01]</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/Users/family/Library/CloudStorage/OneDrive-shanghaitech.edu.cn/Learn/deeplearning/deep_learning_demo/ch03/sigmoid_2ways.py:4:</span> RuntimeWarning: overflow encountered in exp</span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">exp_a</span> = np.exp<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">a</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/Users/family/Library/CloudStorage/OneDrive-shanghaitech.edu.cn/Learn/deeplearning/deep_learning_demo/ch03/sigmoid_2ways.py:6:</span> RuntimeWarning: invalid value encountered in divide</span>
<span id="cb2-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y</span> = exp_a / sum_exp_a</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1000</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [ 0. nan]</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">10</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [1.23394576e-04 9.99876605e-01]</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1000</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [0. 1.]</span></code></pre></div>



 ]]></description>
  <category>python</category>
  <category>machine-learning</category>
  <guid>https://shixiangwang.github.io/posts/2024-10-21-sigmoid_2ways/</guid>
  <pubDate>Sun, 20 Oct 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>准备CNS阅读简记</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-10-15-cns-note/</link>
  <description><![CDATA[ 





<p>准备系统地弄一些文献阅读的计划，增强下自己的内在功底，针对性的写/记录一些笔记。</p>



 ]]></description>
  <category>CNS简记</category>
  <guid>https://shixiangwang.github.io/posts/2024-10-15-cns-note/</guid>
  <pubDate>Mon, 14 Oct 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>随想</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-05-03-random/</link>
  <description><![CDATA[ 





<p>了解的越多，才知道懂的不多。</p>
<p>懂的再多，做的不一定要多。</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2024-05-03-random/</guid>
  <pubDate>Thu, 02 May 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>近期摘录</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-29-random/</link>
  <description><![CDATA[ 





<p>当技术变得隐形时才是最强大的。</p>
<p>“如果你想走得快，就独自走；如果你想走得远，就一起走。”</p>
<p>——— 《宝贵的人生建议》</p>
<hr>
<p>“别把焦点只放在‘你的事业’上，这是你为自己的事业所做的最好的一件事”</p>
<p>“把问题交给合适的人来负责，而不是绞尽脑汁地亲力亲为，你才能有更多机会收获更好的解决方案。”</p>
<p>“先人后事”意味着始终敞开招贤纳士的大门，始终保持高度开放的态度，时刻准备着在任何可能的地方遇到绝妙的人才。”</p>
<p>“想想自己生活中的“人运”。它可能是偶遇一位改变自己人生的导师，可能是结交一位挚友或者遇到理想的生活伴侣，遇到一位绝佳的上司或工作搭档，也可能是不经意间招聘到绝妙的人才。”</p>
<p>“直到后来的某一天，我终于恍然大悟。我决定不再只关注自己的事业前途。相反，我决心照顾好自己的下属。接下来，一切都不一样了。他们反过来照顾我，不允许失败发生在我身上！”</p>
<p>“要照顾你的下属，而不是你的前途”</p>
<p>“我们不可能用奖励把不合适的人变成合适的人”</p>
<p>—— 《从优秀到卓越》</p>



 ]]></description>
  <category>random</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-29-random/</guid>
  <pubDate>Sun, 28 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>sratools networking issue</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-22-sratools-networking-issue/</link>
  <description><![CDATA[ 





<p>在使用 sratools 的 fastq-dump 时出现了成片的问题信息：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: connection failed while opening file within cryptographic module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> mbedtls_ssl_handshake returned <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-9984</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">X509</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> Certificate verification failed, e.g. CRL, CA or signature check failed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: mbedtls_ssl_get_verify_result returned 0x4008 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span>  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!!</span> The certificate is not correctly signed by the trusted CA  !! The certificate is signed with an unacceptable hash.  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: connection failed while opening file within cryptographic module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> ktls_handshake failed while accessing <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'130.14.29.110'</span> from <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'192.168.120.54'</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: connection failed while opening file within cryptographic module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> Failed to create TLS stream for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'www.ncbi.nlm.nih.gov'</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">130.14.29.110</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'192.168.120.54'</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 err: item not found while constructing within virtual database module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> the path <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERR5242993'</span> cannot be opened as database or table</span></code></pre></div>
<p>问题指向了证书。但谷歌后依然不得其解，一是很久没有动过这个服务器的配置，怎么会出现证书之类的搞不清的问题呢？二是 按照网络上的方法检查了证书也还是没有找到原因。</p>
<p>后续将问题的研究转向 sratools 本身，发现<a href="https://blog.csdn.net/qq_68453356/article/details/137791450">这个帖子</a>给了非常有用的提示：fastq-dump的版本和sratools本身的版本不一致。</p>
<p>我检查后发现的确如此：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">base</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[wsx@xu2</span> debug]$ prefetch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Usage:</span></span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SRA accession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> SRA files and their dependencies</span>
<span id="cb2-5"></span>
<span id="cb2-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cart</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>kart file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> cart file</span>
<span id="cb2-8"></span>
<span id="cb2-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>URL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> --output-file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>FILE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-10">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> URL to FILE</span>
<span id="cb2-11"></span>
<span id="cb2-12">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>URL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output-directory</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>DIRECTORY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> URL or URL-s to DIRECTORY</span>
<span id="cb2-14"></span>
<span id="cb2-15">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SRA file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-16">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Check</span> SRA file for missed dependencies and download them</span>
<span id="cb2-17"></span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Options:</span></span>
<span id="cb2-20">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-T</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>                Specify file type to download. Default: sra </span>
<span id="cb2-21">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-t</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--transport</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>http<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fasp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">both</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>  Transport: one of: fasp<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">both</span> </span>
<span id="cb2-22">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[default].</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fasp</span> only<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http</span> only<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">first</span> try </span>
<span id="cb2-23">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fasp</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ascp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> use http if cannot download </span>
<span id="cb2-24">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">using</span> fasp<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> </span>
<span id="cb2-25">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--location</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>               Location of data. </span>
<span id="cb2-26"></span>
<span id="cb2-27">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-N</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--min-size</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Minimum file size to download in KB </span>
<span id="cb2-28">                                   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">inclusive</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> </span>
<span id="cb2-29">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-X</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--max-size</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Maximum file size to download in KB </span>
<span id="cb2-30">                                   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">exclusive</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> Default: 20G </span>
<span id="cb2-31">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-f</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--force</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>yes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">no</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">all</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ALL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>      Force object download: one of: no, yes, </span>
<span id="cb2-32">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">all,</span> ALL. no <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">default</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>: skip download if the </span>
<span id="cb2-33">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">object</span> if found and complete<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yes:</span> download </span>
<span id="cb2-34">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">it</span> even if it is found and is complete<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">all:</span> </span>
<span id="cb2-35">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ignore</span> lock files <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stale</span> locks or it is </span>
<span id="cb2-36">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">being</span> downloaded by another process use </span>
<span id="cb2-37">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> your own risk!<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ALL:</span> ignore lock files, </span>
<span id="cb2-38">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">restart</span> download from beginning. </span>
<span id="cb2-39">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--resume</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>yes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">no</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Resume partial downloads: one of: no, yes </span>
<span id="cb2-40">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[default].</span> </span>
<span id="cb2-41">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-C</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--verify</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>yes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">no</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Verify after download: one of: no, yes </span>
<span id="cb2-42">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[default].</span> </span>
<span id="cb2-43">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--progress</span>                    Show progress. </span>
<span id="cb2-44">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-H</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--heartbeat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>           Time period in minutes to display download </span>
<span id="cb2-45">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">progress.</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0:</span> no progress<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> default: 1 </span>
<span id="cb2-46"></span>
<span id="cb2-47">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--eliminate-quals</span>                Don<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t download QUALITY column. </span></span>
<span id="cb2-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -c|--check-all                   Double-check all refseqs. </span></span>
<span id="cb2-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -S|--check-rs &lt;yes|no|smart&gt;     Check for refseqs in downloaded files: one </span></span>
<span id="cb2-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   of: no, yes, smart [default]. Smart: skip </span></span>
<span id="cb2-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   check for large encrypted non-sra files. </span></span>
<span id="cb2-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -o|--order &lt;kart|size&gt;           Kart prefetch order when downloading </span></span>
<span id="cb2-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   kart: one of: kart, size. (in kart order, by </span></span>
<span id="cb2-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   file size: smallest first), default: size. </span></span>
<span id="cb2-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -R|--rows &lt;rows&gt;                 Kart rows to download (default all). Row </span></span>
<span id="cb2-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   list should be ordered. </span></span>
<span id="cb2-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --perm &lt;PATH&gt;                    PATH to jwt cart file. </span></span>
<span id="cb2-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --ngc &lt;PATH&gt;                     PATH to ngc file. </span></span>
<span id="cb2-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --cart &lt;PATH&gt;                    To read kart file. </span></span>
<span id="cb2-60"></span>
<span id="cb2-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -a|--ascp-path &lt;ascp-binary|private-key-file&gt;  Path to ascp program and </span></span>
<span id="cb2-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   private key file (asperaweb_id_dsa.putty) </span></span>
<span id="cb2-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --ascp-options &lt;value&gt;           Arbitrary options to pass to ascp command </span></span>
<span id="cb2-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   line. </span></span>
<span id="cb2-65"></span>
<span id="cb2-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -o|--output-file &lt;FILE&gt;          Write file to FILE when downloading </span></span>
<span id="cb2-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   single file. </span></span>
<span id="cb2-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -O|--output-directory &lt;DIRECTORY&gt;  Save files to DIRECTORY/ </span></span>
<span id="cb2-69"></span>
<span id="cb2-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -h|--help                        Output brief explanation for the program. </span></span>
<span id="cb2-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -V|--version                     Display the version of the program then </span></span>
<span id="cb2-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   quit. </span></span>
<span id="cb2-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -L|--log-level &lt;level&gt;           Logging level as number or enum string. One </span></span>
<span id="cb2-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   of (fatal|sys|int|err|warn|info|debug) or </span></span>
<span id="cb2-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   (0-6) Current/default is warn </span></span>
<span id="cb2-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -v|--verbose                     Increase the verbosity of the program </span></span>
<span id="cb2-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   status messages. Use multiple times for more </span></span>
<span id="cb2-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   verbosity. Negates quiet. </span></span>
<span id="cb2-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -q|--quiet                       Turn off all status messages for the </span></span>
<span id="cb2-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   program. Negated by verbose. </span></span>
<span id="cb2-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --option-file &lt;file&gt;             Read more options and parameters from the </span></span>
<span id="cb2-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   file. </span></span>
<span id="cb2-83"></span>
<span id="cb2-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">prefetch : 3.0.2</span></span>
<span id="cb2-85"></span>
<span id="cb2-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(base) [wsx@xu2 debug]$ which fast</span></span>
<span id="cb2-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fasterq-dump             fasterq-dump-orig.3.0.2  fastq-dump.3.0.2         fastq-load.3             </span></span>
<span id="cb2-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fasterq-dump.3           fastq-dump               fastq-dump-orig.3.0.2    fastq-load.3.0.2         </span></span>
<span id="cb2-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fasterq-dump.3.0.2       fastq-dump.3             fastq-load               </span></span>
<span id="cb2-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(base) [wsx@xu2 debug]$ fastq-dump --version</span></span>
<span id="cb2-91"></span>
<span id="cb2-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fastq-dump : 2.9.2</span></span></code></pre></div>
<p>继续查看了 <code>~/.bashrc</code> 和环境变量：</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> echo <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/data3/wsx/miniconda3/bin:/usr/local/bin:/data3/wsx/miniconda3/condabin:/data3/wsx/bin:/data3/wsx/soft/sratoolkit/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/usr/lib/rstudio-server/bin/quarto/bin:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/bin:/data3/wsx/.local/bin:/data3/wsx/bin</span></span></code></pre></div>
<p>发现环境变量很有问题，在 <code>~/.bashrc</code> 的设置逻辑里 <code>/data3/wsx/soft/sratoolkit/bin</code> 应该是很靠前的， 但 conda 的激活将 <code>/usr/local/bin</code> 提前了，这就导致了 fastq-dump 使用的是系统的一个版本，从而产生了这种不一致的情况。</p>
<pre><code>[wsx@xu2 share]$ which fastq-dump
/usr/local/bin/fastq-dump</code></pre>
<p>我的解决办法就是在 dump 数据前，显式地运行 <code>export PATH=$HOME/soft/sratoolkit/bin:$PATH</code> 命令将正确的路径前提。</p>
<p>在脚本中的使用情况如下：</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /data3/wsx/share/gcap_debug</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /data3/wsx/share/gcap_debug/temp</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span>/soft/sratoolkit/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ERR5242993 ERR5243012</span>
<span id="cb5-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-9">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> handling <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$i</span></span>
<span id="cb5-10">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parallel-fastq-dump</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> 20 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--tmpdir</span> temp <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> gcap_debug/ <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--split-3</span>  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gzip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$i</span></span>
<span id="cb5-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
<p>这样去运行就没有这个问题了：</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> bash 0-dump-sra.sh </span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">handling</span> ERR5242993</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">SRR</span> ids: <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERR5242993'</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb6-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">extra</span> args: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--split-3'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--gzip'</span>]</span>
<span id="cb6-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tempdir:</span> temp/pfd_ocitp7xi</span>
<span id="cb6-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ERR5242993</span> spots: 31931880</span>
<span id="cb6-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">blocks:</span> [[1, 1596594], [1596595, 3193188], [3193189, 4789782], [4789783, 6386376], [6386377, 7982970], [7982971, 9579564], [9579565, 11176158], [11176159, 12772752], [12772753, 14369346], [14369347, 15965940], [15965941, 17562534], [17562535, 19159128], [19159129, 20755722], [20755723, 22352316], [22352317, 23948910], [23948911, 25545504], [25545505, 27142098], [27142099, 28738692], [28738693, 30335286], [30335287, 31931880]]</span>
<span id="cb6-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Failed</span> to call external services.</span>
<span id="cb6-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Read</span> 1596594 spots for ERR5242993</span>
<span id="cb6-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Written</span> 1596594 spots for ERR5242993</span>
<span id="cb6-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Read</span> 1596594 spots for ERR5242993</span>
<span id="cb6-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Written</span> 1596594 spots for ERR5242993</span>
<span id="cb6-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Read</span> 1596594 spots for ERR5242993</span></code></pre></div>
<p>总结下来是：报错信息和错误的根源有时候南辕北辙。除了从问题本身思考，也要从其他可能得角度去探索。</p>



 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-22-sratools-networking-issue/</guid>
  <pubDate>Sun, 21 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>single cell 处理笔记</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-16-single-cell-records/</link>
  <description><![CDATA[ 





<p>今天请教了下朝晔单细胞处理的一些细节，这里做个记录。</p>
<section id="处理流程" class="level2">
<h2 class="anchored" data-anchor-id="处理流程">处理流程</h2>
<p>首先整个数据质控后分大群，将上皮和非上皮分开处理， 然后大群下的免疫细胞再拆分单独处理 seurat 流程，分割小群。 小群分析时先聚类并寻找markers基因，查看top markers基因与已知报道（参考）的一致性和在小群中的 特异性，进行生物学注释，如cDC1.C14(GPR183)，有比较一致marker基因的小群可以考虑去除，双细胞或异常 细胞群可以在这个过程中去除。</p>
<p>在分群的时候，分大群或小群，以及小群之间一般怎么设置cluster resolution这个参数呢？ &gt;有一些软件可以辅助判断一下（ROGUE），但我一般分的时候，小群会设的稍微高一点1-1.5，如果有性质比较一致的亚群就把他们合并在一起就好了，大体来说这个值的设定比较主观</p>
</section>
<section id="预处理-code" class="level2">
<h2 class="anchored" data-anchor-id="预处理-code">预处理 Code</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(Seurat)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(magrittr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DoubletFinder)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1 Function----</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1.1 Seurat standard workflow----</span></span>
<span id="cb1-10">seuratdeal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(SeuratObject, resolution){</span>
<span id="cb1-11">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NormalizeData</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalization.method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LogNormalize"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale.factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb1-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find Variable Features</span></span>
<span id="cb1-13">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindVariableFeatures</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selection.method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>)</span>
<span id="cb1-14">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(SeuratObject)</span>
<span id="cb1-15">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunPCA</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">npcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-16">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunUMAP</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb1-17">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindNeighbors</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> resolution)</span>
<span id="cb1-18">}</span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1.2 Delete doublet----</span></span>
<span id="cb1-20">DelDoublet <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(SeuratObject, DoubletRate){</span>
<span id="cb1-21">  sweep.res.list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paramSweep_v3</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PCs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sct =</span> F)</span>
<span id="cb1-22">  sweep.stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarizeSweep</span>(sweep.res.list, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">GT =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)  </span>
<span id="cb1-23">  bcmvn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find.pK</span>(sweep.stats)</span>
<span id="cb1-24">  pK_bcmvn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bcmvn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pK[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.max</span>(bcmvn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>BCmetric)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>()</span>
<span id="cb1-25">  homotypic.prop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modelHomotypic</span>(SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seurat_clusters)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># celltype is the best choice</span></span>
<span id="cb1-26">  nExp_poi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(DoubletRate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(SeuratObject)) </span>
<span id="cb1-27">  nExp_poi.adj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(nExp_poi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>homotypic.prop))</span>
<span id="cb1-28">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doubletFinder_v3</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PCs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pN =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pK =</span> pK_bcmvn, </span>
<span id="cb1-29">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nExp =</span> nExp_poi.adj, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reuse.pANN =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sct =</span> F)</span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(SeuratObject)</span>
<span id="cb1-31">}</span></code></pre></div>
<p>例子：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">countpath <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data1/chywang/STAD_Cohort/GSE183904"</span></span>
<span id="cb2-2">FileID <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(countpath)</span>
<span id="cb2-3"></span>
<span id="cb2-4">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(FileID, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateSeuratObject</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.delim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(countpath, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, i), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> T, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>),</span>
<span id="cb2-5">                                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.cells =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb2-6">                                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>,</span>
<span id="cb2-7">                                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">project =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split_fixed</span>(i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)[ ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".csv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, .))})</span>
<span id="cb2-8"></span>
<span id="cb2-9">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nFeature_RNA</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6000</span>)})</span>
<span id="cb2-10">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){</span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PercentageFeatureSet</span>(i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^MT-"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent.mt"</span>)})</span>
<span id="cb2-12">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(i, percent.mt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)})</span>
<span id="cb2-13">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seuratdeal</span>(i, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)})</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate doublet ratio</span></span>
<span id="cb2-16">doubletratio <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(combine)) {</span>
<span id="cb2-18">  doubletratio[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (combine[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.004</span>}</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run DoubletFinder</span></span>
<span id="cb2-21">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapply</span>(DelDoublet, combine, doubletratio)</span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(combine)) {</span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(combine[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[combine[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>()] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doubletstate"</span></span>
<span id="cb2-25">}</span>
<span id="cb2-26">GSE183904 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reduce</span>(merge, combine)</span></code></pre></div>


</section>

 ]]></description>
  <category>bioinformatics</category>
  <category>scRNA-seq</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-16-single-cell-records/</guid>
  <pubDate>Mon, 15 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Discordant and clipped reads</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-15-discordant-and-clipped-reads/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>From Kimi, 可靠性自己判断。</p>
</blockquote>
<p>Discordant reads 和 clipped reads 是在基因组测序数据分析中用于检测基因组结构变异（Structural Variation, SV）的两种重要类型的读长（reads）。</p>
<p><strong>Discordant reads</strong> 指的是那些配对末端读长（paired-end reads）中，一个读长能够正常比对到参考基因组的预期位置，而另一个读长比对到了参考基因组中的非预期位置。这种不一致性通常表明在基因组中存在某种结构变异，如易位（translocation）或倒位（inversion）。例如，当两条同源或非同源染色体之间发生易位时，配对的读长可能会显示一个读长位于易位片段的原始位置，而另一个读长则位于易位后的新位置。</p>
<p><strong>Clipped reads</strong> 又称为soft-clipped reads，是指单个读长中有一部分序列能够比对到参考基因组的一个位置，而剩余的序列则比对到了另一个不同的位置。这种读长表明在比对的两个位置之间可能发生了某种结构变异，如插入（insertion）。Clipped reads中的缺口（gap）或不匹配部分可以揭示插入序列的边界，从而帮助确定结构变异的精确位置。</p>
<p>这两种读长类型在结构变异检测中非常关键，因为它们提供了直接的证据来揭示基因组中可能发生的重排、插入或缺失等变异。通过分析这些读长，研究人员能够更准确地识别和表征基因组结构的变化，这对于理解基因功能、疾病机理以及进化过程都有重要意义。</p>
<p>Discordant reads 在双端测序比对中是通过比较配对末端读数（paired-end reads）的比对结果来判断的。在使用 BWA-MEM 算法进行比对时，discordant reads 的判断过程可以概括为以下几个步骤：</p>
<ol type="1">
<li><p><strong>比对读数到参考基因组</strong>：BWA-MEM 首先会对每个读数（reads）进行比对，尝试找到最佳的比对位置。这一过程包括使用种子和扩展（seeding and extending）策略来处理较长的读数，以及使用基于Smith-Waterman算法的局部比对来处理可能的重复区域或结构变异区域。</p></li>
<li><p><strong>评估插入大小</strong>：对于双端测序数据，BWA-MEM 会估计插入大小（insert size）的均值和方差，并基于此信息评估每个读数对的两个末端是否在预期的插入大小范围内。</p></li>
<li><p><strong>识别不一致的配对</strong>：在比对过程中，如果一个读数的两个末端比对到了参考基因组中相距甚远的位置，这可能表明存在结构变异，如插入、缺失或易位。BWA-MEM 会识别这些不一致的配对，即discordant reads。</p></li>
<li><p><strong>使用动态规划优化比对</strong>：BWA-MEM 使用动态规划算法来优化比对结果，自动选择局部比对或端到端比对。如果一个读数的末端比对到了一个真实的变异位点，并且比对质量足够好，BWA-MEM 可能会接受这样的局部比对，而不是强制进行端到端比对，这样可以减少参考偏差并避免引入过多的不匹配和间隙。</p></li>
<li><p><strong>输出结果</strong>：最终，BWA-MEM 会输出比对结果，包括所有成功的比对以及识别出的 discordant reads。这些 discordant reads 可以用于后续的结构变异分析。</p></li>
</ol>
<p>通过上述步骤，BWA-MEM 能够有效地处理双端测序数据，并识别出可能指示结构变异的 discordant reads。这种方法对于发现和研究基因组中的结构变异非常重要，有助于理解基因组多样性和疾病相关变异。</p>



 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-15-discordant-and-clipped-reads/</guid>
  <pubDate>Sun, 14 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>第一/二类型错误</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-11-type-1-2-errors/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>From Kimi</p>
</blockquote>
<p>在统计假设检验中，第一类错误和第二类错误是两种常见的错误类型，它们描述了在决策过程中可能出现的不同类型的错误。</p>
<section id="第一类错误type-i-error" class="level3">
<h3 class="anchored" data-anchor-id="第一类错误type-i-error">第一类错误（Type I Error）</h3>
<p>第一类错误，也称为α错误，发生在我们错误地拒绝了一个真实的零假设（H0）。换句话说，当实际上零假设为真时，我们却得出结论认为它为假。这种情况下，我们认为观察到的效应是显著的，但实际上这种效应并不存在。</p>
<p>例如，在药物测试中，如果一个新药物实际上没有疗效，但研究结果却错误地表明它有效，这就是犯了第一类错误。这种错误的风险通常与研究的显著性水平（α水平）相关，α水平是研究者事先设定的，用于决定何时拒绝零假设的概率阈值。</p>
</section>
<section id="第二类错误type-ii-error" class="level3">
<h3 class="anchored" data-anchor-id="第二类错误type-ii-error">第二类错误（Type II Error）</h3>
<p>第二类错误，也称为β错误，发生在我们错误地接受了零假设，即当实际上零假设为假时，我们却未能拒绝它。这意味着我们错过了发现真实效应的机会，得出结论认为没有效应，而实际上效应是存在的。</p>
<p>继续上面药物测试的例子，如果一个新药物实际上是有效的，但研究结果未能显示出其疗效，从而得出结论认为它无效，这就是犯了第二类错误。这种错误的风险与研究的统计效力（power）有关，统计效力是指正确检测到真实效应的概率。</p>
</section>
<section id="错误类型的关系" class="level3">
<h3 class="anchored" data-anchor-id="错误类型的关系">错误类型的关系</h3>
<p>第一类错误和第二类错误之间存在权衡关系。降低第一类错误的风险（降低α水平）可能会增加第二类错误的风险（降低统计效力），反之亦然。研究者需要在设计研究时平衡这两种错误的风险，以确保研究结果的准确性和可靠性。</p>
</section>
<section id="其他错误类型" class="level3">
<h3 class="anchored" data-anchor-id="其他错误类型">其他错误类型</h3>
<p>除了第一类和第二类错误外，还有其他类型的错误，如：</p>
<ul>
<li>第三类错误：当研究者未能正确地识别和解释数据中的模式时发生的错误。</li>
<li>第四类错误：在元分析或综合分析中，当研究者错误地将不同研究的结果合并时发生的错误。</li>
</ul>
<p>在进行统计分析和解释结果时，了解这些错误类型对于避免错误的结论和提高研究质量至关重要。</p>


</section>

 ]]></description>
  <category>stats</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-11-type-1-2-errors/</guid>
  <pubDate>Wed, 10 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>R 设置编译选项</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-03-20-r-makevars-compiler-setting/</link>
  <description><![CDATA[ 





<p>在 R 中，特别是 CentOS Linux 进行包安装和编译时，需要使用比较新的 C/C++ 编译器，在 <code>~/.R/Makevars</code> 中作如下设置。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CC</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/gcc <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++14</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX17</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++17</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span></code></pre></div>
<blockquote class="blockquote">
<p>一些情况下会加上 <code>-fopenmp</code> 选项。</p>
</blockquote>
<p>本文对之前所做记录 <a href="https://mp.weixin.qq.com/s/BoMEGabgWvjfETnIPPxJVA">CentOS/Redhat R包使用新的gcc编译【更新】</a> 的补全。</p>



 ]]></description>
  <category>Linux</category>
  <category>R</category>
  <guid>https://shixiangwang.github.io/posts/2024-03-20-r-makevars-compiler-setting/</guid>
  <pubDate>Tue, 19 Mar 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>snakemake 教程精要</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-28-snakemake-basics/</link>
  <description><![CDATA[ 





<p>这里把 <a href="https://snakemake.readthedocs.io/en/stable/tutorial/tutorial.html">Snakemake 教程</a> 的精要记录了下来。</p>
<section id="基础" class="level2">
<h2 class="anchored" data-anchor-id="基础">基础</h2>
<p><code>Snakefile</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remember that Snakemake works backwards from requested output, and not from available input.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check: snakemake -np mapped_reads/A.bam</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run: snakemake --cores 1 mapped_reads/A.bam</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np mapped_reads/{A,B}.bam</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np sorted_reads/B.bam</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --dag sorted_reads/{A,B}.bam.bai | dot -Tsvg &gt; dag.svg</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --dag calls/all.vcf | dot -Tsvg &gt; dag.svg</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">SAMPLES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>]</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb1-14">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb1-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb1-17"></span>
<span id="cb1-18">rule bwa_map:</span>
<span id="cb1-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb1-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/samples/{sample}.fastq"</span></span>
<span id="cb1-22">    output:</span>
<span id="cb1-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb1-24">    shell:</span>
<span id="cb1-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb1-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bwa mem {input} | samtools view -Sb - &gt; {output}"</span></span>
<span id="cb1-27"></span>
<span id="cb1-28">rule samtools_sort:</span>
<span id="cb1-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb1-31">    output:</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb1-33">    shell:</span>
<span id="cb1-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb1-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb1-36"></span>
<span id="cb1-37">rule samtools_index:</span>
<span id="cb1-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb1-40">    output:</span>
<span id="cb1-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb1-42">    shell:</span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb1-44"></span>
<span id="cb1-45">rule bcftools_call:</span>
<span id="cb1-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-47">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb1-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb1-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb1-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb1-51">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SAMPLES),</span>
<span id="cb1-52">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SAMPLES)</span>
<span id="cb1-53">    output:</span>
<span id="cb1-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb1-55">    shell:</span>
<span id="cb1-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv - &gt; {output}"</span></span>
<span id="cb1-58"></span>
<span id="cb1-59">rule plot_quals:</span>
<span id="cb1-60">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb1-62">    output:</span>
<span id="cb1-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb1-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb1-65">    script:</span>
<span id="cb1-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span></code></pre></div>
<p><code>scripts/plot-quals.py</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Similar in R: snakemake@input[[1]], snakemake@input[["myfile"]]</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all properties of the rule like input, output, wildcards, etc.</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># are available as attributes of a global snakemake object.</span></span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb2-6">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Agg"</span>)</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pysam <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VariantFile</span>
<span id="cb2-9"></span>
<span id="cb2-10">quals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [record.qual <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> record <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> VariantFile(snakemake.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])]</span>
<span id="cb2-11">plt.hist(quals)</span>
<span id="cb2-12"></span>
<span id="cb2-13">plt.savefig(snakemake.output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
</section>
<section id="advanced" class="level2">
<h2 class="anchored" data-anchor-id="advanced">Advanced</h2>
<p><code>Snakefile</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remember that Snakemake works backwards from requested output, and not from available input.</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --cores 10 # The maximum cores used</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                      # If --cores is given without a number, all available cores are used.</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With the flag --forceall you can enforce a complete re-execution of the workflow</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -n --forcerun $(snakemake --list-input-changes)</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -n --forcerun bcftools_call</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np --summary</span></span>
<span id="cb3-12"></span>
<span id="cb3-13">configfile: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config.yaml"</span></span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb3-16">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb3-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#step-3-input-functions</span></span>
<span id="cb3-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_bwa_map_input_fastqs(wildcards):</span>
<span id="cb3-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>][wildcards.sample]</span>
<span id="cb3-23"></span>
<span id="cb3-24">rule bwa_map:</span>
<span id="cb3-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb3-27">        get_bwa_map_input_fastqs</span>
<span id="cb3-28">    output:</span>
<span id="cb3-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mark output files as temporary. </span></span>
<span id="cb3-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake will delete the marked files for you, </span></span>
<span id="cb3-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># once all the consuming jobs (that need it as input) have been executed</span></span>
<span id="cb3-32">        temp(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mapped_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb3-33">    params:</span>
<span id="cb3-34">        rg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"@RG\tID:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">\tSM:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to store all log files in a subdirectory logs/, </span></span>
<span id="cb3-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prefixed by the rule or tool name.</span></span>
<span id="cb3-37">    log:</span>
<span id="cb3-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bwa_mem/{sample}.log"</span></span>
<span id="cb3-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake provides a resources directive that can be used to specify arbitrary resources,</span></span>
<span id="cb3-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., memory usage or auxiliary computing devices like GPUs. </span></span>
<span id="cb3-41">    threads: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb3-42">    shell:</span>
<span id="cb3-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb3-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># both bwa and samtools and pipe it into the file referred to by {log}</span></span>
<span id="cb3-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span>
<span id="cb3-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb3-47"></span>
<span id="cb3-48">rule samtools_sort:</span>
<span id="cb3-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb3-51">    output:</span>
<span id="cb3-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># protect the final BAM file from accidental deletion or modification</span></span>
<span id="cb3-53">        protected(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb3-54">    shell:</span>
<span id="cb3-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb3-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb3-57"></span>
<span id="cb3-58">rule samtools_index:</span>
<span id="cb3-59">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb3-61">    output:</span>
<span id="cb3-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb3-63">    shell:</span>
<span id="cb3-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb3-65"></span>
<span id="cb3-66">rule bcftools_call:</span>
<span id="cb3-67">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-68">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb3-69">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb3-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb3-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb3-72">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>]),</span>
<span id="cb3-73">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>])</span>
<span id="cb3-74">    output:</span>
<span id="cb3-75">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb3-76">    log:</span>
<span id="cb3-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bcftools_call/all.log"</span></span>
<span id="cb3-78">    params:</span>
<span id="cb3-79">        rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prior_mutation_rate"</span>]</span>
<span id="cb3-80">    shell:</span>
<span id="cb3-81">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb3-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv -P {params.rate} - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb3-83"></span>
<span id="cb3-84">rule plot_quals:</span>
<span id="cb3-85">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb3-87">    output:</span>
<span id="cb3-88">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb3-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb3-90">    script:</span>
<span id="cb3-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span>
<span id="cb3-92"></span></code></pre></div>
<p><code>config.yaml</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">samples</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">A</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/A.fastq</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">B</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/B.fastq</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">C</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/C.fastq</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior_mutation_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span></span></code></pre></div>
</section>
<section id="custom" class="level2">
<h2 class="anchored" data-anchor-id="custom">Custom</h2>
<p>上面手动设定了要处理的样本列表，能不能通过目录来处理呢？即不管有多少文件，目录下所有符合要求的样本列表都进行处理。</p>
<p><code>config.yaml</code>:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">samples</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior_mutation_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span></span></code></pre></div>
<p>在探索后我在之前的基础上给出了以下方案：</p>
<p>利用 <code>glob</code> 进行文件列表的解析，然后处理相关的 pattern 把样本列表提取出来，并以此 更新涉及到样本列表指定的部分：</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples),</span>
<span id="cb6-2">bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples)</span></code></pre></div>
<p>全部内容如下：</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb7-2"></span>
<span id="cb7-3">configfile: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config.yaml"</span></span>
<span id="cb7-4"></span>
<span id="cb7-5">input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>]</span>
<span id="cb7-6">input_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/*.fastq"</span>)</span>
<span id="cb7-7"></span>
<span id="cb7-8">samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb7-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input_files:</span>
<span id="cb7-10">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb7-11">    samples.add(name)</span>
<span id="cb7-12"></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(samples)</span></span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb7-16">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb7-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb7-19"></span>
<span id="cb7-20">rule bwa_map:</span>
<span id="cb7-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb7-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/samples/{sample}.fastq"</span></span>
<span id="cb7-24">    output:</span>
<span id="cb7-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mark output files as temporary. </span></span>
<span id="cb7-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake will delete the marked files for you, </span></span>
<span id="cb7-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># once all the consuming jobs (that need it as input) have been executed</span></span>
<span id="cb7-28">        temp(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mapped_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb7-29">    params:</span>
<span id="cb7-30">        rg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"@RG\tID:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">\tSM:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to store all log files in a subdirectory logs/, </span></span>
<span id="cb7-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prefixed by the rule or tool name.</span></span>
<span id="cb7-33">    log:</span>
<span id="cb7-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bwa_mem/{sample}.log"</span></span>
<span id="cb7-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake provides a resources directive that can be used to specify arbitrary resources,</span></span>
<span id="cb7-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., memory usage or auxiliary computing devices like GPUs. </span></span>
<span id="cb7-37">    threads: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb7-38">    shell:</span>
<span id="cb7-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb7-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># both bwa and samtools and pipe it into the file referred to by {log}</span></span>
<span id="cb7-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span>
<span id="cb7-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb7-43"></span>
<span id="cb7-44">rule samtools_sort:</span>
<span id="cb7-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb7-47">    output:</span>
<span id="cb7-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># protect the final BAM file from accidental deletion or modification</span></span>
<span id="cb7-49">        protected(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb7-50">    shell:</span>
<span id="cb7-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb7-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb7-53"></span>
<span id="cb7-54">rule samtools_index:</span>
<span id="cb7-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb7-57">    output:</span>
<span id="cb7-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb7-59">    shell:</span>
<span id="cb7-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb7-61"></span>
<span id="cb7-62">rule bcftools_call:</span>
<span id="cb7-63">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-64">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb7-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb7-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb7-67">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb7-68">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples),</span>
<span id="cb7-69">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples)</span>
<span id="cb7-70">    output:</span>
<span id="cb7-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb7-72">    log:</span>
<span id="cb7-73">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bcftools_call/all.log"</span></span>
<span id="cb7-74">    params:</span>
<span id="cb7-75">        rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prior_mutation_rate"</span>]</span>
<span id="cb7-76">    shell:</span>
<span id="cb7-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb7-78">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv -P {params.rate} - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb7-79"></span>
<span id="cb7-80">rule plot_quals:</span>
<span id="cb7-81">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb7-83">    output:</span>
<span id="cb7-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb7-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb7-86">    script:</span>
<span id="cb7-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span>
<span id="cb7-88"></span></code></pre></div>
<p>QA 中的 <a href="https://snakemake.readthedocs.io/en/stable/project_info/faq.html#how-do-i-run-my-rule-on-all-files-of-a-certain-directory">How do I run my rule on all files of a certain directory?</a> 提供的下面的办法似乎也能解决该问题：</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">IDS, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob_wildcards(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thedir/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{id}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.fastq"</span>)</span></code></pre></div>


</section>

 ]]></description>
  <category>snakemake</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-28-snakemake-basics/</guid>
  <pubDate>Tue, 27 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Can I run VS Code Server on older Linux distributions</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-25-can-i-run-vs-code-server-on-older-linux-distributions/</link>
  <description><![CDATA[ 





<p>VSCode 的不断更新导致最新版本 Remotes 已经在一些 Linux server 上不再支持，这里记录下官方的解决办法，就是将版本降级到 1.85</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/remote/faq#_can-i-run-vs-code-server-on-older-linux-distributions" class="uri">https://code.visualstudio.com/docs/remote/faq#_can-i-run-vs-code-server-on-older-linux-distributions</a></li>
<li><a href="https://code.visualstudio.com/updates/v1_85" class="uri">https://code.visualstudio.com/updates/v1_85</a></li>
</ul>
<p>Downloads: Windows: <a href="https://update.code.visualstudio.com/1.85.2/win32-x64-user/stable">x64</a> <a href="https://update.code.visualstudio.com/1.85.2/win32-arm64-user/stable">Arm64</a> | Mac: <a href="https://update.code.visualstudio.com/1.85.2/darwin-universal/stable">Universal</a> <a href="https://update.code.visualstudio.com/1.85.2/darwin/stable">Intel</a> <a href="https://update.code.visualstudio.com/1.85.2/darwin-arm64/stable">silicon</a> | Linux: <a href="https://update.code.visualstudio.com/1.85.2/linux-deb-x64/stable">deb</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-rpm-x64/stable">rpm</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-x64/stable">tarball</a> <a href="https://code.visualstudio.com/docs/supporting/faq#_previous-release-versions">Arm</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-snap-x64/stable">snap</a></p>
<blockquote class="blockquote">
<p>Depending on your platform, make sure to disable updates to stay on that version. A good recommendation is to have release 1.85 as a separate installation, set up with Portable Mode（就是独立的软件目录）.</p>
<p>Portable mode is supported on the ZIP download for Windows, and the TAR.GZ download for Linux, as well as the regular Application download for macOS. See the Download page to find the correct .zip / .tar.gz file for your platform.</p>
</blockquote>



 ]]></description>
  <category>Linux</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-25-can-i-run-vs-code-server-on-older-linux-distributions/</guid>
  <pubDate>Sat, 24 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>use singularity</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-23-use-singularity/</link>
  <description><![CDATA[ 





<ul>
<li><a href="http://www.achelous.org/Container-Tech/Singularity-in-nutshell.html">Singularity 日常使用</a></li>
<li><a href="https://docs.sylabs.io/guides/latest/user-guide/definition_files.html">文档</a></li>
<li>https://singularityhub.github.io/</li>
<li>https://cloud.sylabs.io/library</li>
</ul>



 ]]></description>
  <category>note</category>
  <category>container</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-23-use-singularity/</guid>
  <pubDate>Thu, 22 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>telescope installation</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-20-telescope-installation/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>注意这个帖子的有效性可能在未来某一天丧失。</p>
</blockquote>
<p>简单记录下 <code>telescope</code> 的安装，因为 <a href="https://github.com/mlbendall/telescope" class="uri">https://github.com/mlbendall/telescope</a> 提过的官方说明直接装后测试是有问题的。</p>
<p>一步步安装和debug过程：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> telescope <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge telescope python=3.8</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate telescope</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install numpy=1.19</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pysam&lt;0.17'</span></span></code></pre></div>
<blockquote class="blockquote">
<p>现在回头看可以缩减为一句命令：<code>mamba create -n telescope -c bioconda -c conda-forge telescope python=3.8 numpy=1.19 pysam&lt;0.17</code>。</p>
</blockquote>
<p>测试：</p>
<pre><code>(telescope) zhou2 22:12:47 ~/test 
$eval $(telescope test)
2024-02-18 22:13:03 INFO     
Version:                          1.0.3
Input Options
    samfile:                      /home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam
    gtffile:                      /home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/annotation.gtf
    attribute:                    locus
    no_feature_key:               __no_feature
    ncpu:                         1
    tempdir:                      None
Reporting Options
    quiet:                        False
    debug:                        False
    logfile:                      &lt;stderr&gt;
    outdir:                       .
    exp_tag:                      telescope
    updated_sam:                  False
Run Modes
    reassign_mode:                exclude
    conf_prob:                    0.9
    overlap_mode:                 threshold
    overlap_threshold:            0.2
    annotation_class:             intervaltree
Model Parameters
    pi_prior:                     0
    theta_prior:                  200000
    em_epsilon:                   1e-07
    max_iter:                     100
    use_likelihood:               False
    skip_em:                      False
 (from run in telescope_assign.py:197)
[E::idx_find_and_load] Could not retrieve index file for '/home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam'
2024-02-18 22:13:03 INFO     Loading annotation...                                        (from run in telescope_assign.py:205)
2024-02-18 22:13:03 INFO     Loaded annotation in 0 minutes and 0 secs                    (from run in telescope_assign.py:208)
2024-02-18 22:13:03 INFO     Loaded 99 features.                                          (from run in telescope_assign.py:209)
2024-02-18 22:13:03 INFO     Loading alignments...                                        (from run in telescope_assign.py:214)
[E::idx_find_and_load] Could not retrieve index file for '/home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam'
2024-02-18 22:13:05 INFO     Loaded alignment in 0 minutes and 1 secs                     (from run in telescope_assign.py:217)
2024-02-18 22:13:05 INFO     Alignment Summary:                                           (from print_summary in model.py:519)
2024-02-18 22:13:05 INFO         1000 total fragments.                                    (from print_summary in model.py:520)
2024-02-18 22:13:05 INFO             1000 mapped as pairs.                                (from print_summary in model.py:521)
2024-02-18 22:13:05 INFO             0 mapped as mixed.                                   (from print_summary in model.py:522)
2024-02-18 22:13:05 INFO             0 mapped single.                                     (from print_summary in model.py:523)
2024-02-18 22:13:05 INFO             0 failed to map.                                     (from print_summary in model.py:524)
2024-02-18 22:13:05 INFO     --                                                           (from print_summary in model.py:525)
2024-02-18 22:13:05 INFO         1000 fragments mapped to reference; of these             (from print_summary in model.py:526)
2024-02-18 22:13:05 INFO             0 had one unique alignment.                          (from print_summary in model.py:528)
2024-02-18 22:13:05 INFO             1000 had multiple alignments.                        (from print_summary in model.py:529)
2024-02-18 22:13:05 INFO     --                                                           (from print_summary in model.py:530)
2024-02-18 22:13:05 INFO         1000 fragments overlapped annotation; of these           (from print_summary in model.py:531)
2024-02-18 22:13:05 INFO             0 map to one locus.                                  (from print_summary in model.py:533)
2024-02-18 22:13:05 INFO             1000 map to multiple loci.                           (from print_summary in model.py:535)
2024-02-18 22:13:05 INFO     
                                                            (from print_summary in model.py:537)
2024-02-18 22:13:05 INFO     Running Expectation-Maximization...                          (from run in telescope_assign.py:250)
2024-02-18 22:13:05 INFO     Iteration 1, diff=1.3795                                     (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 2, diff=0.7388                                     (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 3, diff=0.24275                                    (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 4, diff=0.065133                                   (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 5, diff=0.017653                                   (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 6, diff=0.0050039                                  (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 7, diff=0.0014807                                  (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 8, diff=0.00045365                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 9, diff=0.00014275                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 10, diff=4.5844e-05                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 11, diff=1.4953e-05                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 12, diff=4.9364e-06                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 13, diff=1.645e-06                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 14, diff=5.5228e-07                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 15, diff=1.8652e-07                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 16, diff=6.3301e-08                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     EM converged after 16 iterations.                            (from em in model.py:722)
2024-02-18 22:13:05 INFO     Final log-likelihood: 95252.596293.                          (from em in model.py:723)
2024-02-18 22:13:05 INFO     EM completed in 0 minutes and 0 secs                         (from run in telescope_assign.py:253)
2024-02-18 22:13:05 INFO     Generating Report...                                         (from run in telescope_assign.py:256)
2024-02-18 22:13:05 INFO     telescope assign complete (0 minutes and 1 secs)             (from run in telescope_assign.py:263)
</code></pre>



 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-20-telescope-installation/</guid>
  <pubDate>Mon, 19 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>回广州路上的感想</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-20-backtogz/</link>
  <description><![CDATA[ 





<p>年后开车回广州太堵了，打破了国庆离开广州回老家开车的时长。 考虑到不会再在广州待这样的大长假了，应该以后不会再有类似的经历？</p>
<p>这里记录我感受堵车产生的两个天真想法：</p>
<ol type="1">
<li>高速的来回车道是分割的，一边堵一边完全不堵，是否可以在特殊节假日（特殊日期），在不同收费站之间封控对向车流，把对向的车道也给堵车的这条车道使用？</li>
<li>未来自动驾驶普及后，是否可能在特殊节假日高速道路汽车全部由计算中心总控，把私家车组网拼接为同一个公路网络？堵车的本质原因是车多情况下不同人的不协调导致，这种统一的调度应当可以完全解决这个问题？</li>
</ol>



 ]]></description>
  <category>personal</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-20-backtogz/</guid>
  <pubDate>Mon, 19 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>shiny plot dpi</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-12-shiny-plot-dpi/</link>
  <description><![CDATA[ 





<p>96 is recommended.</p>
<ul>
<li>https://mastering-shiny.org/basic-ui.html</li>
<li>https://github.com/rstudio/shiny/issues/1832</li>
</ul>



 ]]></description>
  <category>personal</category>
  <category>R</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-12-shiny-plot-dpi/</guid>
  <pubDate>Sun, 11 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>免疫</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-01-22-immune/</link>
  <description><![CDATA[ 





<section id="细胞因子" class="level2">
<h2 class="anchored" data-anchor-id="细胞因子">细胞因子</h2>
<p>细胞因子的分类：</p>
<ul>
<li>白细胞介素</li>
<li>干扰素</li>
<li>肿瘤坏死因子</li>
<li>集落刺激因子</li>
<li>生长因子</li>
<li>趋化性细胞因子</li>
</ul>
<p>生物学活性：</p>
<ul>
<li>介导固有免疫：抗细菌和病毒作用</li>
<li>介导和调节特异性免疫应答</li>
<li>刺激造血</li>
<li>促进血管生成</li>
<li>诱导凋亡</li>
</ul>


</section>

 ]]></description>
  <category>note</category>
  <category>免疫</category>
  <guid>https://shixiangwang.github.io/posts/2024-01-22-immune/</guid>
  <pubDate>Sun, 21 Jan 2024 16:00:00 GMT</pubDate>
</item>
</channel>
</rss>
