<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Reasoning</title>
<link>https://shixiangwang.github.io/</link>
<atom:link href="https://shixiangwang.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Reasoning is a blog dedicated to exploring the intersection of data science, bioinformatics, and personal insights.</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Thu, 21 Nov 2024 16:00:00 GMT</lastBuildDate>
<item>
  <title>冷门的追求 - 书摘</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-22-unfashionable-pursuits/</link>
  <description><![CDATA[ 





<p>今天无意中通过知乎看到一篇非常引入入胜的演讲文章，从题目到内容都发人深省，难得的是，这是1981年的观点，我却觉得丝毫不过时。未免记忆和资料丢失，我这里人工搬运到自己的网站，以后有机会再多看看，警惕自身、塑造远见。</p>
<p>以下是引文：</p>
<hr>
<p>何夕的科幻小说《伤心者》在科幻迷心目中享有盛誉，但里面描写的毕竟是虚构的人物和故事。而 1981 年 8 月 24 日在亚历山大-洪堡基金会与新泽西州普林斯顿高等研究院合作举办的洪堡获奖者两国座谈会上，弗里曼·戴森（Freeman J. Dyson）发表了题为 Unfashionable Pursuits 的演讲。感谢现代科技，我们现在仍然可以<a href="https://umedia.lib.umn.edu/item/p16022coll171:3633">听到他的演讲</a>。在我看来，这篇演讲稿举的例子胜过《伤心者》里的主人公，因为那都是真实发生过的。而演讲的主旨在于号召独立的科研机构向冷门的科学有所倾斜，如果确实照此实践下去，会大大降低《伤心者》里悲剧发生的可能性。</p>
<p>我想办法找到了演讲稿，在 ChatGPT 的帮助下把它翻译成了中文，并对照原文做了修改使得翻译更加准确。</p>
<section id="引言" class="level2">
<h2 class="anchored" data-anchor-id="引言">引言</h2>
<p>我很高兴今天能作为高等研究院的代表，向洪堡基金会的校友们致辞，因为高等研究院和洪堡基金会都在致力于国际层面的科学支持，并面临着相似的困境和挑战。我们都在延续亚历山大·冯·洪堡在 150 年前建立的传统。为了了解洪堡的贡献，我查阅了 1910 年第十一版《不列颠百科全书》，找到了科学史学家艾格尼丝·克拉克撰写的精彩文章。如果查阅的是百科全书的后续版本，克拉克的描述就只剩些零散的片段了。在文章中，她描述了洪堡在创建第一个国际气象和磁场观测站网络方面的工作，并以这样一句振奋人心的话作为结尾：“因此，现代文明最崇高的成果之一——国家间的科学联合，首次通过他的努力得以成功组织起来。”这正是我们所努力的方向：高等研究院和洪堡基金会，正在追随洪堡的优秀榜样，试图在我们这个时代加强和拓展国家间的科学合作。</p>
</section>
<section id="科学中的潮流" class="level2">
<h2 class="anchored" data-anchor-id="科学中的潮流">科学中的潮流</h2>
<p>我决定讨论科学中的“潮流”问题，因为这对整个科学界，特别是对高等研究院和洪堡基金会来说，是个日益重要的严肃问题。我将首先谈谈我们在高等研究院对这一问题的看法，然后谈谈我们可以从更长时间尺度的科学历史中学到的教训，最后我将简要讨论我们如何在未来更明智地应对这一问题。</p>
<p>对一位才能一般的年轻科学家来说，跟随大潮流是一条明智之路，这一事实自古以来如此，现在更是如此。任何没有非凡天赋或运气的年轻科学家，首先关心的是找到并保住一份工作。要找到并保住工作，你必须在那些控制就业市场的“权威”感兴趣的科学领域中做出合格的研究。而这些“权威”们认为有趣的科学问题，几乎就是我们所说的“热门”问题。如今，工作的分配通常由一组权威组成的委员会控制，委员会比个人更难脱离当下的流行趋势。因此，那些关心自身生存的年轻科学家往往会紧跟常规路径。那些高等学府提供了保障和提升机会给那些熟练追随潮流的人，而对于那些不追随潮流的人，机会则微乎其微。</p>
<p>我们的高等研究院也不例外。当我 34 年前第一次以访问成员身份来到这里时，主导的“权威”是罗伯特·奥本海默。他决定物理学的哪些领域值得追求。他的品味总是和最新的潮流一致。那时我年轻而有抱负，我向他提交了一篇快速完成的，涉及热门问题的工作，并因此获得了一份永久职位。这就是当时高等研究院的情况，现在依然如此。熟悉高等研究院历史的人可能会反驳说，毕竟高等研究院也给了库尔特·哥德尔一个永久职位。这确实是事实。哥德尔是我们这个世纪少数无可争议的天才之一，是唯一能与爱因斯坦平起平坐的同事。哥德尔从事的数学领域极其冷门，随着时间的推移，他的研究方向变得更加冷门。高等研究院有理由为他的加入而感到自豪。不过我们也必须承认一个事实：从哥德尔来到这里生活工作直到他成为教授，整整花了 14 年时间。哥德尔是如此独立且顽固，甚至可以说我们因为授予他教授头衔也值得一些肯定，尽管经过了 14 年的犹豫。迟做总比不做好。</p>
<p>今天来到高等研究院的年轻物理学家们，比 30 年前的我面临的压力要大得多。首先，他们大多数人带着政府合同资助而来，这些合同法律上要求他们在一定时间内从事某一特定科学领域的工作。当然，我们不会对合同的字面条款斤斤计较。国家科学基金会和能源部的合同管理人员是通情达理的人，他们允许我们在解释义务时有一定的灵活性。如果有些带合同资助的成员选择在与合同无关的领域工作，我们也不必把他们赶出门去。不符合合同资助内容的人员通常可以依靠研究院的资金支持。但是，合同仍然是一项严肃的限制。合同在总体上规定了高等研究院物理学院客座成员的工作领域，定义了物理学主流研究的方向。这也不可避免地影响了我们邀请的成员，他们的研究工作往往与某一合同内容相契合。</p>
<p>在工作了30年后，我现在已成为“权威”之一。我试图以一种模糊而微弱的方式，鼓励年轻物理学家在流行领域之外探索。我试图维持一些没有合同支持的研究领域。我希望保持这个研究院对独立和不合常规的精神开放，并为下一位像库尔特·哥德尔那样的人敞开大门。不过我必须承认，我对抗潮流的努力，效果大概就像我那著名的前辈克努特大抵试图阻挡大西洋潮水一样。如今，年轻人受到推动他们追随潮流的力量比合同的字面条款和“权威”的权力更为强大。驱使年轻人追逐热门领域的力量是同侪压力以及追逐的乐趣本身。他们知道“行动”在哪里，并渴望成为其中一部分。他们知道自己只有短暂的时间来证明自己。他们明白，想在有限的时间里取得成就，最佳的途径是随大流，去摘取那些已经成熟的科学果实。</p>
<p>年轻科学家们追求快速成功和回报本身并非坏事。将努力集中在流行的专业化领域并不一定有害。毕竟，这些流行问题之所以成为潮流，不是因为某个时尚设计师的随意决定，而是因为大多数科学家认为这些问题重要。通常，大多数人的判断是有依据的。流行的领域通常是产生重大发现的领域。年轻科学家进入这些领域，希望取得轰动性发现，这并没有错。事实上，研究院的日常生活正是因为流行领域的群体性研究而更加充实。当你在流行领域探索时，每一项小的成功和短暂的胜利都可以在午餐或研讨会上与朋友分享。如果没有这种对流行问题的共同兴趣，没有这种消息和传闻的分享，我们的生活会变得单调许多。</p>
<p>那么，为什么我不满？为什么我对年轻人做着我当年也做过的事情表示不满？我不满是因为我认为我们不应将所有的精力都放在流行的研究上。流行的研究有其用处，重要且令人兴奋。我们可以为年轻人专注于流行研究并取得成果而感到自豪。我们可以预见，他们中的大多数人总会出于我理解和尊重的原因，选择流行的研究方向。但我仅仅想说，我们这里也应当为那些不做流行研究的少数人提供空间。我们应当寻找并鼓励那些不符合主流模式的少数个体。我们应当在接纳成员时，稍微偏向那些不拘一格、不循常规的精神。如果我们不为从事非流行科学的人提供家园和工作空间，那么谁会呢？</p>
</section>
<section id="古代历史" class="level2">
<h2 class="anchored" data-anchor-id="古代历史">古代历史</h2>
<p>非流行科学的类型有很多种，支持这些科学的一个主要困难就是选择问题。非流行科学千姿百态，没有统一的结构。我来举一个例子。上周，我在普林斯顿大学的 Forrestal 校区散步时，看到两名研究生静静地坐在一片草地中央。起初我以为他们只是享受午后的阳光和宁静，但当我走近时，发现他们正全神贯注地进行一些需要稳健双手和不被打扰的精细操作。走近后，我看见他们正在忙着把小铅块粘在蜜蜂的背上。我默默地注视着他们，直到他们完成工作，然后与他们一起走回他们实验用的蜂巢，那是一个配备有相机和录像机的地方。他们正在改进并扩展卡尔·冯·弗里希关于蜜蜂舞蹈沟通系统的经典实验。他们发现，当蜜蜂找到离蜂巢较远的蜜源时，它们的舞蹈会更为激烈且精确。不幸的是，大多数蜜蜂会在靠近蜂巢处找到蜜源，返回时只会进行简短而随意的舞蹈。这些学生想要精确观察蜜蜂的舞蹈，于是他们找到了一种方法来诱使蜜蜂更为激烈地跳舞。背负 45 毫克铅块的蜜蜂会以为自己飞了很远的距离，尽管实际上只飞了很短的距离。蜜蜂通过飞行的努力程度来衡量飞行距离，因此负重的蜜蜂在每次找到蜜源后都会精确地跳舞。</p>
<p>这是非流行科学的一个典型例子，就在我们普林斯顿的门口进行着。我并不是建议高等研究院应该支持一个昆虫学学院。但这个蜜蜂实验的例子展示了非流行科学的所有特征：小规模、目标的多样性、个性化的风格以及某种表面上的不严肃性。</p>
<p>为了明确非流行科学的真正意义和持久价值，我回到我所擅长的领域，即数学物理。数学物理是试图通过纯数学的严谨风格和方法来深刻理解物理现象的学科。它位于物理学和数学的交界处。数学物理学家的目标不是定量地计算现象，而是定性地理解它们。他们用定理和证明进行研究，而不是用数字和计算机。他们的目标是通过数学上的精确性来阐明物理理论建立的概念的含义。</p>
<p>数学物理具有三个特点，使其在本次讨论中具有特别的相关性。首先，它在更大的图景中很重要，为物理学的更实用的领域提供基本的概念和词汇。其次，它发展缓慢，通常需要 50 到 100 年才能将一个新概念从起源发展到有效应用。第三，它几乎总是非流行的，因为它的发展节奏比科学潮流慢了大约 10 倍。由于它的非流行性，欧洲对它的重视和支持一直高于美国。</p>
<p>以一位对现代物理学发展至关重要的伟大数学物理学家为例，我想提到索菲斯·李（Sophus Lie）。李去世已有80年。他的主要工作是在 1870 年代到 1880 年代完成的，但他的思想直到最近 20 年才主导了粒子物理学家的思维。李是第一个理解并明确指出物理学原理具有群论起源的人。他几乎凭一己之力构建了一个庞大而美丽的连续群理论体系，他预见到它有朝一日会成为物理学的基础。现在，100 年后，每一位以对称性破缺和不破缺来分类粒子的物理学家，无论是否意识到，都在使用李的语言。然而，在他有生之年，李的思想却并不流行，数学家们对其理解甚少，物理学家更是完全不理解。费利克斯·克莱因是少数几个理解并支持他的著名数学家之一。</p>
<p>李是那些似乎总是运气不佳的人之一。1870 年，当普法战争爆发时，他正在法国四处游历。他是挪威人，但说法语时带有类似普鲁士口音的腔调。所以枫丹白露的爱国市民误认为他是普鲁士间谍，把他关进了监狱。与此同时，法国战败，形势变得愈加混乱。李静静地坐在牢房中，继续进行他的新数学发现，直到他的法国朋友们终于找到他所在的地方，成功将他释放出来。在出版于世纪之交的劳斯·鲍尔的数学史中，李的工作记录以一段哀伤的语调结尾：“李似乎因为自己的成果未得到普遍认可而感到失望和痛苦……他总是为自己所认为的对其成就的忽视而耿耿于怀，他生命最后十年的幸福也因此受到很大影响。”</p>
<p>另一位在他那个时代更加非流行的伟大数学物理学家是赫尔曼·格拉斯曼（Hermann Grassmann）。作为一名位于斯德丁的中学教师，他在 1844 年出版了一部名为《线性扩展理论》的作品，首次引入了向量、向量空间和非交换代数的基本概念。所有这些概念在 20 世纪的物理学中都具有核心地位，但在 19 世纪却不然。在他所处的世纪里，格拉斯曼始终是个默默无闻的中学教师，未被当时的学术权威们所重视。但他比索菲斯·李更具有韧性。格拉斯曼并未像李那样因未得到数学界的认可而怨天尤人，而是另辟蹊径，开始学习梵文，并以翻译《梨俱吠陀》为德语版获得了一定的声誉。或许，如果命运注定你是未被认可的数学天才，那么在中学教书生计比在大学任职对你的健康更有益。</p>
<p>在为这次会议准备发言时，我去高等研究院的图书馆，惊喜地发现那里保存着 1878 年版的《扩展理论》，封面上用铅笔写着爱因斯坦的导师、第一位理解相对论的数学家闵可夫斯基的名字。1878 年版有一篇格拉斯曼的序言，他仍在斯德丁，乐观地表达了希望这次新版能比 34 年前的首版更受学术界关注。在序言的结尾处，有一行脚注写道：“作者在印刷过程中去世”。直到 1890 年代，还是靠那位始终慷慨地为非流行的事业而战的费利克斯·克莱因，才促成了格拉斯曼的官方认可及其全集的出版。</p>
<p>另一个数学物理学领域的重要发现是规范场的概念，由赫尔曼·外尔（Hermann Weyl）于 1918 年提出。这个概念仅用了 50 年就成为现代粒子物理学的基本概念之一。量子色动力学，1981 年最流行的粒子物理学理论，在概念上无非是李群代数和外尔的规范场的结合。外尔的发现历史与李群和格拉斯曼代数的历史截然不同。外尔既不默默无闻，也未被忽视，他在 1918 年从事物理学中最时髦的领域，即新兴的广义相对论。他发明了规范场，作为统一引力和电磁学的解决方案。在短短几个月内，规范场理论登上了科学潮流的顶峰。然而，外尔和其他人很快发现，规范场并未达到预期的效果。规范场并未能实现外尔发明它的初衷，便迅速变得不再流行，几乎被遗忘。但在接下来的 50 年里，逐渐清楚的是，规范场在另一个不同背景下非常重要，尤其是在量子电动力学及量子色动力学的新近发展中得到了应用。普林斯顿的同事杨振宁和他的学生米尔斯于 1954 年，在外尔去世前一年，完成了规范场复兴的关键步骤。没有证据表明外尔知道或在意杨和米尔斯如何处理他的心血结晶。</p>
<p>关于规范场的历史充满了讽刺。一个为了实现短暂目的而被发明的热门概念，在经历了漫长的冷落期后，最终成为物理学的基石。在数学物理的悠久历史中，这样的讽刺并不少见。哈密顿发明的四元数，曾被誉为 19 世纪物理学问题的灵丹妙药，随后被弃之不用，却在 1920 年代的量子力学中以自旋矩阵的形式复活，如今又在 1980 年代的夸克场理论中登上巅峰。高斯发明的微分几何，最初是他在测地和制图工作中的副产品，50 年后被黎曼赋予抽象的通用形式，并成为爱因斯坦引力理论的概念基础。</p>
<p>这些故事中有几个共同点：一个是时间跨度，通常超过一个人的寿命长度；另一个是最终结果的完全不可预测性。发明关键概念的科学家几乎从未预见到这些概念在未来会被应用于何种物理背景。</p>
<p>讲述了这些历史例子之后，我认为已经足够证明我的观点：非流行的人和非流行的思想在科学进步中经常起着决定性的作用。我认为未来科学思想的发展模式不会与过去有太大不同。我们可以预见，在未来，非流行的思想将像过去一样，经过长时间的酝酿，甚至在意料之外的背景中浮现出重要性。作为科学进步的守护者，我们面临的问题是如何识别具有潜力的非流行思想，以及如何支持它们。</p>
</section>
<section id="怪兽与教益" class="level2">
<h2 class="anchored" data-anchor-id="怪兽与教益">怪兽与教益</h2>
<p>首先，我们可以环顾数学领域，看看是否能够识别出可能在 21 世纪成为物理学基本构件的非流行思想。如果幸运的话，我们可能会发现一些未来的优秀候选者。当然，我们在有生之年可能无法知道自己是否选择正确。</p>
<p>大致来说，非流行数学指的是那些被布尔巴基学派的权威视为非数学的部分。有一些非常美丽的数学发现属于这一类。根据布尔巴基的观点，要称之为数学，一个思想应具有普遍性、抽象性、连贯性，并与数学的其他部分通过清晰的逻辑关系相连。不属于数学的东西包括特定的事实、具体的对象，这些对象没有明显原因存在，可以说是偶然或零散的。非流行数学主要关注那些偶然的美，如特殊函数、特定的数域、例外代数、散在有限群。我建议你们在这些未组织和未受约束的数学领域中寻找下一次物理学革命的可能性。它们具有一种奇特、意外的特质，不容易融入布尔巴基的平滑逻辑结构中。正因为如此，我们应当珍惜并培养它们，记住弗朗西斯·培根的那句话，我们的院长哈里·伍尔夫在两年前的爱因斯坦百年纪念会上引用过：“没有哪一种绝佳的美在比例上没有一些奇怪之处”。</p>
<p>为了展示这种在比例上奇特的例子，我将简要谈谈散在有限群。它们的历史始于法国数学家埃米尔·马蒂厄（Émile Mathieu），他分别在 1861 年和 1873 年发现了第一和第二个散在群。马蒂厄，像此类发现的通常情况一样，并不知道他发明了散在群。事实上，“群”这个词甚至没有出现在他的论文标题中。但他清楚地知道自己发现了某种美丽且重要的东西。用几何语言来说，他发现了在 12 维和 24 维空间中存在一种特殊的对称性，这种对称性在其他维度的空间中不会出现。他的工作发表了出来，但在接下来的 100 年中依然不受欢迎，正如正统数学家喜欢说的那样，是一个“孤立的珍奇”，没有任何后续发展。</p>
<p>大约 75 年后，马蒂厄群在编码设计中显示出某种实用重要性。每一个马蒂厄群都构成了一个独特高效的纠错码的基础。然而，这种世俗的实用性并未提升马蒂厄群在那些由布尔巴基培养的数学家眼中的地位。</p>
<p>随后在过去的 20 年中，一批新的壮丽的散在群被不同的数学家通过各种方法发现了。其中一些数学家沿用了马蒂厄的思想，另一些则研究了 24 维空间中如何尽可能紧密地填充台球，还有一些人通过大计算机进行排列组合的测试来发现这些群。</p>
<p>这些发现的唯一共同点就是它们都具有具体、经验性、试验性、偶然的特征，完全与布尔巴基学派的精神相悖。总共发现了 25 个散在群，包括马蒂厄群在内。同时，使用更普遍和抽象方法的专业群论学者们成功地证明了散在群的总数不可能超过 26 个。因此，到了两年前，只有一个散在群尚未被发现。我们知道，如果这个群存在，它将是所有群中最大且最美的。追踪这个群的数学家们称其为“怪兽”或“友善的巨人”。</p>
<p>故事的结尾发生在去年，当时来自密歇根大学的鲍勃·格里斯（Bob Griess）在高等研究院访问期间，成功构造了“怪兽群”。昨天，我刚刚从密歇根收到了一份长篇论文的最终部分，详细记录了他的工作。怪兽群现在以其所有的光辉展现在那些愿意深入理解鲍勃·格里斯构造细节的人们面前。作为最后且最伟大的散在群，它将永远屹立不倒，犹如比青铜更持久的纪念碑。</p>
<p>这与物理学有什么关系呢？可能完全没有关系。可能散在群仅仅是数学史中的一段愉快的插曲，是一段远离主流进展的小故事。我们从未见过任何迹象表明物理宇宙的对称性与散在群的对称性有任何关联。就我们所知，物理宇宙的样子和功能，不会因散在群的存在或不存在而有所不同。但我们不应过于确信没有关联。证据的缺失并不等同于缺失的证据。在物理学史上，发生过比散在群意外出现更令人惊讶的事情。我们应当始终做好迎接意外的准备。我必须坦白地说，我心中怀有一个微弱的希望——这个希望并没有任何事实或证据支持——希望在 21 世纪的某个时刻，物理学家们会发现怪兽群以某种未被察觉的方式嵌入了宇宙结构中。当然，这只是一个天马行空的猜测，几乎肯定是错误的。我唯一能为此提供的理由是神学上的。我们有充分的证据表明，宇宙的创造者热爱对称性，而如果他热爱对称性，还有什么比怪兽群的对称性更美丽的呢？</p>
<p>散在群只是非流行数学宝库中奇妙且精彩概念的一个例子。我还可以提到其他许多例子。你能想象一个正多面体，即由完美对称的面以完美对称的结构组成的立体，其总共有11个面吗？去年，我的朋友唐纳德·考克斯特（Donald Coxeter）在多伦多发现了它。是否可能 zeta 函数的零点——其性质由黎曼 120 年前提出了猜想，至今仍然是数学的核心奥秘之一——会与物理世界有隐藏的关联？去年，贝尔实验室的数学家安德鲁·奥德利兹科（Andrew Odlyzko）使用一台 Cray 计算机，发现了 zeta 函数零点的一些新奇且意想不到的性质。是否可能库尔特·哥德尔的不完全性定理，证明了在任何给定的有限公理集和推理规则下，存在一些纯数学问题无法回答，未来能让我们更深入地理解物理宇宙知识的局限？无论你在思想的哪个领域观察，总会发现尚未揭示的启示暗示了即将到来的奥秘，隐藏的关联悄然低语。</p>
<p>但现在我的时间快到了，我必须兑现给大家一些关于科学支持的实际建议的承诺。我想对高等研究院和洪堡基金会说，作为独立机构，我们有义务也有特权，比政府的目光更为长远。我们的角色应当是以比政治家或博士后所能承担的更长远的视角来看待科学。这些故事告诉了我们什么教训？教训很简单。我们应当给予非流行研究更多的关注和支持。在科学史的任何一个特定时刻，最重要和最富有成果的思想往往因为不流行而处于休眠状态。尤其是在数学物理中，一个新思想的诞生到其融入科学主流之间通常会有 50 至 100 年的滞后期。如果这是根本性进步的时间尺度，那么可以推断，任何进行数学物理学基础工作的研究几乎注定是非流行的。</p>
<p>当然，我们不应停止支持那些让大多数年轻科学家忙碌且快乐的流行研究。但是我们应该拿出一部分资源——或许是十分之一，也或许是四分之一——来支持那些做非流行研究的人。我们不应害怕显得愚蠢甚至疯狂。我们不应害怕支持那些可能完全失败的冒险项目。既然我们是独立的机构，我们有权承担风险和犯错。那些只支持零风险、无错研究的组织最终只能支持平庸。如果我们能够以智慧和勇气支持那些正统观点认为无关紧要甚至疯狂的非流行人士，或许我们将为科学救出一位偶然的索菲斯·李或赫尔曼·格拉斯曼，他们的思想会在我们当代所有的流行兴奋点被遗忘很久之后，依然名扬四海。</p>


</section>

 ]]></description>
  <category>journal</category>
  <category>academic</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-22-unfashionable-pursuits/</guid>
  <pubDate>Thu, 21 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Learn English by Chunk</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-20-learn-english-by-chunk/</link>
  <description><![CDATA[ 





<p>在接触英文的学习中，不应该不断重复地单独去学习单个单词，而是以词组（块）的形式去学习、阅读、理解英文。从发音来说，也就是要学习连读发音。</p>
<p>记忆是最低级的学习，要在实际中通过分析、应用、评估和创造等高级的学习方式学习，高级的学习方式完全可以同时完成低级的学习。</p>
<p>通过英文块的学习构建自己的单词库。</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/b4vbS4mJfRY?si=QIFA-VDN0roZXtU7" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<iframe width="560" height="315" src="https://www.youtube.com/embed/921Oi8wT-wI?si=xQWhcE5hPrkC8yTD" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<hr>
<p>在了解的过程中，我总结到除了语言学习，知识的学习也遵循类似的规律。在学习的最低级阶段，学习基本的概念、定义有其必要性，但一定不能花过多的时间纠结于此， 而是尽快越过低级的学习方式，进入高级的学习方式去探索和应用知识，从科研看，许多知识的定义并不总是对的或者准确的，应该在应用过程中形成自我的认知。</p>



 ]]></description>
  <category>thought</category>
  <category>edu</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-20-learn-english-by-chunk/</guid>
  <pubDate>Tue, 19 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>REST API 和 GraphQL API的异同？</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-20-gql-and-rest/</link>
  <description><![CDATA[ 





<p>在学习的过程中有该疑问，询问 AI 和记录下。</p>
<blockquote class="blockquote">
<p>From Kimi</p>
</blockquote>
<p>REST API 和 GraphQL API 都是客户端与服务器交互的方式，但它们在设计和数据交换格式上有显著的不同。以下是它们的一些主要异同点：</p>
<section id="相同点" class="level3">
<h3 class="anchored" data-anchor-id="相同点">相同点：</h3>
<ol type="1">
<li><strong>客户端-服务器模型</strong>：两者都遵循客户端-服务器架构，客户端发送请求，服务器处理请求并返回响应。</li>
<li><strong>HTTP协议</strong>：两者通常都使用HTTP协议进行通信，尽管GraphQL也可以使用其他协议。</li>
<li><strong>状态无关性</strong>：每个请求都应该是独立的，不依赖于之前的请求状态。</li>
<li><strong>使用JSON</strong>：两者通常使用JSON格式来序列化数据，使其易于在客户端和服务器之间传输。</li>
</ol>
</section>
<section id="不同点" class="level3">
<h3 class="anchored" data-anchor-id="不同点">不同点：</h3>
<ol type="1">
<li><strong>数据请求方式</strong>：
<ul>
<li><strong>REST</strong>：客户端请求静态定义的资源，通常通过URL路径来指定。每个资源都有一个固定的端点（Endpoint），客户端请求整个资源。</li>
<li><strong>GraphQL</strong>：客户端通过一个端点发送查询请求，可以精确指定需要哪些数据。GraphQL服务器返回客户端请求的确切数据结构。</li>
</ul></li>
<li><strong>数据结构</strong>：
<ul>
<li><strong>REST</strong>：数据通常以资源集合的形式提供，如列表或单个资源。资源通常包含客户端可能不需要的额外数据。</li>
<li><strong>GraphQL</strong>：数据以类型系统的形式提供，客户端可以请求它们需要的确切数据结构，减少了不必要的数据传输。</li>
</ul></li>
<li><strong>端点数量</strong>：
<ul>
<li><strong>REST</strong>：通常需要多个端点来处理不同的资源和操作（如获取列表、创建、更新、删除）。</li>
<li><strong>GraphQL</strong>：通常只需要一个端点来处理所有类型的请求，客户端在查询中指定所需的操作。</li>
</ul></li>
<li><strong>版本控制</strong>：
<ul>
<li><strong>REST</strong>：版本控制通常通过URL（如 <code>/v1/users</code>）或请求头来管理。</li>
<li><strong>GraphQL</strong>：可以在同一个查询中处理多个版本的数据，不需要额外的端点。</li>
</ul></li>
<li><strong>性能</strong>：
<ul>
<li><strong>REST</strong>：可能需要多个请求来获取相关数据，这可能导致额外的延迟和带宽使用。</li>
<li><strong>GraphQL</strong>：由于客户端可以请求所需的确切数据，通常可以减少请求数量和数据传输量。</li>
</ul></li>
<li><strong>灵活性</strong>：
<ul>
<li><strong>REST</strong>：设计时需要预定义资源和操作，这可能限制了API的灵活性。</li>
<li><strong>GraphQL</strong>：提供了更高的灵活性，因为客户端可以构建几乎任何类型的查询。</li>
</ul></li>
<li><strong>复杂性</strong>：
<ul>
<li><strong>REST</strong>：API设计相对简单，易于理解和实现。</li>
<li><strong>GraphQL</strong>：引入了类型系统和自己的查询语言，可能需要更多的学习和实现工作。</li>
</ul></li>
<li><strong>工具和生态系统</strong>：
<ul>
<li><strong>REST</strong>：有广泛的工具和库支持，社区和生态系统非常成熟。</li>
<li><strong>GraphQL</strong>：相对较新，但正在迅速增长，拥有越来越多的工具和库。</li>
</ul></li>
</ol>
<p>总的来说，REST API 适合于结构化和标准化的API设计，而 GraphQL API 适合于需要高度灵活和优化数据传输的应用程序。选择哪种API取决于项目需求、团队熟悉度以及预期的客户端-服务器交互模式。</p>


</section>

 ]]></description>
  <category>Web-dev</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-20-gql-and-rest/</guid>
  <pubDate>Tue, 19 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>random - 书摘</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-18-random/</link>
  <description><![CDATA[ 





<p>道可顿悟，事须渐修。</p>
<hr>
<ul>
<li>复杂的事情复杂说，是<strong>压力</strong>。</li>
<li>复杂的事情简单说，是<strong>能力</strong>。</li>
<li>复杂的事情有趣说，是<strong>魅力</strong>。</li>
</ul>



 ]]></description>
  <category>journal</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-18-random/</guid>
  <pubDate>Sun, 17 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>既不喜欢，也不讨厌</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-17-random/</link>
  <description><![CDATA[ 





<p>今天在同妹妹的闲聊中得到她对于当前大学所学习专业的感受，“既不喜欢，也不讨厌”，我恍然中回到了我自己的大一的时候（12年前了），也是这般的感受，不仅仅是我自己，周围听到的也大多数是这种声音。我突然间有了一些个人感慨和领悟，当然可能是片面的，那就是：如果我们国家的高等教育能够显著地（不一定都改变了，而是发生了显著地增加）将这种“既不喜欢，也不讨厌”的感受改变成“这就是我喜欢的”或者“这就是我想要尝试的”，我们国内的高等教育可能才发生了真正重大的进步。</p>



 ]]></description>
  <category>journal</category>
  <category>thought</category>
  <category>edu</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-17-random/</guid>
  <pubDate>Sat, 16 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Zero Shot, One Shot 和 Few Shot</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-14-zero-shot/</link>
  <description><![CDATA[ 





<p>在大语言模型中有这几个相似的概念，区别在于，传统的模型需要通过梯度下降等方式来更新和预测新的任务，而针对大语言模型，更针对的说是预训练模型，我们在实际使用时给出一些例子，会让结果更好。</p>
<p>Zero shot 就是完全不提供任何例子，直接给出任务以及数据，如中英文翻译，然后给出想要翻译的词。One shot即先给出一个实例，再给出想要翻译的词。Few shot即给出多个实例，一般3-10个。</p>



 ]]></description>
  <category>AI</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-14-zero-shot/</guid>
  <pubDate>Wed, 13 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>我记得</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-11-random/</link>
  <description><![CDATA[ 





<p>记忆是那么不牢固，我们一辈子又深陷其中，它追溯到我们来的时候，去往我们不可预知又必然而然的终点。</p>
<p>我越来越觉得，世界上美的东西，是难以描述和述说的，那是种主观的感受和体验。真正重要的文字和言语，是对这种体验的启发。</p>
<p>来去的意义、学习的意义、工作的意义、生活的意义、安稳的意义、名利的意义，有时候在我的脑海中时沉时浮，它们是“意义”，也是“活着”的目的和证明，但真正能代表我们这一生的痕迹吗？</p>
<p>在寻找工作，填写项目时，我一遍又一遍填写我的简历内容，好像生平已经被这些一两百字的描述吸收殆尽，我突然有一种惶恐，世人有可能会从这些文字中了解我吗？就如同我小时学习的那些诗人生平一般？</p>
<p>死亡，真是一种阴影！</p>
<hr>
<iframe width="560" height="315" src="https://www.youtube.com/embed/MmMvMF3ZC4o?si=Ct79YECsfQYotj6R" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
</iframe>
<hr>
<blockquote class="blockquote">
<p>《我记得》歌词</p>
</blockquote>
<p>我带着比身体重的行李</p>
<p>游入尼罗河底</p>
<p>经过几道闪电 看到一堆光圈</p>
<p>不确定是不是这里</p>
<p>我看到几个人站在一起</p>
<p>他们拿着剪刀摘走我的行李</p>
<p>擦拭我的脑袋 没有机会返回去</p>
<p>直到我听见一个声音 我确定是你</p>
<p>可你怎记得我</p>
<p>我带来了另界的消息</p>
<p>可我怎么告知你</p>
<p>注定失忆着相遇</p>
<p>我记得这里是片树林 后面有个山坡</p>
<p>山坡上的枣树每当秋天到来</p>
<p>我们把枣装满口袋</p>
<p>我记得除了朋友我还 做过你的叔父</p>
<p>你总喜欢跟在我的屁股后面</p>
<p>只是为了那几个铜钱</p>
<p>我记得我们曾是恋人 后来战争爆发</p>
<p>你上战场后就再也没有回来</p>
<p>直到收不到你的信</p>
<p>我们总这样重复分离 却要重新开始</p>
<p>相互送别对方 说着来世再见</p>
<p>再次失忆着相聚</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>呜 呜 呜 呜</p>
<p>快来抱抱 快来抱抱我</p>
<p>在路上我遇到了一位故去多年的人</p>
<p>她是如此年轻 扎着过肩马尾</p>
<p>露出和你一样的笑</p>
<p>她和我讲了很多关于你成长的故事</p>
<p>在星空另一端 思念从未停止</p>
<p>如同墓碑上的名字</p>
<p>不要哭我最亲爱的人 我最好的玩伴</p>
<p>时空是个圆圈 直行或是转弯</p>
<p>我们最终都会相见</p>
<p>在城池的某个拐角处 在夕阳西下时</p>
<p>在万家灯火的某一扇窗纱里</p>
<p>人们失忆着相聚</p>
<p>呜 快来抱抱 快来抱抱我</p>
<p>呜 快来抱抱 快来抱抱我</p>
<p>我终于找到你</p>



 ]]></description>
  <category>journal</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-11-random/</guid>
  <pubDate>Sun, 10 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>sigmoid 的数学与计算实现</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-10-21-sigmoid_2ways/</link>
  <description><![CDATA[ 





<p>深度学习中的 Sigmoid 激活函数的定义公式为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_k%20=%20%5Cfrac%7Bexp(a_k)%7D%7B%5Csum_%7Bi=1%7D%5E%7Bn%7Dexp(a_i)%7D%0A"></p>
<p>在计算实现上优化后的公式为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_k%20=%20%5Cfrac%7Bexp(a_k%20+%20C)%7D%7B%5Csum_%7Bi=1%7D%5E%7Bn%7Dexp(a_i%20+%20C)%7D%0A"></p>
<p>将 C 设定为 <img src="https://latex.codecogs.com/png.latex?exp(a_i)"> 的最大值，就可以规避计算机计算溢出问题。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> softmax(a):</span>
<span id="cb1-4">    exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(a)</span>
<span id="cb1-5">    sum_exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(exp_a)</span>
<span id="cb1-6">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sum_exp_a</span>
<span id="cb1-7"></span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> y</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> softmax2(a):</span>
<span id="cb1-11">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(a)</span>
<span id="cb1-12">    exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> c)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 溢出对策</span></span>
<span id="cb1-13">    sum_exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(exp_a)</span>
<span id="cb1-14">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sum_exp_a</span>
<span id="cb1-15"></span>
<span id="cb1-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> y</span>
<span id="cb1-17"></span>
<span id="cb1-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax(10) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax(1000) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax2(10) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax2(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"softmax2(1000) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>softmax2(np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p>结果：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">❯</span> python sigmoid_2ways.py</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">10</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [1.23394576e-04 9.99876605e-01]</span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/Users/family/Library/CloudStorage/OneDrive-shanghaitech.edu.cn/Learn/deeplearning/deep_learning_demo/ch03/sigmoid_2ways.py:4:</span> RuntimeWarning: overflow encountered in exp</span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">exp_a</span> = np.exp<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">a</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/Users/family/Library/CloudStorage/OneDrive-shanghaitech.edu.cn/Learn/deeplearning/deep_learning_demo/ch03/sigmoid_2ways.py:6:</span> RuntimeWarning: invalid value encountered in divide</span>
<span id="cb2-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y</span> = exp_a / sum_exp_a</span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1000</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [ 0. nan]</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">10</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [1.23394576e-04 9.99876605e-01]</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">softmax2</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1000</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">=</span> [0. 1.]</span></code></pre></div>



 ]]></description>
  <category>Python</category>
  <category>machine-learning</category>
  <guid>https://shixiangwang.github.io/posts/2024-10-21-sigmoid_2ways/</guid>
  <pubDate>Sun, 20 Oct 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>准备CNS阅读简记</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-10-15-cns-note/</link>
  <description><![CDATA[ 





<p>准备系统地弄一些文献阅读的计划，增强下自己的内在功底，针对性的写/记录一些笔记。</p>



 ]]></description>
  <category>CNS-note</category>
  <guid>https://shixiangwang.github.io/posts/2024-10-15-cns-note/</guid>
  <pubDate>Mon, 14 Oct 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>随想</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-05-03-random/</link>
  <description><![CDATA[ 





<p>了解的越多，才知道懂的不多。</p>
<p>懂的再多，做的不一定要多。</p>



 ]]></description>
  <category>journal</category>
  <guid>https://shixiangwang.github.io/posts/2024-05-03-random/</guid>
  <pubDate>Thu, 02 May 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>近期摘录</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-29-random/</link>
  <description><![CDATA[ 





<p>当技术变得隐形时才是最强大的。</p>
<p>“如果你想走得快，就独自走；如果你想走得远，就一起走。”</p>
<p>——— 《宝贵的人生建议》</p>
<hr>
<p>“别把焦点只放在‘你的事业’上，这是你为自己的事业所做的最好的一件事”</p>
<p>“把问题交给合适的人来负责，而不是绞尽脑汁地亲力亲为，你才能有更多机会收获更好的解决方案。”</p>
<p>“先人后事”意味着始终敞开招贤纳士的大门，始终保持高度开放的态度，时刻准备着在任何可能的地方遇到绝妙的人才。”</p>
<p>“想想自己生活中的“人运”。它可能是偶遇一位改变自己人生的导师，可能是结交一位挚友或者遇到理想的生活伴侣，遇到一位绝佳的上司或工作搭档，也可能是不经意间招聘到绝妙的人才。”</p>
<p>“直到后来的某一天，我终于恍然大悟。我决定不再只关注自己的事业前途。相反，我决心照顾好自己的下属。接下来，一切都不一样了。他们反过来照顾我，不允许失败发生在我身上！”</p>
<p>“要照顾你的下属，而不是你的前途”</p>
<p>“我们不可能用奖励把不合适的人变成合适的人”</p>
<p>—— 《从优秀到卓越》</p>



 ]]></description>
  <category>journal</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-29-random/</guid>
  <pubDate>Sun, 28 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>sratools networking issue</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-22-sratools-networking-issue/</link>
  <description><![CDATA[ 





<p>在使用 sratools 的 fastq-dump 时出现了成片的问题信息：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: connection failed while opening file within cryptographic module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> mbedtls_ssl_handshake returned <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-9984</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">X509</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> Certificate verification failed, e.g. CRL, CA or signature check failed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: mbedtls_ssl_get_verify_result returned 0x4008 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span>  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!!</span> The certificate is not correctly signed by the trusted CA  !! The certificate is signed with an unacceptable hash.  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: connection failed while opening file within cryptographic module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> ktls_handshake failed while accessing <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'130.14.29.110'</span> from <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'192.168.120.54'</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 sys: connection failed while opening file within cryptographic module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> Failed to create TLS stream for <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'www.ncbi.nlm.nih.gov'</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">130.14.29.110</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">from</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'192.168.120.54'</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2024-04-22T01:38:42</span> fastq-dump.2.9.2 err: item not found while constructing within virtual database module <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> the path <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERR5242993'</span> cannot be opened as database or table</span></code></pre></div>
<p>问题指向了证书。但谷歌后依然不得其解，一是很久没有动过这个服务器的配置，怎么会出现证书之类的搞不清的问题呢？二是 按照网络上的方法检查了证书也还是没有找到原因。</p>
<p>后续将问题的研究转向 sratools 本身，发现<a href="https://blog.csdn.net/qq_68453356/article/details/137791450">这个帖子</a>给了非常有用的提示：fastq-dump的版本和sratools本身的版本不一致。</p>
<p>我检查后发现的确如此：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">base</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[wsx@xu2</span> debug]$ prefetch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Usage:</span></span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SRA accession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> SRA files and their dependencies</span>
<span id="cb2-5"></span>
<span id="cb2-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cart</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>kart file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-7">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> cart file</span>
<span id="cb2-8"></span>
<span id="cb2-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>URL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> --output-file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>FILE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-10">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> URL to FILE</span>
<span id="cb2-11"></span>
<span id="cb2-12">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>URL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output-directory</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>DIRECTORY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-13">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Download</span> URL or URL-s to DIRECTORY</span>
<span id="cb2-14"></span>
<span id="cb2-15">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">prefetch</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">options</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>SRA file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">...</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-16">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Check</span> SRA file for missed dependencies and download them</span>
<span id="cb2-17"></span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Options:</span></span>
<span id="cb2-20">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-T</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--type</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>                Specify file type to download. Default: sra </span>
<span id="cb2-21">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-t</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--transport</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>http<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fasp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">both</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>  Transport: one of: fasp<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">both</span> </span>
<span id="cb2-22">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[default].</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fasp</span> only<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http</span> only<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">first</span> try </span>
<span id="cb2-23">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fasp</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ascp</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> use http if cannot download </span>
<span id="cb2-24">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">using</span> fasp<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> </span>
<span id="cb2-25">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--location</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>               Location of data. </span>
<span id="cb2-26"></span>
<span id="cb2-27">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-N</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--min-size</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Minimum file size to download in KB </span>
<span id="cb2-28">                                   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">inclusive</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> </span>
<span id="cb2-29">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-X</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--max-size</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Maximum file size to download in KB </span>
<span id="cb2-30">                                   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">exclusive</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> Default: 20G </span>
<span id="cb2-31">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-f</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--force</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>yes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">no</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">all</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ALL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>      Force object download: one of: no, yes, </span>
<span id="cb2-32">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">all,</span> ALL. no <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">default</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>: skip download if the </span>
<span id="cb2-33">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">object</span> if found and complete<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yes:</span> download </span>
<span id="cb2-34">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">it</span> even if it is found and is complete<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">all:</span> </span>
<span id="cb2-35">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ignore</span> lock files <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stale</span> locks or it is </span>
<span id="cb2-36">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">being</span> downloaded by another process use </span>
<span id="cb2-37">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">at</span> your own risk!<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ALL:</span> ignore lock files, </span>
<span id="cb2-38">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">restart</span> download from beginning. </span>
<span id="cb2-39">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--resume</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>yes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">no</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Resume partial downloads: one of: no, yes </span>
<span id="cb2-40">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[default].</span> </span>
<span id="cb2-41">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-C</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--verify</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>yes<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">no</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>             Verify after download: one of: no, yes </span>
<span id="cb2-42">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[default].</span> </span>
<span id="cb2-43">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--progress</span>                    Show progress. </span>
<span id="cb2-44">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-H</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--heartbeat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>           Time period in minutes to display download </span>
<span id="cb2-45">                                   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">progress.</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0:</span> no progress<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> default: 1 </span>
<span id="cb2-46"></span>
<span id="cb2-47">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--eliminate-quals</span>                Don<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t download QUALITY column. </span></span>
<span id="cb2-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -c|--check-all                   Double-check all refseqs. </span></span>
<span id="cb2-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -S|--check-rs &lt;yes|no|smart&gt;     Check for refseqs in downloaded files: one </span></span>
<span id="cb2-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   of: no, yes, smart [default]. Smart: skip </span></span>
<span id="cb2-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   check for large encrypted non-sra files. </span></span>
<span id="cb2-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -o|--order &lt;kart|size&gt;           Kart prefetch order when downloading </span></span>
<span id="cb2-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   kart: one of: kart, size. (in kart order, by </span></span>
<span id="cb2-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   file size: smallest first), default: size. </span></span>
<span id="cb2-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -R|--rows &lt;rows&gt;                 Kart rows to download (default all). Row </span></span>
<span id="cb2-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   list should be ordered. </span></span>
<span id="cb2-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --perm &lt;PATH&gt;                    PATH to jwt cart file. </span></span>
<span id="cb2-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --ngc &lt;PATH&gt;                     PATH to ngc file. </span></span>
<span id="cb2-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --cart &lt;PATH&gt;                    To read kart file. </span></span>
<span id="cb2-60"></span>
<span id="cb2-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -a|--ascp-path &lt;ascp-binary|private-key-file&gt;  Path to ascp program and </span></span>
<span id="cb2-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   private key file (asperaweb_id_dsa.putty) </span></span>
<span id="cb2-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --ascp-options &lt;value&gt;           Arbitrary options to pass to ascp command </span></span>
<span id="cb2-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   line. </span></span>
<span id="cb2-65"></span>
<span id="cb2-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -o|--output-file &lt;FILE&gt;          Write file to FILE when downloading </span></span>
<span id="cb2-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   single file. </span></span>
<span id="cb2-68"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -O|--output-directory &lt;DIRECTORY&gt;  Save files to DIRECTORY/ </span></span>
<span id="cb2-69"></span>
<span id="cb2-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -h|--help                        Output brief explanation for the program. </span></span>
<span id="cb2-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -V|--version                     Display the version of the program then </span></span>
<span id="cb2-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   quit. </span></span>
<span id="cb2-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -L|--log-level &lt;level&gt;           Logging level as number or enum string. One </span></span>
<span id="cb2-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   of (fatal|sys|int|err|warn|info|debug) or </span></span>
<span id="cb2-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   (0-6) Current/default is warn </span></span>
<span id="cb2-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -v|--verbose                     Increase the verbosity of the program </span></span>
<span id="cb2-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   status messages. Use multiple times for more </span></span>
<span id="cb2-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   verbosity. Negates quiet. </span></span>
<span id="cb2-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  -q|--quiet                       Turn off all status messages for the </span></span>
<span id="cb2-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   program. Negated by verbose. </span></span>
<span id="cb2-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  --option-file &lt;file&gt;             Read more options and parameters from the </span></span>
<span id="cb2-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                   file. </span></span>
<span id="cb2-83"></span>
<span id="cb2-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">prefetch : 3.0.2</span></span>
<span id="cb2-85"></span>
<span id="cb2-86"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(base) [wsx@xu2 debug]$ which fast</span></span>
<span id="cb2-87"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fasterq-dump             fasterq-dump-orig.3.0.2  fastq-dump.3.0.2         fastq-load.3             </span></span>
<span id="cb2-88"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fasterq-dump.3           fastq-dump               fastq-dump-orig.3.0.2    fastq-load.3.0.2         </span></span>
<span id="cb2-89"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fasterq-dump.3.0.2       fastq-dump.3             fastq-load               </span></span>
<span id="cb2-90"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(base) [wsx@xu2 debug]$ fastq-dump --version</span></span>
<span id="cb2-91"></span>
<span id="cb2-92"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">fastq-dump : 2.9.2</span></span></code></pre></div>
<p>继续查看了 <code>~/.bashrc</code> 和环境变量：</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> echo <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/data3/wsx/miniconda3/bin:/usr/local/bin:/data3/wsx/miniconda3/condabin:/data3/wsx/bin:/data3/wsx/soft/sratoolkit/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/usr/lib/rstudio-server/bin/quarto/bin:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/lib/rstudio-server/bin/postback/postback:/usr/bin:/data3/wsx/.local/bin:/data3/wsx/bin</span></span></code></pre></div>
<p>发现环境变量很有问题，在 <code>~/.bashrc</code> 的设置逻辑里 <code>/data3/wsx/soft/sratoolkit/bin</code> 应该是很靠前的， 但 conda 的激活将 <code>/usr/local/bin</code> 提前了，这就导致了 fastq-dump 使用的是系统的一个版本，从而产生了这种不一致的情况。</p>
<pre><code>[wsx@xu2 share]$ which fastq-dump
/usr/local/bin/fastq-dump</code></pre>
<p>我的解决办法就是在 dump 数据前，显式地运行 <code>export PATH=$HOME/soft/sratoolkit/bin:$PATH</code> 命令将正确的路径前提。</p>
<p>在脚本中的使用情况如下：</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /data3/wsx/share/gcap_debug</span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /data3/wsx/share/gcap_debug/temp</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span>/soft/sratoolkit/bin:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ERR5242993 ERR5243012</span>
<span id="cb5-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-9">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> handling <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$i</span></span>
<span id="cb5-10">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">parallel-fastq-dump</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> 20 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--tmpdir</span> temp <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O</span> gcap_debug/ <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--split-3</span>  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gzip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$i</span></span>
<span id="cb5-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
<p>这样去运行就没有这个问题了：</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> bash 0-dump-sra.sh </span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">handling</span> ERR5242993</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">SRR</span> ids: <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ERR5242993'</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb6-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">extra</span> args: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--split-3'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--gzip'</span>]</span>
<span id="cb6-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tempdir:</span> temp/pfd_ocitp7xi</span>
<span id="cb6-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ERR5242993</span> spots: 31931880</span>
<span id="cb6-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">blocks:</span> [[1, 1596594], [1596595, 3193188], [3193189, 4789782], [4789783, 6386376], [6386377, 7982970], [7982971, 9579564], [9579565, 11176158], [11176159, 12772752], [12772753, 14369346], [14369347, 15965940], [15965941, 17562534], [17562535, 19159128], [19159129, 20755722], [20755723, 22352316], [22352317, 23948910], [23948911, 25545504], [25545505, 27142098], [27142099, 28738692], [28738693, 30335286], [30335287, 31931880]]</span>
<span id="cb6-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Failed</span> to call external services.</span>
<span id="cb6-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Read</span> 1596594 spots for ERR5242993</span>
<span id="cb6-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Written</span> 1596594 spots for ERR5242993</span>
<span id="cb6-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Read</span> 1596594 spots for ERR5242993</span>
<span id="cb6-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Written</span> 1596594 spots for ERR5242993</span>
<span id="cb6-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Read</span> 1596594 spots for ERR5242993</span></code></pre></div>
<p>总结下来是：报错信息和错误的根源有时候南辕北辙。除了从问题本身思考，也要从其他可能得角度去探索。</p>



 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-22-sratools-networking-issue/</guid>
  <pubDate>Sun, 21 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>single cell 处理笔记</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-16-single-cell-records/</link>
  <description><![CDATA[ 





<p>今天请教了下朝晔单细胞处理的一些细节，这里做个记录。</p>
<section id="处理流程" class="level2">
<h2 class="anchored" data-anchor-id="处理流程">处理流程</h2>
<p>首先整个数据质控后分大群，将上皮和非上皮分开处理， 然后大群下的免疫细胞再拆分单独处理 seurat 流程，分割小群。 小群分析时先聚类并寻找markers基因，查看top markers基因与已知报道（参考）的一致性和在小群中的 特异性，进行生物学注释，如cDC1.C14(GPR183)，有比较一致marker基因的小群可以考虑去除，双细胞或异常 细胞群可以在这个过程中去除。</p>
<p>在分群的时候，分大群或小群，以及小群之间一般怎么设置cluster resolution这个参数呢？ &gt;有一些软件可以辅助判断一下（ROGUE），但我一般分的时候，小群会设的稍微高一点1-1.5，如果有性质比较一致的亚群就把他们合并在一起就好了，大体来说这个值的设定比较主观</p>
</section>
<section id="预处理-code" class="level2">
<h2 class="anchored" data-anchor-id="预处理-code">预处理 Code</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(Seurat)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(magrittr)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stringr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DoubletFinder)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1 Function----</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1.1 Seurat standard workflow----</span></span>
<span id="cb1-10">seuratdeal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(SeuratObject, resolution){</span>
<span id="cb1-11">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NormalizeData</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normalization.method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LogNormalize"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale.factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb1-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find Variable Features</span></span>
<span id="cb1-13">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindVariableFeatures</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selection.method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>)</span>
<span id="cb1-14">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(SeuratObject)</span>
<span id="cb1-15">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunPCA</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">npcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb1-16">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunUMAP</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb1-17">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindNeighbors</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> resolution)</span>
<span id="cb1-18">}</span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1.2 Delete doublet----</span></span>
<span id="cb1-20">DelDoublet <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(SeuratObject, DoubletRate){</span>
<span id="cb1-21">  sweep.res.list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paramSweep_v3</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PCs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sct =</span> F)</span>
<span id="cb1-22">  sweep.stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarizeSweep</span>(sweep.res.list, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">GT =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)  </span>
<span id="cb1-23">  bcmvn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find.pK</span>(sweep.stats)</span>
<span id="cb1-24">  pK_bcmvn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bcmvn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pK[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which.max</span>(bcmvn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>BCmetric)] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>()</span>
<span id="cb1-25">  homotypic.prop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modelHomotypic</span>(SeuratObject<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seurat_clusters)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># celltype is the best choice</span></span>
<span id="cb1-26">  nExp_poi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(DoubletRate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(SeuratObject)) </span>
<span id="cb1-27">  nExp_poi.adj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(nExp_poi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>homotypic.prop))</span>
<span id="cb1-28">  SeuratObject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">doubletFinder_v3</span>(SeuratObject, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">PCs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pN =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pK =</span> pK_bcmvn, </span>
<span id="cb1-29">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nExp =</span> nExp_poi.adj, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reuse.pANN =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sct =</span> F)</span>
<span id="cb1-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(SeuratObject)</span>
<span id="cb1-31">}</span></code></pre></div>
<p>例子：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">countpath <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/data1/chywang/STAD_Cohort/GSE183904"</span></span>
<span id="cb2-2">FileID <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list.files</span>(countpath)</span>
<span id="cb2-3"></span>
<span id="cb2-4">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(FileID, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateSeuratObject</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.delim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(countpath, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, i), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> T, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>),</span>
<span id="cb2-5">                                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.cells =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb2-6">                                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span>,</span>
<span id="cb2-7">                                                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">project =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_split_fixed</span>(i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)[ ,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".csv"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, .))})</span>
<span id="cb2-8"></span>
<span id="cb2-9">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subset =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nFeature_RNA</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6000</span>)})</span>
<span id="cb2-10">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){</span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PercentageFeatureSet</span>(i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pattern =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^MT-"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"percent.mt"</span>)})</span>
<span id="cb2-12">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(i, percent.mt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)})</span>
<span id="cb2-13">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(combine, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(i){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seuratdeal</span>(i, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)})</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate doublet ratio</span></span>
<span id="cb2-16">doubletratio <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>()</span>
<span id="cb2-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(combine)) {</span>
<span id="cb2-18">  doubletratio[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (combine[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.004</span>}</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run DoubletFinder</span></span>
<span id="cb2-21">combine <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mapply</span>(DelDoublet, combine, doubletratio)</span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(combine)) {</span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(combine[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[combine[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>()] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doubletstate"</span></span>
<span id="cb2-25">}</span>
<span id="cb2-26">GSE183904 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reduce</span>(merge, combine)</span></code></pre></div>


</section>

 ]]></description>
  <category>bioinformatics</category>
  <category>scRNA-seq</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-16-single-cell-records/</guid>
  <pubDate>Mon, 15 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Discordant and clipped reads</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-15-discordant-and-clipped-reads/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>From Kimi, 可靠性自己判断。</p>
</blockquote>
<p>Discordant reads 和 clipped reads 是在基因组测序数据分析中用于检测基因组结构变异（Structural Variation, SV）的两种重要类型的读长（reads）。</p>
<p><strong>Discordant reads</strong> 指的是那些配对末端读长（paired-end reads）中，一个读长能够正常比对到参考基因组的预期位置，而另一个读长比对到了参考基因组中的非预期位置。这种不一致性通常表明在基因组中存在某种结构变异，如易位（translocation）或倒位（inversion）。例如，当两条同源或非同源染色体之间发生易位时，配对的读长可能会显示一个读长位于易位片段的原始位置，而另一个读长则位于易位后的新位置。</p>
<p><strong>Clipped reads</strong> 又称为soft-clipped reads，是指单个读长中有一部分序列能够比对到参考基因组的一个位置，而剩余的序列则比对到了另一个不同的位置。这种读长表明在比对的两个位置之间可能发生了某种结构变异，如插入（insertion）。Clipped reads中的缺口（gap）或不匹配部分可以揭示插入序列的边界，从而帮助确定结构变异的精确位置。</p>
<p>这两种读长类型在结构变异检测中非常关键，因为它们提供了直接的证据来揭示基因组中可能发生的重排、插入或缺失等变异。通过分析这些读长，研究人员能够更准确地识别和表征基因组结构的变化，这对于理解基因功能、疾病机理以及进化过程都有重要意义。</p>
<p>Discordant reads 在双端测序比对中是通过比较配对末端读数（paired-end reads）的比对结果来判断的。在使用 BWA-MEM 算法进行比对时，discordant reads 的判断过程可以概括为以下几个步骤：</p>
<ol type="1">
<li><p><strong>比对读数到参考基因组</strong>：BWA-MEM 首先会对每个读数（reads）进行比对，尝试找到最佳的比对位置。这一过程包括使用种子和扩展（seeding and extending）策略来处理较长的读数，以及使用基于Smith-Waterman算法的局部比对来处理可能的重复区域或结构变异区域。</p></li>
<li><p><strong>评估插入大小</strong>：对于双端测序数据，BWA-MEM 会估计插入大小（insert size）的均值和方差，并基于此信息评估每个读数对的两个末端是否在预期的插入大小范围内。</p></li>
<li><p><strong>识别不一致的配对</strong>：在比对过程中，如果一个读数的两个末端比对到了参考基因组中相距甚远的位置，这可能表明存在结构变异，如插入、缺失或易位。BWA-MEM 会识别这些不一致的配对，即discordant reads。</p></li>
<li><p><strong>使用动态规划优化比对</strong>：BWA-MEM 使用动态规划算法来优化比对结果，自动选择局部比对或端到端比对。如果一个读数的末端比对到了一个真实的变异位点，并且比对质量足够好，BWA-MEM 可能会接受这样的局部比对，而不是强制进行端到端比对，这样可以减少参考偏差并避免引入过多的不匹配和间隙。</p></li>
<li><p><strong>输出结果</strong>：最终，BWA-MEM 会输出比对结果，包括所有成功的比对以及识别出的 discordant reads。这些 discordant reads 可以用于后续的结构变异分析。</p></li>
</ol>
<p>通过上述步骤，BWA-MEM 能够有效地处理双端测序数据，并识别出可能指示结构变异的 discordant reads。这种方法对于发现和研究基因组中的结构变异非常重要，有助于理解基因组多样性和疾病相关变异。</p>



 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-15-discordant-and-clipped-reads/</guid>
  <pubDate>Sun, 14 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>第一/二类型错误</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-04-11-type-1-2-errors/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>From Kimi</p>
</blockquote>
<p>在统计假设检验中，第一类错误和第二类错误是两种常见的错误类型，它们描述了在决策过程中可能出现的不同类型的错误。</p>
<section id="第一类错误type-i-error" class="level3">
<h3 class="anchored" data-anchor-id="第一类错误type-i-error">第一类错误（Type I Error）</h3>
<p>第一类错误，也称为α错误，发生在我们错误地拒绝了一个真实的零假设（H0）。换句话说，当实际上零假设为真时，我们却得出结论认为它为假。这种情况下，我们认为观察到的效应是显著的，但实际上这种效应并不存在。</p>
<p>例如，在药物测试中，如果一个新药物实际上没有疗效，但研究结果却错误地表明它有效，这就是犯了第一类错误。这种错误的风险通常与研究的显著性水平（α水平）相关，α水平是研究者事先设定的，用于决定何时拒绝零假设的概率阈值。</p>
</section>
<section id="第二类错误type-ii-error" class="level3">
<h3 class="anchored" data-anchor-id="第二类错误type-ii-error">第二类错误（Type II Error）</h3>
<p>第二类错误，也称为β错误，发生在我们错误地接受了零假设，即当实际上零假设为假时，我们却未能拒绝它。这意味着我们错过了发现真实效应的机会，得出结论认为没有效应，而实际上效应是存在的。</p>
<p>继续上面药物测试的例子，如果一个新药物实际上是有效的，但研究结果未能显示出其疗效，从而得出结论认为它无效，这就是犯了第二类错误。这种错误的风险与研究的统计效力（power）有关，统计效力是指正确检测到真实效应的概率。</p>
</section>
<section id="错误类型的关系" class="level3">
<h3 class="anchored" data-anchor-id="错误类型的关系">错误类型的关系</h3>
<p>第一类错误和第二类错误之间存在权衡关系。降低第一类错误的风险（降低α水平）可能会增加第二类错误的风险（降低统计效力），反之亦然。研究者需要在设计研究时平衡这两种错误的风险，以确保研究结果的准确性和可靠性。</p>
</section>
<section id="其他错误类型" class="level3">
<h3 class="anchored" data-anchor-id="其他错误类型">其他错误类型</h3>
<p>除了第一类和第二类错误外，还有其他类型的错误，如：</p>
<ul>
<li>第三类错误：当研究者未能正确地识别和解释数据中的模式时发生的错误。</li>
<li>第四类错误：在元分析或综合分析中，当研究者错误地将不同研究的结果合并时发生的错误。</li>
</ul>
<p>在进行统计分析和解释结果时，了解这些错误类型对于避免错误的结论和提高研究质量至关重要。</p>


</section>

 ]]></description>
  <category>stats</category>
  <guid>https://shixiangwang.github.io/posts/2024-04-11-type-1-2-errors/</guid>
  <pubDate>Wed, 10 Apr 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>R 设置编译选项</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-03-20-r-makevars-compiler-setting/</link>
  <description><![CDATA[ 





<p>在 R 中，特别是 CentOS Linux 进行包安装和编译时，需要使用比较新的 C/C++ 编译器，在 <code>~/.R/Makevars</code> 中作如下设置。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CC</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/gcc <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX11</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++11</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX14</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++14</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span>
<span id="cb1-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CXX17</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/opt/rh/devtoolset-9/root/usr/bin/g++ <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-std=c++17</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fPIC</span></span></code></pre></div>
<blockquote class="blockquote">
<p>一些情况下会加上 <code>-fopenmp</code> 选项。</p>
</blockquote>
<p>本文对之前所做记录 <a href="https://mp.weixin.qq.com/s/BoMEGabgWvjfETnIPPxJVA">CentOS/Redhat R包使用新的gcc编译【更新】</a> 的补全。</p>



 ]]></description>
  <category>Linux</category>
  <category>R</category>
  <guid>https://shixiangwang.github.io/posts/2024-03-20-r-makevars-compiler-setting/</guid>
  <pubDate>Tue, 19 Mar 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>snakemake 教程精要</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-28-snakemake-basics/</link>
  <description><![CDATA[ 





<p>这里把 <a href="https://snakemake.readthedocs.io/en/stable/tutorial/tutorial.html">Snakemake 教程</a> 的精要记录了下来。</p>
<section id="基础" class="level2">
<h2 class="anchored" data-anchor-id="基础">基础</h2>
<p><code>Snakefile</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remember that Snakemake works backwards from requested output, and not from available input.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check: snakemake -np mapped_reads/A.bam</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run: snakemake --cores 1 mapped_reads/A.bam</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np mapped_reads/{A,B}.bam</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np sorted_reads/B.bam</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --dag sorted_reads/{A,B}.bam.bai | dot -Tsvg &gt; dag.svg</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --dag calls/all.vcf | dot -Tsvg &gt; dag.svg</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">SAMPLES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>]</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb1-14">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb1-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb1-17"></span>
<span id="cb1-18">rule bwa_map:</span>
<span id="cb1-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb1-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/samples/{sample}.fastq"</span></span>
<span id="cb1-22">    output:</span>
<span id="cb1-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb1-24">    shell:</span>
<span id="cb1-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb1-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bwa mem {input} | samtools view -Sb - &gt; {output}"</span></span>
<span id="cb1-27"></span>
<span id="cb1-28">rule samtools_sort:</span>
<span id="cb1-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb1-31">    output:</span>
<span id="cb1-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb1-33">    shell:</span>
<span id="cb1-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb1-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb1-36"></span>
<span id="cb1-37">rule samtools_index:</span>
<span id="cb1-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb1-40">    output:</span>
<span id="cb1-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb1-42">    shell:</span>
<span id="cb1-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb1-44"></span>
<span id="cb1-45">rule bcftools_call:</span>
<span id="cb1-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-47">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb1-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb1-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb1-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb1-51">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SAMPLES),</span>
<span id="cb1-52">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>SAMPLES)</span>
<span id="cb1-53">    output:</span>
<span id="cb1-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb1-55">    shell:</span>
<span id="cb1-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb1-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv - &gt; {output}"</span></span>
<span id="cb1-58"></span>
<span id="cb1-59">rule plot_quals:</span>
<span id="cb1-60">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb1-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb1-62">    output:</span>
<span id="cb1-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb1-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb1-65">    script:</span>
<span id="cb1-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span></code></pre></div>
<p><code>scripts/plot-quals.py</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Similar in R: snakemake@input[[1]], snakemake@input[["myfile"]]</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># all properties of the rule like input, output, wildcards, etc.</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># are available as attributes of a global snakemake object.</span></span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb2-6">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Agg"</span>)</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pysam <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VariantFile</span>
<span id="cb2-9"></span>
<span id="cb2-10">quals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [record.qual <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> record <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> VariantFile(snakemake.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])]</span>
<span id="cb2-11">plt.hist(quals)</span>
<span id="cb2-12"></span>
<span id="cb2-13">plt.savefig(snakemake.output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
</section>
<section id="advanced" class="level2">
<h2 class="anchored" data-anchor-id="advanced">Advanced</h2>
<p><code>Snakefile</code>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remember that Snakemake works backwards from requested output, and not from available input.</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake --cores 10 # The maximum cores used</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                      # If --cores is given without a number, all available cores are used.</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With the flag --forceall you can enforce a complete re-execution of the workflow</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -n --forcerun $(snakemake --list-input-changes)</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -n --forcerun bcftools_call</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># snakemake -np --summary</span></span>
<span id="cb3-12"></span>
<span id="cb3-13">configfile: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config.yaml"</span></span>
<span id="cb3-14"></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb3-16">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb3-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://snakemake.readthedocs.io/en/stable/tutorial/advanced.html#step-3-input-functions</span></span>
<span id="cb3-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_bwa_map_input_fastqs(wildcards):</span>
<span id="cb3-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>][wildcards.sample]</span>
<span id="cb3-23"></span>
<span id="cb3-24">rule bwa_map:</span>
<span id="cb3-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb3-27">        get_bwa_map_input_fastqs</span>
<span id="cb3-28">    output:</span>
<span id="cb3-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mark output files as temporary. </span></span>
<span id="cb3-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake will delete the marked files for you, </span></span>
<span id="cb3-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># once all the consuming jobs (that need it as input) have been executed</span></span>
<span id="cb3-32">        temp(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mapped_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb3-33">    params:</span>
<span id="cb3-34">        rg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"@RG\tID:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">\tSM:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to store all log files in a subdirectory logs/, </span></span>
<span id="cb3-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prefixed by the rule or tool name.</span></span>
<span id="cb3-37">    log:</span>
<span id="cb3-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bwa_mem/{sample}.log"</span></span>
<span id="cb3-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake provides a resources directive that can be used to specify arbitrary resources,</span></span>
<span id="cb3-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., memory usage or auxiliary computing devices like GPUs. </span></span>
<span id="cb3-41">    threads: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb3-42">    shell:</span>
<span id="cb3-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb3-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># both bwa and samtools and pipe it into the file referred to by {log}</span></span>
<span id="cb3-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span>
<span id="cb3-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb3-47"></span>
<span id="cb3-48">rule samtools_sort:</span>
<span id="cb3-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb3-51">    output:</span>
<span id="cb3-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># protect the final BAM file from accidental deletion or modification</span></span>
<span id="cb3-53">        protected(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb3-54">    shell:</span>
<span id="cb3-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb3-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb3-57"></span>
<span id="cb3-58">rule samtools_index:</span>
<span id="cb3-59">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb3-61">    output:</span>
<span id="cb3-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb3-63">    shell:</span>
<span id="cb3-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb3-65"></span>
<span id="cb3-66">rule bcftools_call:</span>
<span id="cb3-67">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-68">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb3-69">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb3-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb3-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb3-72">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>]),</span>
<span id="cb3-73">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>])</span>
<span id="cb3-74">    output:</span>
<span id="cb3-75">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb3-76">    log:</span>
<span id="cb3-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bcftools_call/all.log"</span></span>
<span id="cb3-78">    params:</span>
<span id="cb3-79">        rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prior_mutation_rate"</span>]</span>
<span id="cb3-80">    shell:</span>
<span id="cb3-81">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb3-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv -P {params.rate} - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb3-83"></span>
<span id="cb3-84">rule plot_quals:</span>
<span id="cb3-85">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb3-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb3-87">    output:</span>
<span id="cb3-88">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb3-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb3-90">    script:</span>
<span id="cb3-91">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span>
<span id="cb3-92"></span></code></pre></div>
<p><code>config.yaml</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">samples</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">A</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/A.fastq</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">B</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/B.fastq</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">C</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples/C.fastq</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior_mutation_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span></span></code></pre></div>
</section>
<section id="custom" class="level2">
<h2 class="anchored" data-anchor-id="custom">Custom</h2>
<p>上面手动设定了要处理的样本列表，能不能通过目录来处理呢？即不管有多少文件，目录下所有符合要求的样本列表都进行处理。</p>
<p><code>config.yaml</code>:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">samples</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data/samples</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior_mutation_rate</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span></span></code></pre></div>
<p>在探索后我在之前的基础上给出了以下方案：</p>
<p>利用 <code>glob</code> 进行文件列表的解析，然后处理相关的 pattern 把样本列表提取出来，并以此 更新涉及到样本列表指定的部分：</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples),</span>
<span id="cb6-2">bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples)</span></code></pre></div>
<p>全部内容如下：</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb7-2"></span>
<span id="cb7-3">configfile: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"config.yaml"</span></span>
<span id="cb7-4"></span>
<span id="cb7-5">input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples"</span>]</span>
<span id="cb7-6">input_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(input_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/*.fastq"</span>)</span>
<span id="cb7-7"></span>
<span id="cb7-8">samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb7-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> input_files:</span>
<span id="cb7-10">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb7-11">    samples.add(name)</span>
<span id="cb7-12"></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(samples)</span></span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># target rule</span></span>
<span id="cb7-16">rule <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>:</span>
<span id="cb7-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb7-19"></span>
<span id="cb7-20">rule bwa_map:</span>
<span id="cb7-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb7-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"data/samples/{sample}.fastq"</span></span>
<span id="cb7-24">    output:</span>
<span id="cb7-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mark output files as temporary. </span></span>
<span id="cb7-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake will delete the marked files for you, </span></span>
<span id="cb7-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># once all the consuming jobs (that need it as input) have been executed</span></span>
<span id="cb7-28">        temp(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mapped_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb7-29">    params:</span>
<span id="cb7-30">        rg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"@RG\tID:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">\tSM:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to store all log files in a subdirectory logs/, </span></span>
<span id="cb7-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prefixed by the rule or tool name.</span></span>
<span id="cb7-33">    log:</span>
<span id="cb7-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bwa_mem/{sample}.log"</span></span>
<span id="cb7-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Snakemake provides a resources directive that can be used to specify arbitrary resources,</span></span>
<span id="cb7-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., memory usage or auxiliary computing devices like GPUs. </span></span>
<span id="cb7-37">    threads: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb7-38">    shell:</span>
<span id="cb7-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Since the rule has multiple input files, Snakemake will concatenate them, separated by a whitespace</span></span>
<span id="cb7-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># both bwa and samtools and pipe it into the file referred to by {log}</span></span>
<span id="cb7-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bwa mem -R '{params.rg}' -t {threads} {input} | "</span></span>
<span id="cb7-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools view -Sb - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb7-43"></span>
<span id="cb7-44">rule samtools_sort:</span>
<span id="cb7-45">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"mapped_reads/{sample}.bam"</span></span>
<span id="cb7-47">    output:</span>
<span id="cb7-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># protect the final BAM file from accidental deletion or modification</span></span>
<span id="cb7-49">        protected(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>)</span>
<span id="cb7-50">    shell:</span>
<span id="cb7-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools sort -T sorted_reads/{wildcards.sample} "</span></span>
<span id="cb7-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"-O bam {input} &gt; {output}"</span></span>
<span id="cb7-53"></span>
<span id="cb7-54">rule samtools_index:</span>
<span id="cb7-55">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam"</span></span>
<span id="cb7-57">    output:</span>
<span id="cb7-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"sorted_reads/{sample}.bam.bai"</span></span>
<span id="cb7-59">    shell:</span>
<span id="cb7-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"samtools index {input}"</span></span>
<span id="cb7-61"></span>
<span id="cb7-62">rule bcftools_call:</span>
<span id="cb7-63">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-64">        fa<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/genome.fa"</span>,</span>
<span id="cb7-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expand: a helper function for collecting input files</span></span>
<span id="cb7-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 注意这里 SAMPLES 必须要有定义，而这里的 sample 也是提取其元素，与上面</span></span>
<span id="cb7-67">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rule 中 sample wildcards 不同</span></span>
<span id="cb7-68">        bam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples),</span>
<span id="cb7-69">        bai<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>expand(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sorted_reads/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.bam.bai"</span>, sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>samples)</span>
<span id="cb7-70">    output:</span>
<span id="cb7-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb7-72">    log:</span>
<span id="cb7-73">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"logs/bcftools_call/all.log"</span></span>
<span id="cb7-74">    params:</span>
<span id="cb7-75">        rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>config[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prior_mutation_rate"</span>]</span>
<span id="cb7-76">    shell:</span>
<span id="cb7-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"(bcftools mpileup -f {input.fa} {input.bam} | "</span></span>
<span id="cb7-78">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"bcftools call -mv -P {params.rate} - &gt; {output}) 2&gt; {log}"</span></span>
<span id="cb7-79"></span>
<span id="cb7-80">rule plot_quals:</span>
<span id="cb7-81">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>:</span>
<span id="cb7-82">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"calls/all.vcf"</span></span>
<span id="cb7-83">    output:</span>
<span id="cb7-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"plots/quals.svg"</span></span>
<span id="cb7-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># It is best practice to use the script directive whenever an inline code block would have more than a few lines of code</span></span>
<span id="cb7-86">    script:</span>
<span id="cb7-87">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"scripts/plot-quals.py"</span></span>
<span id="cb7-88"></span></code></pre></div>
<p>QA 中的 <a href="https://snakemake.readthedocs.io/en/stable/project_info/faq.html#how-do-i-run-my-rule-on-all-files-of-a-certain-directory">How do I run my rule on all files of a certain directory?</a> 提供的下面的办法似乎也能解决该问题：</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">IDS, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob_wildcards(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"thedir/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{id}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.fastq"</span>)</span></code></pre></div>


</section>

 ]]></description>
  <category>snakemake</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-28-snakemake-basics/</guid>
  <pubDate>Tue, 27 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Can I run VS Code Server on older Linux distributions</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-25-can-i-run-vs-code-server-on-older-linux-distributions/</link>
  <description><![CDATA[ 





<p>VSCode 的不断更新导致最新版本 Remotes 已经在一些 Linux server 上不再支持，这里记录下官方的解决办法，就是将版本降级到 1.85</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/remote/faq#_can-i-run-vs-code-server-on-older-linux-distributions" class="uri">https://code.visualstudio.com/docs/remote/faq#_can-i-run-vs-code-server-on-older-linux-distributions</a></li>
<li><a href="https://code.visualstudio.com/updates/v1_85" class="uri">https://code.visualstudio.com/updates/v1_85</a></li>
</ul>
<p>Downloads: Windows: <a href="https://update.code.visualstudio.com/1.85.2/win32-x64-user/stable">x64</a> <a href="https://update.code.visualstudio.com/1.85.2/win32-arm64-user/stable">Arm64</a> | Mac: <a href="https://update.code.visualstudio.com/1.85.2/darwin-universal/stable">Universal</a> <a href="https://update.code.visualstudio.com/1.85.2/darwin/stable">Intel</a> <a href="https://update.code.visualstudio.com/1.85.2/darwin-arm64/stable">silicon</a> | Linux: <a href="https://update.code.visualstudio.com/1.85.2/linux-deb-x64/stable">deb</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-rpm-x64/stable">rpm</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-x64/stable">tarball</a> <a href="https://code.visualstudio.com/docs/supporting/faq#_previous-release-versions">Arm</a> <a href="https://update.code.visualstudio.com/1.85.2/linux-snap-x64/stable">snap</a></p>
<blockquote class="blockquote">
<p>Depending on your platform, make sure to disable updates to stay on that version. A good recommendation is to have release 1.85 as a separate installation, set up with Portable Mode（就是独立的软件目录）.</p>
<p>Portable mode is supported on the ZIP download for Windows, and the TAR.GZ download for Linux, as well as the regular Application download for macOS. See the Download page to find the correct .zip / .tar.gz file for your platform.</p>
</blockquote>



 ]]></description>
  <category>Linux</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-25-can-i-run-vs-code-server-on-older-linux-distributions/</guid>
  <pubDate>Sat, 24 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>use singularity</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-23-use-singularity/</link>
  <description><![CDATA[ 





<ul>
<li><a href="http://www.achelous.org/Container-Tech/Singularity-in-nutshell.html">Singularity 日常使用</a></li>
<li><a href="https://docs.sylabs.io/guides/latest/user-guide/definition_files.html">文档</a></li>
<li>https://singularityhub.github.io/</li>
<li>https://cloud.sylabs.io/library</li>
</ul>



 ]]></description>
  <category>note</category>
  <category>container</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-23-use-singularity/</guid>
  <pubDate>Thu, 22 Feb 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>telescope installation</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-02-20-telescope-installation/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>注意这个帖子的有效性可能在未来某一天丧失。</p>
</blockquote>
<p>简单记录下 <code>telescope</code> 的安装，因为 <a href="https://github.com/mlbendall/telescope" class="uri">https://github.com/mlbendall/telescope</a> 提过的官方说明直接装后测试是有问题的。</p>
<p>一步步安装和debug过程：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> telescope <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge telescope python=3.8</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate telescope</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install numpy=1.19</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> conda-forge <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> bioconda <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pysam&lt;0.17'</span></span></code></pre></div>
<blockquote class="blockquote">
<p>现在回头看可以缩减为一句命令：<code>mamba create -n telescope -c bioconda -c conda-forge telescope python=3.8 numpy=1.19 pysam&lt;0.17</code>。</p>
</blockquote>
<p>测试：</p>
<pre><code>(telescope) zhou2 22:12:47 ~/test 
$eval $(telescope test)
2024-02-18 22:13:03 INFO     
Version:                          1.0.3
Input Options
    samfile:                      /home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam
    gtffile:                      /home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/annotation.gtf
    attribute:                    locus
    no_feature_key:               __no_feature
    ncpu:                         1
    tempdir:                      None
Reporting Options
    quiet:                        False
    debug:                        False
    logfile:                      &lt;stderr&gt;
    outdir:                       .
    exp_tag:                      telescope
    updated_sam:                  False
Run Modes
    reassign_mode:                exclude
    conf_prob:                    0.9
    overlap_mode:                 threshold
    overlap_threshold:            0.2
    annotation_class:             intervaltree
Model Parameters
    pi_prior:                     0
    theta_prior:                  200000
    em_epsilon:                   1e-07
    max_iter:                     100
    use_likelihood:               False
    skip_em:                      False
 (from run in telescope_assign.py:197)
[E::idx_find_and_load] Could not retrieve index file for '/home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam'
2024-02-18 22:13:03 INFO     Loading annotation...                                        (from run in telescope_assign.py:205)
2024-02-18 22:13:03 INFO     Loaded annotation in 0 minutes and 0 secs                    (from run in telescope_assign.py:208)
2024-02-18 22:13:03 INFO     Loaded 99 features.                                          (from run in telescope_assign.py:209)
2024-02-18 22:13:03 INFO     Loading alignments...                                        (from run in telescope_assign.py:214)
[E::idx_find_and_load] Could not retrieve index file for '/home/zhou2/miniconda3/envs/telescope/lib/python3.8/site-packages/telescope/data/alignment.bam'
2024-02-18 22:13:05 INFO     Loaded alignment in 0 minutes and 1 secs                     (from run in telescope_assign.py:217)
2024-02-18 22:13:05 INFO     Alignment Summary:                                           (from print_summary in model.py:519)
2024-02-18 22:13:05 INFO         1000 total fragments.                                    (from print_summary in model.py:520)
2024-02-18 22:13:05 INFO             1000 mapped as pairs.                                (from print_summary in model.py:521)
2024-02-18 22:13:05 INFO             0 mapped as mixed.                                   (from print_summary in model.py:522)
2024-02-18 22:13:05 INFO             0 mapped single.                                     (from print_summary in model.py:523)
2024-02-18 22:13:05 INFO             0 failed to map.                                     (from print_summary in model.py:524)
2024-02-18 22:13:05 INFO     --                                                           (from print_summary in model.py:525)
2024-02-18 22:13:05 INFO         1000 fragments mapped to reference; of these             (from print_summary in model.py:526)
2024-02-18 22:13:05 INFO             0 had one unique alignment.                          (from print_summary in model.py:528)
2024-02-18 22:13:05 INFO             1000 had multiple alignments.                        (from print_summary in model.py:529)
2024-02-18 22:13:05 INFO     --                                                           (from print_summary in model.py:530)
2024-02-18 22:13:05 INFO         1000 fragments overlapped annotation; of these           (from print_summary in model.py:531)
2024-02-18 22:13:05 INFO             0 map to one locus.                                  (from print_summary in model.py:533)
2024-02-18 22:13:05 INFO             1000 map to multiple loci.                           (from print_summary in model.py:535)
2024-02-18 22:13:05 INFO     
                                                            (from print_summary in model.py:537)
2024-02-18 22:13:05 INFO     Running Expectation-Maximization...                          (from run in telescope_assign.py:250)
2024-02-18 22:13:05 INFO     Iteration 1, diff=1.3795                                     (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 2, diff=0.7388                                     (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 3, diff=0.24275                                    (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 4, diff=0.065133                                   (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 5, diff=0.017653                                   (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 6, diff=0.0050039                                  (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 7, diff=0.0014807                                  (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 8, diff=0.00045365                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 9, diff=0.00014275                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 10, diff=4.5844e-05                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 11, diff=1.4953e-05                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 12, diff=4.9364e-06                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 13, diff=1.645e-06                                 (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 14, diff=5.5228e-07                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 15, diff=1.8652e-07                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     Iteration 16, diff=6.3301e-08                                (from em in model.py:709)
2024-02-18 22:13:05 INFO     EM converged after 16 iterations.                            (from em in model.py:722)
2024-02-18 22:13:05 INFO     Final log-likelihood: 95252.596293.                          (from em in model.py:723)
2024-02-18 22:13:05 INFO     EM completed in 0 minutes and 0 secs                         (from run in telescope_assign.py:253)
2024-02-18 22:13:05 INFO     Generating Report...                                         (from run in telescope_assign.py:256)
2024-02-18 22:13:05 INFO     telescope assign complete (0 minutes and 1 secs)             (from run in telescope_assign.py:263)
</code></pre>



 ]]></description>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2024-02-20-telescope-installation/</guid>
  <pubDate>Mon, 19 Feb 2024 16:00:00 GMT</pubDate>
</item>
</channel>
</rss>
