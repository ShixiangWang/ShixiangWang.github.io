<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Reasoning</title>
<link>https://shixiangwang.github.io/</link>
<atom:link href="https://shixiangwang.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Reasoning is a blog dedicated to exploring the intersection of data science, bioinformatics, and personal insights.</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Thu, 17 Jul 2025 16:00:00 GMT</lastBuildDate>
<item>
  <title>R 并行时怎么输出消息</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-07-18-echo-in-shell-for-r-parallel/</link>
  <description><![CDATA[ 





<p>并行计算可以加快一些耗时流程的分析，但 R 如果调用如 <code>mclapply()</code> 等进行并行计算， 无法输出调用函数内部的打印信息，这里有一个小技巧，记录一下。</p>
<p>构建一个新的消息函数，在调用函数内部进行使用，用来打印提示信息。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Function which prints a message using shell echo; useful for printing messages from inside mclapply when running in Rstudio</span></span>
<span id="cb1-2">message_parallel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(...){</span>
<span id="cb1-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'echo "</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">%s</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"'</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(..., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)))</span>
<span id="cb1-4">}</span></code></pre></div>
<blockquote class="blockquote">
<p>这里多个 <code>\n</code> 可根据情况进行去除。</p>
</blockquote>
<hr>
<blockquote class="blockquote">
<p>来源：<a href="https://stackoverflow.com/questions/17345837/printing-from-mclapply-in-r-studio" class="uri">https://stackoverflow.com/questions/17345837/printing-from-mclapply-in-r-studio</a></p>
</blockquote>



 ]]></description>
  <category>R</category>
  <guid>https://shixiangwang.github.io/posts/2025-07-18-echo-in-shell-for-r-parallel/</guid>
  <pubDate>Thu, 17 Jul 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>用来测试端口 work 的Demo app</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-07-09-python-web-demo-app/</link>
  <description><![CDATA[ 





<p>Python 自带就能 run，方便测试端口和映射是否能 work。</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> http.server</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> socketserver</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> argparse</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> DemoHandler(http.server.SimpleHTTPRequestHandler):</span>
<span id="cb1-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> do_GET(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span>:</span>
<span id="cb1-8">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.send_response(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)</span>
<span id="cb1-9">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.send_header(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Content-type'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text/html'</span>)</span>
<span id="cb1-10">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.end_headers()</span>
<span id="cb1-11">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wfile.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'Hello, World! This is a demo app.'</span>)</span>
<span id="cb1-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/about'</span>:</span>
<span id="cb1-13">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.send_response(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)</span>
<span id="cb1-14">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.send_header(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Content-type'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text/html'</span>)</span>
<span id="cb1-15">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.end_headers()</span>
<span id="cb1-16">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.wfile.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'This is a simple demo application.'</span>)</span>
<span id="cb1-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-18">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().do_GET()</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> run(port):</span>
<span id="cb1-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> socketserver.TCPServer((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, port), DemoHandler) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> httpd:</span>
<span id="cb1-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Serving at port </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>port<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-23">        httpd.serve_forever()</span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> main():</span>
<span id="cb1-26">    parser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> argparse.ArgumentParser(description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Run the demo app on a specified port.'</span>)</span>
<span id="cb1-27">    parser.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--port'</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8000</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">help</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Port to run the server on'</span>)</span>
<span id="cb1-28">    args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parser.parse_args()</span>
<span id="cb1-29">    run(args.port)</span>
<span id="cb1-30"></span>
<span id="cb1-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'__main__'</span>:</span>
<span id="cb1-32">    main()</span></code></pre></div>



 ]]></description>
  <category>Python</category>
  <guid>https://shixiangwang.github.io/posts/2025-07-09-python-web-demo-app/</guid>
  <pubDate>Tue, 08 Jul 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>slurm 管理记录</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-07-08-slurm-manage/</link>
  <description><![CDATA[ 





<section id="相关-services" class="level2">
<h2 class="anchored" data-anchor-id="相关-services">相关 services</h2>
<p>Master:</p>
<ul>
<li>munge</li>
<li>slurmctld</li>
</ul>
<p>Node(s)</p>
<ul>
<li>munge</li>
<li>slurmd</li>
</ul>
<p>查看状态：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">systemctl</span> status slurmctld</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">systemctl</span> status slurmd</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">systemctl</span> status munge</span></code></pre></div>
</section>
<section id="节点测试" class="level2">
<h2 class="anchored" data-anchor-id="节点测试">节点测试</h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">srun</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> node1 hostname</span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#node1</span></span></code></pre></div>
<p>io 检查</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nfsiostat</span> /data 5</span></code></pre></div>
<p>io 测试</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">fio</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nfs-test <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ioengine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>libaio <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rw</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>randrw <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--bs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>4k     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--size</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1G <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--numjobs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>16 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>60 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--group_reporting</span>     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--directory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/data</span></code></pre></div>
</section>
<section id="节点状态查看和修改" class="level2">
<h2 class="anchored" data-anchor-id="节点状态查看和修改">节点状态查看和修改</h2>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scontrol</span> show master</span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scontrol</span> show node</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scontrol</span> show node node1</span></code></pre></div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scontrol</span> update NodeName=node<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> State=RESUME</span></code></pre></div>
<p>节点批量运行命令</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pdsh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> master,node<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id wsx"</span></span></code></pre></div>
</section>
<section id="创建用户" class="level2">
<h2 class="anchored" data-anchor-id="创建用户">创建用户</h2>
<blockquote class="blockquote">
<p>bioinfo, gid, 密码等需要根据注意</p>
</blockquote>
<section id="外部" class="level3">
<h3 class="anchored" data-anchor-id="外部">外部</h3>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">user</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span></span>
<span id="cb8-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>1000  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bioinfo</span></span>
<span id="cb8-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">shared_home</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/data/home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${user}</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get 10 开头的最大 uid</span></span>
<span id="cb8-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">max_uid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">awk</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-F:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{print $3}'</span> /etc/passwd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> 10 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-1</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 将最大的 UID 加 1</span></span>
<span id="cb8-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">uid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$((max_uid</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pdsh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> master,node<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/opt/create_user_in.sh </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${user}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${uid}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gid}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> no"</span></span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 设置无缝 ssh</span></span>
<span id="cb8-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">username</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$user</span></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create SSH key pair for the new user, and input an empty passphrase</span></span>
<span id="cb8-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$username</span> ssh-keygen <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> rsa <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-N</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$shared_home</span>/.ssh/id_rsa</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy the public key to the new user's authorized_keys file to enable passwordless login</span></span>
<span id="cb8-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$shared_home</span>/.ssh/id_rsa.pub <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$shared_home</span>/.ssh/authorized_keys</span>
<span id="cb8-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chown</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$username</span>:bioinfo <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$shared_home</span>/.ssh/authorized_keys <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 600 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$shared_home</span>/.ssh/authorized_keys</span>
<span id="cb8-23"></span>
<span id="cb8-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$username</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> created successfully."</span></span></code></pre></div>
</section>
<section id="内部" class="level3">
<h3 class="anchored" data-anchor-id="内部">内部</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> create_user_in.sh </span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 参数校验</span></span>
<span id="cb9-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$#</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-ne</span> 4 <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb9-5">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"用法：</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$0</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 用户名 UID GID 是否管理员(yes/no)"</span></span>
<span id="cb9-6">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb9-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">USERNAME</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span></span>
<span id="cb9-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CUSTOM_UID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span></span>
<span id="cb9-11"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CUSTOM_GID</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$3</span></span>
<span id="cb9-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IS_ADMIN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$4</span></span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 检查UID/GID是否被占用</span></span>
<span id="cb9-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getent</span> passwd <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_UID</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span>/dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb9-16">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"错误：UID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_UID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 已被占用"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-17">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb9-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb9-19"></span>
<span id="cb9-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getent</span> group <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_GID</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span>/dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb9-21">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"错误：GID </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_GID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> 不存在，请先创建组"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-22">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb9-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb9-24"></span>
<span id="cb9-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 创建用户</span></span>
<span id="cb9-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">useradd</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> /data/home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USERNAME</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_UID</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_GID</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> /bin/bash <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USERNAME</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb9-30"></span>
<span id="cb9-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 设置初始密码</span></span>
<span id="cb9-32"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"设置初始密码..."</span></span>
<span id="cb9-33"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USERNAME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:xxx"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">chpasswd</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb9-34">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"密码设置失败！"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb9-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb9-36"></span>
<span id="cb9-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 强制首次修改密码</span></span>
<span id="cb9-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#chage -d 0 $USERNAME  # [1,5](@ref)</span></span>
<span id="cb9-39"></span>
<span id="cb9-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 设置管理员权限</span></span>
<span id="cb9-41"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$IS_ADMIN</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yes"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb9-42">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usermod</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aG</span> sudo <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USERNAME</span></span>
<span id="cb9-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb9-44"></span>
<span id="cb9-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 验证信息</span></span>
<span id="cb9-46"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"用户创建成功！"</span></span>
<span id="cb9-47"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"用户名: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USERNAME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> | UID: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_UID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> | GID: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CUSTOM_GID</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-48"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"家目录: /data/home/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$USERNAME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>Linux</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2025-07-08-slurm-manage/</guid>
  <pubDate>Mon, 07 Jul 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>理解 lmer(Reaction ~ Days + (Days | Subject), sleepstudy)</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-06-11-lmer/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>大部分信息来自于 Kimi AI</p>
</blockquote>
<p>User: 怎么理解r中的公式语法：lmer(Reaction ~ Days + (Days | Subject), sleepstudy)</p>
<p>Kimi:</p>
<ol type="1">
<li><strong>首先整体理解公式结构</strong>
<ul>
<li>这是一个用于线性混合效应模型（linear mixed - effects model）的公式，格式为<code>lmer (固定效应部分 + 随机效应部分, 数据集)</code>。</li>
<li>在这个例子<code>lmer (Reaction ~ Days + (Days | Subject), sleepstudy)</code>中，“Reaction”是因变量，它被建模为“Days”这个固定效应变量以及“Subject”这个随机效应变量的函数。</li>
</ul></li>
<li><strong>固定效应部分（Reaction ~ Days）</strong>
<ul>
<li>固定效应是指我们假设其对因变量的影响在所有个体或群体中是相同的。这里“Days”是固定效应变量，表示我们关注随着天数的增加，反应时间（Reaction）如何变化。模型会估计一个整体的回归系数来描述“Days”对“Reaction”的影响，这个系数被认为在总体中是一个固定的值，不会因不同的个体（在这个数据中是不同的受试者）而改变。</li>
</ul></li>
<li><strong>随机效应部分（(Days | Subject)）</strong>
<ul>
<li>随机效应部分是用来考虑个体差异的。这里的“Subject”是随机效应变量，表示每个受试者（Subject）可能会有不同的反应模式。</li>
<li><code>(Days | Subject)</code>表示允许每个受试者（Subject）都有自己的截距（当 Days = 0 时的反应时间）和斜率（反应时间随天数变化的速率）。具体来说：
<ul>
<li>截距在这里代表的是每个受试者在研究开始时（假设 Days = 0 是研究的起始点）的反应时间。由于个体差异，不同受试者在研究开始时的反应时间可能不同。</li>
<li>斜率代表的是每个受试者反应时间随天数变化的趋势。例如，有些受试者可能随着天数增加反应时间增长较快，而有些可能增长较慢或者甚至减少。</li>
</ul></li>
<li>同时，这种写法还会估计截距和斜率之间的协方差。也就是说，模型会考虑受试者初始反应时间和反应时间随天数变化速率之间的相关性。比如，可能初始反应时间较高的受试者，其反应时间随天数增加的速率也较高，这就会有正的协方差。</li>
</ul></li>
<li><strong>数据集（sleepstudy）</strong>
<ul>
<li><code>sleepstudy</code>数据集就是包含因变量“Reaction”（反应时间）、自变量“Days”（天数）以及随机效应因素“Subject”（受试者）等信息的数据集。模型是基于这个数据集来拟合参数，从而研究反应时间如何随天数变化以及考虑不同受试者的个体差异。</li>
</ul></li>
</ol>
<p>通过这种公式的设定，线性混合效应模型能够同时处理固定效应和随机效应，更准确地分析数据中包含的群体趋势和个体差异。</p>
<p>User: 怎么仔细理解 Days | Subject</p>
<p>Kimi: 在 R 的公式语法中，<code>(Days | Subject)</code> 是用于指定随机效应（random effects）的关键部分，特别是在线性混合效应模型（linear mixed-effects model）中。下面将详细解释 <code>(Days | Subject)</code> 的含义以及它在模型中的作用。</p>
<section id="基本含义" class="level3">
<h3 class="anchored" data-anchor-id="基本含义">1. <strong>基本含义</strong></h3>
<p><code>(Days | Subject)</code> 表示 <strong>随机斜率和随机截距</strong> 的组合，允许每个 <code>Subject</code>（受试者）有自己独立的截距和斜率。具体来说：</p>
<ul>
<li><strong>随机截距</strong>：每个 <code>Subject</code> 在 <code>Days = 0</code> 时的反应时间（Reaction）可以不同。</li>
<li><strong>随机斜率</strong>：每个 <code>Subject</code> 的反应时间随 <code>Days</code> 变化的速率可以不同。</li>
</ul>
</section>
<section id="公式结构" class="level3">
<h3 class="anchored" data-anchor-id="公式结构">2. <strong>公式结构</strong></h3>
<p>假设模型公式为：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span></code></pre></div>
<ul>
<li><p><strong>固定效应部分</strong>：<code>Reaction ~ Days</code><br>
这部分表示整体的固定效应，即 <code>Days</code> 对 <code>Reaction</code> 的平均影响（所有受试者的总体趋势）。</p></li>
<li><p><strong>随机效应部分</strong>：<code>(Days | Subject)</code><br>
这部分表示随机效应，允许每个 <code>Subject</code> 的截距和斜率围绕固定效应的平均值进行变化。</p></li>
</ul>
</section>
<section id="数学表达" class="level3">
<h3 class="anchored" data-anchor-id="数学表达">3. <strong>数学表达</strong></h3>
<p>公式 <code>(Days | Subject)</code> 对应的数学模型可以表示为：</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_%7Bij%7D%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20%5Ccdot%20%5Ctext%7BDays%7D_%7Bij%7D%20+%20b_%7B0i%7D%20+%20b_%7B1i%7D%20%5Ccdot%20%5Ctext%7BDays%7D_%7Bij%7D%20+%20%5Cepsilon_%7Bij%7D%0A"></p>
<p>其中：</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?y_%7Bij%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?i"> 个 <code>Subject</code> 在第 <img src="https://latex.codecogs.com/png.latex?j"> 天的反应时间。</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cbeta_0"> 是固定截距（所有受试者的平均初始反应时间）。</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> 是固定斜率（所有受试者的平均反应时间随天数的变化速率）。</li>
<li><img src="https://latex.codecogs.com/png.latex?b_%7B0i%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?i"> 个 <code>Subject</code> 的随机截距（偏离固定截距的部分）。</li>
<li><img src="https://latex.codecogs.com/png.latex?b_%7B1i%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?i"> 个 <code>Subject</code> 的随机斜率（偏离固定斜率的部分）。</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cepsilon_%7Bij%7D"> 是残差误差。</li>
</ul>
</section>
<section id="随机截距和斜率的协方差" class="level3">
<h3 class="anchored" data-anchor-id="随机截距和斜率的协方差">4. <strong>随机截距和斜率的协方差</strong></h3>
<p><code>(Days | Subject)</code> 还会估计 <strong>随机截距和随机斜率之间的协方差</strong>。这意味着： - 如果某个受试者的初始反应时间较高（随机截较大距），其反应时间随天数的变化速率（随机斜率）可能也会较高（正相关）。 - 或者可能相反（负相关）。</p>
<p>协方差矩阵的形式为： <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctext%7BVar%7D(b_%7B0i%7D)%20&amp;%20%5Ctext%7BCov%7D(b_%7B0i%7D,%20b_%7B1i%7D)%20%5C%5C%0A%5Ctext%7BCov%7D(b_%7B0i%7D,%20b_%7B1i%7D)%20&amp;%20%5Ctext%7BVar%7D(b_%7B1i%7D)%0A%5Cend%7Bbmatrix%7D%0A"></p>
</section>
<section id="为什么需要-days-subject" class="level3">
<h3 class="anchored" data-anchor-id="为什么需要-days-subject">5. <strong>为什么需要 <code>(Days | Subject)</code>？</strong></h3>
<ul>
<li><strong>个体差异</strong>：不同受试者可能有不同的初始状态（随机截距）和变化趋势（随机斜率）。</li>
<li><strong>数据结构</strong>：数据是分组的（每个 <code>Subject</code> 有多天的观测值），需要建模组内相关性。</li>
<li><strong>更准确的推断</strong>：随机效应可以减少模型对固定效应的过度依赖，提高估计的准确性。</li>
</ul>
</section>
<section id="代码实现和输出解释" class="level3">
<h3 class="anchored" data-anchor-id="代码实现和输出解释">6. <strong>代码实现和输出解释</strong></h3>
<p>运行以下代码：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lme4)</span>
<span id="cb2-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(model)</span></code></pre></div>
<p>输出中会包含：</p>
<ul>
<li><p><strong>随机效应部分</strong>：</p>
<pre><code>Random effects:
Groups   Name        Variance Std.Dev. Corr
Subject  (Intercept) 612.07   24.740       
        Days          32.68    5.717   0.07
Residual             653.86   25.571       </code></pre>
<ul>
<li><code>Variance</code> 和 <code>Std.Dev.</code> 分别是随机截距和随机斜率的方差及其标准差。</li>
<li><code>Corr</code> 是随机截距和随机斜率之间的相关性（协方差）。</li>
</ul></li>
<li><p><strong>固定效应部分</strong>：</p>
<pre><code>Fixed effects:
            Estimate Std. Error df t value Pr(&gt;|t|)    
(Intercept)  251.405      6.825 17  36.838  &lt; 2e-16 ***
Days          10.467      1.546 17   6.771 3.58e-06 ***</code></pre>
<ul>
<li><code>Estimate</code> 是固定截距和固定斜率的估计值。</li>
</ul></li>
</ul>
</section>
<section id="简化模型" class="level3">
<h3 class="anchored" data-anchor-id="简化模型">7. <strong>简化模型</strong></h3>
<p>如果只需要随机截距（固定斜率），可以写成：</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span></code></pre></div>
<p>此时只允许每个 <code>Subject</code> 有自己的截距，但斜率统一为固定效应的斜率。</p>
</section>
<section id="总结" class="level3">
<h3 class="anchored" data-anchor-id="总结">8. <strong>总结</strong></h3>
<p><code>(Days | Subject)</code> 的作用是： 1. 允许每个 <code>Subject</code> 有自己的随机截距和随机斜率。 2. 估计随机截距和随机斜率之间的协方差。 3. 建模个体差异，提高模型的准确性和合理性。</p>
<p>这种语法是线性混合效应模型的核心，能够处理分组数据中的复杂相关性。</p>
<p>User: Days | Subject 前者是斜率，后者是截距吗？</p>
<p>Kimi: <code>(Days | Subject)</code> 这种语法并不直接表示“前者是斜率，后者是截距”，而是表示随机效应的结构。具体来说：</p>
</section>
<section id="随机截距和随机斜率的组合" class="level3">
<h3 class="anchored" data-anchor-id="随机截距和随机斜率的组合">1. <strong>随机截距和随机斜率的组合</strong></h3>
<ul>
<li><strong>随机截距</strong>：每个 <code>Subject</code> 在 <code>Days = 0</code> 时的反应时间可以不同。</li>
<li><strong>随机斜率</strong>：每个 <code>Subject</code> 的反应时间随 <code>Days</code> 变化的速率可以不同。</li>
</ul>
</section>
<section id="随机效应的含义" class="level3">
<h3 class="anchored" data-anchor-id="随机效应的含义">2. <strong>随机效应的含义</strong></h3>
<ul>
<li><code>(Days | Subject)</code> 允许每个 <code>Subject</code> 拥有自己独立的截距和斜率。这意味着模型会为每个 <code>Subject</code> 估计一个随机截距和一个随机斜率，这些随机效应会围绕固定效应的平均值进行变化。</li>
</ul>
</section>
<section id="数学表达-1" class="level3">
<h3 class="anchored" data-anchor-id="数学表达-1">3. <strong>数学表达</strong></h3>
<p>在模型中，假设反应时间 <code>Reaction</code> 是 <code>Days</code> 的函数，并且每个 <code>Subject</code> 有不同的截距和斜率： <img src="https://latex.codecogs.com/png.latex?%0Ay_%7Bij%7D%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20%5Ccdot%20%5Ctext%7BDays%7D_%7Bij%7D%20+%20b_%7B0i%7D%20+%20b_%7B1i%7D%20%5Ccdot%20%5Ctext%7BDays%7D_%7Bij%7D%20+%20%5Cepsilon_%7Bij%7D%0A"></p>
<p>其中：</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cbeta_0"> 是固定截距（所有受试者的平均初始反应时间）。</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> 是固定斜率（所有受试者的平均反应时间随天数的变化速率）。</li>
<li><img src="https://latex.codecogs.com/png.latex?b_%7B0i%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?i"> 个 <code>Subject</code> 的随机截距。</li>
<li><img src="https://latex.codecogs.com/png.latex?b_%7B1i%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?i"> 个 <code>Subject</code> 的随机斜率。</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cepsilon_%7Bij%7D"> 是残差误差。</li>
</ul>
</section>
<section id="随机截距和随机斜率的协方差" class="level3">
<h3 class="anchored" data-anchor-id="随机截距和随机斜率的协方差">4. <strong>随机截距和随机斜率的协方差</strong></h3>
<p><code>(Days | Subject)</code> 还会估计随机截距和随机斜率之间的协方差。这意味着： - 如果某个受试者的初始反应时间较高（随机截距较大），其反应时间随天数的变化速率（随机斜率）可能也会较高（正相关）。 - 或者可能相反（负相关）。</p>
<p>协方差矩阵的形式为： <img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctext%7BVar%7D(b_%7B0i%7D)%20&amp;%20%5Ctext%7BCov%7D(b_%7B0i%7D,%20b_%7B1i%7D)%20%5C%5C%0A%5Ctext%7BCov%7D(b_%7B0i%7D,%20b_%7B1i%7D)%20&amp;%20%5Ctext%7BVar%7D(b_%7B1i%7D)%0A%5Cend%7Bbmatrix%7D%0A"></p>
</section>
<section id="简化模型-1" class="level3">
<h3 class="anchored" data-anchor-id="简化模型-1">5. <strong>简化模型</strong></h3>
<p>如果你只需要随机截距（固定斜率），可以写成：</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span></code></pre></div>
<p>此时只允许每个 <code>Subject</code> 有自己的截距，但斜率统一为固定效应的斜率。</p>
</section>
<section id="总结-1" class="level3">
<h3 class="anchored" data-anchor-id="总结-1">6. <strong>总结</strong></h3>
<p><code>(Days | Subject)</code> 的作用是： 1. 允许每个 <code>Subject</code> 有自己的随机截距和随机斜率。 2. 估计随机截距和随机斜率之间的协方差。 3. 建模个体差异，提高模型的准确性和合理性。</p>
<p>这种语法是线性混合效应模型的核心，能够处理分组数据中的复杂相关性。</p>
<p>User: 那 (Days | Subject) 和 (Subject | Days) 有什么区别</p>
<p>Kimi: 在 R 的公式语法中，<code>(Days | Subject)</code> 和 <code>(Subject | Days)</code> 是不同的，它们在模型中的含义和作用也不同。下面详细解释两者的区别。</p>
</section>
<section id="days-subject" class="level3">
<h3 class="anchored" data-anchor-id="days-subject">1. <strong><code>(Days | Subject)</code></strong></h3>
<section id="含义" class="level4">
<h4 class="anchored" data-anchor-id="含义">含义</h4>
<ul>
<li><strong>随机效应结构</strong>：<code>(Days | Subject)</code> 表示为每个 <code>Subject</code>（受试者）估计一个随机截距和一个随机斜率，其中斜率是关于 <code>Days</code> 的。</li>
<li><strong>允许变化</strong>：允许每个 <code>Subject</code> 的反应时间随 <code>Days</code> 的变化速率不同。</li>
</ul>
</section>
<section id="数学表达-2" class="level4">
<h4 class="anchored" data-anchor-id="数学表达-2">数学表达</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_%7Bij%7D%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20%5Ccdot%20%5Ctext%7BDays%7D_%7Bij%7D%20+%20b_%7B0i%7D%20+%20b_%7B1i%7D%20%5Ccdot%20%5Ctext%7BDays%7D_%7Bij%7D%20+%20%5Cepsilon_%7Bij%7D%0A"> 其中： - <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0"> 是固定截距。 - <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> 是固定斜率。 - <img src="https://latex.codecogs.com/png.latex?b_%7B0i%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?i"> 个 <code>Subject</code> 的随机截距。 - <img src="https://latex.codecogs.com/png.latex?b_%7B1i%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?i"> 个 <code>Subject</code> 的随机斜率。 - <img src="https://latex.codecogs.com/png.latex?%5Cepsilon_%7Bij%7D"> 是残差误差。</p>
</section>
</section>
<section id="subject-days" class="level3">
<h3 class="anchored" data-anchor-id="subject-days">2. <strong><code>(Subject | Days)</code></strong></h3>
<section id="含义-1" class="level4">
<h4 class="anchored" data-anchor-id="含义-1">含义</h4>
<ul>
<li><strong>随机效应结构</strong>：<code>(Subject | Days)</code> 表示为每个 <code>Days</code> 估计一个随机截距和一个随机斜率，其中斜率是关于 <code>Subject</code> 的。</li>
<li><strong>允许变化</strong>：允许每个 <code>Days</code> 的反应时间随 <code>Subject</code> 的变化不同。这种结构在大多数情况下是没有意义的，因为 <code>Days</code> 通常是连续变量，而不是分组变量。</li>
</ul>
</section>
<section id="数学表达-3" class="level4">
<h4 class="anchored" data-anchor-id="数学表达-3">数学表达</h4>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_%7Bij%7D%20=%20%5Cbeta_0%20+%20%5Cbeta_1%20%5Ccdot%20%5Ctext%7BSubject%7D_%7Bij%7D%20+%20b_%7B0j%7D%20+%20b_%7B1j%7D%20%5Ccdot%20%5Ctext%7BSubject%7D_%7Bij%7D%20+%20%5Cepsilon_%7Bij%7D%0A"></p>
<p>其中：</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cbeta_0"> 是固定截距。</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> 是固定斜率。</li>
<li><img src="https://latex.codecogs.com/png.latex?b_%7B0j%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?j"> 个 <code>Days</code> 的随机截距。</li>
<li><img src="https://latex.codecogs.com/png.latex?b_%7B1j%7D"> 是第 <img src="https://latex.codecogs.com/png.latex?j"> 个 <code>Days</code> 的随机斜率。</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cepsilon_%7Bij%7D"> 是残差误差。</li>
</ul>
</section>
</section>
<section id="区别" class="level3">
<h3 class="anchored" data-anchor-id="区别">3. <strong>区别</strong></h3>
<section id="分组变量不同" class="level4">
<h4 class="anchored" data-anchor-id="分组变量不同">1. <strong>分组变量不同</strong></h4>
<ul>
<li><strong><code>(Days | Subject)</code></strong>：
<ul>
<li>分组变量是 <code>Subject</code>，表示每个 <code>Subject</code> 是一个独立的组。</li>
<li>适用于 <code>Subject</code> 是分组变量的情况，例如不同的受试者或个体。</li>
</ul></li>
<li><strong><code>(Subject | Days)</code></strong>：
<ul>
<li>分组变量是 <code>Days</code>，表示每个 <code>Days</code> 是一个独立的组。</li>
<li>通常不适用，因为 <code>Days</code> 是连续变量，而不是分组变量。</li>
</ul></li>
</ul>
</section>
<section id="模型结构不同" class="level4">
<h4 class="anchored" data-anchor-id="模型结构不同">2. <strong>模型结构不同</strong></h4>
<ul>
<li><strong><code>(Days | Subject)</code></strong>：
<ul>
<li>为每个 <code>Subject</code> 估计一个随机截距和一个随机斜率（关于 <code>Days</code>）。</li>
<li>适用于建模个体差异，例如每个受试者的初始反应时间和反应时间变化速率。</li>
</ul></li>
<li><strong><code>(Subject | Days)</code></strong>：
<ul>
<li>为每个 <code>Days</code> 估计一个随机截距和一个随机斜率（关于 <code>Subject</code>）。</li>
<li>通常没有实际意义，因为 <code>Days</code> 是连续变量，每个 <code>Days</code> 的随机效应会导致模型过于复杂且难以解释。</li>
</ul></li>
</ul>
</section>
<section id="实际应用不同" class="level4">
<h4 class="anchored" data-anchor-id="实际应用不同">3. <strong>实际应用不同</strong></h4>
<ul>
<li><strong><code>(Days | Subject)</code></strong>：
<ul>
<li>常用于建模个体差异，例如在纵向研究中，每个受试者的反应时间随时间的变化。</li>
<li>是常见的随机效应结构，适用于大多数分组数据。</li>
</ul></li>
<li><strong><code>(Subject | Days)</code></strong>：
<ul>
<li>实际应用中很少见，因为 <code>Days</code> 通常是连续变量，而不是分组变量。</li>
<li>如果 <code>Days</code> 是离散的（例如，特定的天数），可以考虑使用，但在大多数情况下不适用。</li>
</ul></li>
</ul>
</section>
</section>
<section id="示例" class="level3">
<h3 class="anchored" data-anchor-id="示例">4. <strong>示例</strong></h3>
<section id="days-subject-1" class="level4">
<h4 class="anchored" data-anchor-id="days-subject-1"><strong><code>(Days | Subject)</code></strong></h4>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lme4)</span>
<span id="cb7-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Subject), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span></code></pre></div>
<ul>
<li><strong>解释</strong>：每个 <code>Subject</code> 有一个随机截距和一个随机斜率，允许每个受试者的反应时间随 <code>Days</code> 的变化不同。</li>
</ul>
</section>
<section id="subject-days-1" class="level4">
<h4 class="anchored" data-anchor-id="subject-days-1"><strong><code>(Subject | Days)</code></strong></h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(lme4)</span>
<span id="cb8-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lmer</span>(Reaction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Days <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (Subject <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> Days), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sleepstudy)</span></code></pre></div>
<ul>
<li><strong>解释</strong>：为每个 <code>Days</code> 估计一个随机截距和一个随机斜率，关于 <code>Subject</code>。这种模型通常不适用，因为 <code>Days</code> 是连续变量，且每个 <code>Days</code> 的随机效应会导致模型过于复杂。</li>
</ul>
</section>
</section>
<section id="总结-2" class="level3">
<h3 class="anchored" data-anchor-id="总结-2">5. <strong>总结</strong></h3>
<ul>
<li><strong><code>(Days | Subject)</code></strong>：适用于分组变量 <code>Subject</code>，为每个受试者估计随机截距和随机斜率。</li>
<li><strong><code>(Subject | Days)</code></strong>：通常不适用，因为 <code>Days</code> 是连续变量，导致模型复杂且难以解释。</li>
</ul>
<p>在实际应用中，<code>(Days | Subject)</code> 是更常见的随机效应结构，用于建模个体差异。</p>
<p>User: 深度神经网络学习是不是没办法引入这种随机效应term？</p>
<p>Kimi: 深度神经网络可以引入类似随机效应项的机制，以下是一些常见的方法：</p>
</section>
<section id="dropout" class="level3">
<h3 class="anchored" data-anchor-id="dropout">Dropout</h3>
<ul>
<li><strong>原理</strong>：在训练过程中随机丢弃某些神经元的输出，使网络在每次迭代时都以不同的结构进行训练，增加了模型的随机性，从而提高其泛化能力。</li>
<li><strong>适用场景</strong>：广泛应用于各种类型的神经网络，如全连接网络、卷积神经网络等，尤其是在网络较深、参数较多、容易过拟合的情况下效果显著。</li>
</ul>
</section>
<section id="随机梯度估计" class="level3">
<h3 class="anchored" data-anchor-id="随机梯度估计">随机梯度估计</h3>
<ul>
<li><strong>原理</strong>：在优化过程中使用随机梯度估计方法，如随机梯度下降（SGD），而不是完整的批量梯度下降。每次迭代只使用一部分样本计算梯度，引入了随机性，使模型能够更快地收敛，并且有助于跳出局部最优。</li>
<li><strong>适用场景</strong>：适用于大规模数据集的训练，尤其是在计算资源有限的情况下，能够有效提高训练效率。</li>
</ul>
</section>
<section id="噪声注入" class="level3">
<h3 class="anchored" data-anchor-id="噪声注入">噪声注入</h3>
<ul>
<li><strong>原理</strong>：在数据或模型的权重中注入随机噪声，例如在输入数据中添加高斯噪声，或者在权重更新时加入噪声项。这可以模拟数据中的不确定性，增强模型对噪声的鲁棒性。</li>
<li><strong>适用场景</strong>：适用于数据存在噪声或模型需要对噪声具有较高鲁棒性的场景，如图像识别中的抗噪性训练。</li>
</ul>
</section>
<section id="随机池化" class="level3">
<h3 class="anchored" data-anchor-id="随机池化">随机池化</h3>
<ul>
<li><strong>原理</strong>：在池化操作中引入随机性，例如随机选择池化窗口中的位置进行池化，而不是采用固定的池化方式。这样可以增加模型的随机性和多样性。</li>
<li><strong>适用场景</strong>：主要用于卷积神经网络的池化层，能够提高模型对特征位置的不敏感性。</li>
</ul>
</section>
<section id="随机注意力机制" class="level3">
<h3 class="anchored" data-anchor-id="随机注意力机制">随机注意力机制</h3>
<ul>
<li><strong>原理</strong>：在注意力机制中引入随机性，例如随机选择注意力头或者随机调整注意力权重。这可以使模型在训练过程中探索不同的注意力分布，增强其泛化能力。</li>
<li><strong>适用场景</strong>：适用于自然语言处理任务中的序列建模，如机器翻译、文本生成等。</li>
</ul>
</section>
<section id="层级似然学习框架" class="level3">
<h3 class="anchored" data-anchor-id="层级似然学习框架">层级似然学习框架</h3>
<ul>
<li><strong>原理</strong>：通过构建层级似然学习框架，将随机效应引入深度神经网络。例如，将高基数分类特征视为随机效应变量，并采用线性混合模型中的负对数似然损失函数，将其整合到深度学习框架中，从而实现对随机效应的建模。</li>
<li><strong>适用场景</strong>：适用于处理具有高基数分类特征的数据，如聚类计数数据、重复测量数据等。</li>
</ul>
</section>
<section id="动态网络结构" class="level3">
<h3 class="anchored" data-anchor-id="动态网络结构">动态网络结构</h3>
<ul>
<li><strong>原理</strong>：设计动态的网络结构，使网络在每次前向传播时随机选择不同的路径或层进行计算。例如，使用随机深度网络（Stochastic Depth），在训练过程中随机丢弃一些层，从而增加模型的随机性和多样性。</li>
<li><strong>适用场景</strong>：适用于构建更深的神经网络，能够在不显著增加计算成本的情况下提高模型的性能。</li>
</ul>
</section>
<section id="模型集成" class="level3">
<h3 class="anchored" data-anchor-id="模型集成">模型集成</h3>
<ul>
<li><strong>原理</strong>：通过集成多个不同的深度神经网络模型，利用每个模型的随机性和多样性来提高整体的泛化能力。例如，使用随机森林的方法训练多个神经网络，并将它们的预测结果进行平均或投票。</li>
<li><strong>适用场景</strong>：适用于需要高精度预测的场景，如医学图像诊断、金融风险预测等。</li>
</ul>


</section>

 ]]></description>
  <category>stats</category>
  <category>AI</category>
  <guid>https://shixiangwang.github.io/posts/2025-06-11-lmer/</guid>
  <pubDate>Tue, 10 Jun 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>开源之夏：生物医学可视化开源图鉴Bizard项目拓展</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-04-28-ospp-bizard-openbiox/</link>
  <description><![CDATA[ 





<p>又是一年开源之夏项目（https://summer-ospp.ac.cn/）到了，今年我们基于 Bizard 项目依托 Openbiox 社区进行了项目申请，目前已经通过组委会的审核正式发布。欢迎感兴趣且有空（项目的主要执行期在暑假期间）的<strong>在校同学</strong>了解和参与报名！在初步写好申请书之后可以联系导师沟通交流，项目申请最后会筛选出一位实际中选人。</p>
<p><img src="https://weekly-1301043367.cos.ap-shanghai.myqcloud.com/20250427234023588.png" class="img-fluid"></p>
<section id="项目简述" class="level2">
<h2 class="anchored" data-anchor-id="项目简述">项目简述</h2>
<ul>
<li>项目编号：2551d0158</li>
<li>官方发布地址: https://summer-ospp.ac.cn/org/prodetail/2551d0158?list=org&amp;navpage=org</li>
<li>导师联系邮箱: shixiang1994wang@gmail.com （王诗翔）</li>
<li>技术领域：Programming Language, Data Science, Scientific Computing</li>
<li>编程语言：R</li>
<li>开源协议：Apache</li>
</ul>
<p>可视化图形作为连接数据与知识的桥梁，是探寻自然客观规律、挖掘和解释科学发现的重要媒介。在当今数据驱动的生物医学研究时代，利用数据可视化相关的编程语言、图形化交互平台或其他人工智能技术完成各类数据挖掘任务已成为生物医学领域研究人员的核心技能之一。</p>
<p>目前，指令式数据分析软件包、图形界面软件以及云平台已逐渐成为提升科学研究效率的重要基础设施。如何进一步提高生物医学数据分析相关研究的重复性是科学社区面临的重要挑战之一。另外一方面，对于众多生物医学研究的初学者而言，编程语言、绘图工具的学习曲线陡峭，特别是在将编程代码应用于实际科学研究场景时往往四处碰壁，大量有用有益的指南手册、编程语言函数或示例散落在互联网各处，仍未被充分整合利用、验证和推广。为此，我们发起 <strong>Bizard 白泽项目（https://github.com/openbiox/Bizard），旨在搭建协作组主导、社区参与的生物医学可视化开源项目</strong>，为学习、利用和讨论数据可视化、促进可视化数据分析相关软件开发提供一体化的平台和协作社区，希望构建国内/国际别树一帜的生物信息学基础设施。</p>
<section id="项目产出要求" class="level3">
<h3 class="anchored" data-anchor-id="项目产出要求">项目产出要求</h3>
<ol type="1">
<li>按照 Bizard 项目文档要求，使用 Quarto 文档（https://quarto.org/）完成 50-100 个 Hiplot 插件的开源可视化教程撰写【Hiplot (org)图表整理https://kdocs.cn/l/cvqDqGQBQL25 】；</li>
<li>进行 Bizard 项目网站的优化（https://openbiox.github.io/Bizard/），增强教程文档的展示效果和易用性；</li>
<li>整理/构建10-20个生物医学领域常用的/精简数据集，方便可视化探索和教程撰写。</li>
</ol>
</section>
<section id="项目技术要求" class="level3">
<h3 class="anchored" data-anchor-id="项目技术要求">项目技术要求</h3>
<ol type="1">
<li>熟悉 R 语言基础操作，可以独立完成 R 语言函数的编写和调试；</li>
<li>熟练使用 Git/GitHub 等代码管理软件和协作开发平台；</li>
<li>有数据和计算科学相关学科背景优先；</li>
<li>有可视化相关开源项目开发经验优先。</li>
</ol>
</section>
<section id="项目成果仓库" class="level3">
<h3 class="anchored" data-anchor-id="项目成果仓库">项目成果仓库</h3>
<ul>
<li>https://github.com/openbiox/Bizard</li>
</ul>
</section>
</section>
<section id="开源之夏活动流程" class="level2">
<h2 class="anchored" data-anchor-id="开源之夏活动流程">开源之夏活动流程</h2>
<p>学生需要通过 https://summer-ospp.ac.cn/ 进行学生注册和登录。</p>
<p><img src="https://weekly-1301043367.cos.ap-shanghai.myqcloud.com/20250427223608315.png" class="img-fluid"></p>
</section>
<section id="一些历史资料" class="level2">
<h2 class="anchored" data-anchor-id="一些历史资料">一些历史资料</h2>
<ol type="1">
<li>癌症多组学数据挖掘软件 UCSCXenaShiny v2.0 开发项目申请书：https://summer-ospp.ac.cn/2023/previewPdf/1975</li>
<li>Openbiox 2023 开源之夏项目中选公示：https://mp.weixin.qq.com/s/kUFixYFDaynYzIWxb3pSFw</li>
<li>OSPP | 癌症多组学数据挖掘软件 UCSCXenaShiny 2.0 项目结项报告：https://mp.weixin.qq.com/s/W52xfBA1aH9ZFWDdxYEgYg</li>
<li>项目经验分享｜Openbiox 社区李申锁 ：开源 shiny 网页玩转生信数据分析：https://mp.weixin.qq.com/s/R1MEkgPZD32mpzg-VBK2UQ</li>
<li>王诗翔/周建国/陈素君联合团队研发肿瘤公共多组学交互式分析工具UCSCXenaShiny新版本：https://mp.weixin.qq.com/s/YM0xEXywjNFx9iZMZaO9mA</li>
</ol>


</section>

 ]]></description>
  <category>Bizard</category>
  <guid>https://shixiangwang.github.io/posts/2025-04-28-ospp-bizard-openbiox/</guid>
  <pubDate>Sun, 27 Apr 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Mendelian randomization 和 GWAS</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-04-15-mendelian-randomization-and-gwas/</link>
  <description><![CDATA[ 





<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
提问
</div>
</div>
<div class="callout-body-container callout-body">
<p>孟德尔随机化与gwas区别</p>
</div>
</div>
<section id="孟德尔随机化与全基因组关联分析" class="level2">
<h2 class="anchored" data-anchor-id="孟德尔随机化与全基因组关联分析">孟德尔随机化与全基因组关联分析</h2>
<p>孟德尔随机化（Mendelian Randomization, MR）和全基因组关联分析（Genome-wide association study, GWAS）是两种在遗传流行病学研究中常用的方法，它们在目的、数据来源、分析流程、假设条件、结果解释以及应用场景等方面存在一些区别：</p>
<section id="定义与目的" class="level3">
<h3 class="anchored" data-anchor-id="定义与目的">定义与目的</h3>
<ul>
<li><strong>GWAS</strong>：是一种用于识别与复杂性状（如疾病、性状等）相关的遗传变异的方法。通过对大规模人群进行基因组扫描，GWAS可以发现单核苷酸多态性（SNP）与某一性状的关联。</li>
<li><strong>孟德尔随机化</strong>：是一种利用遗传变异作为工具变量来研究因果关系的方法。它的基本思想是利用随机分配的基因型来消除混杂因素的影响，从而评估某一暴露（如生活方式、饮食习惯等）与结果（如疾病）的因果关系。</li>
</ul>
</section>
<section id="数据来源" class="level3">
<h3 class="anchored" data-anchor-id="数据来源">数据来源</h3>
<ul>
<li><strong>GWAS</strong>：需要大量的样本数据，通常包括病例组和对照组，通过基因分型技术获取个体的基因型数据，并收集相关的表型信息。</li>
<li><strong>孟德尔随机化</strong>：主要依赖于GWAS的结果数据，即已经识别出的与暴露和结果相关的SNP及其关联统计量（如效应大小、P值等）。</li>
</ul>
</section>
<section id="分析流程" class="level3">
<h3 class="anchored" data-anchor-id="分析流程">分析流程</h3>
<ul>
<li><strong>GWAS</strong>：首先对原始数据进行质量控制，包括去除缺失率高的 SNP 和样本、排除偏离哈迪-温伯格平衡的 SNP 等；然后进行关联分析，计算每个 SNP 与表型之间的关联 P 值，并绘制曼哈顿图和 QQ 图等进行可视化。</li>
<li><strong>孟德尔随机化</strong>：首先从 GWAS 数据中挑选工具变量，即与暴露因素强相关的 SNP；然后进行两样本孟德尔随机化分析，利用工具变量估计暴露与结果之间的因果效应，常用的估计方法有逆方差加权法、MR Egger 回归法等。</li>
</ul>
</section>
<section id="假设条件" class="level3">
<h3 class="anchored" data-anchor-id="假设条件">假设条件</h3>
<ul>
<li><strong>GWAS</strong>：主要假设是基因型与表型之间存在关联，且这种关联在统计学上是显著的。</li>
<li><strong>孟德尔随机化</strong>：需要满足三大假设，即关联性假设（SNP 与暴露因素之间是强相关的）、独立性假设（SNP 与混杂因素之间是独立的）和排他性假设（SNP 只能通过暴露因素对结局产生作用）。</li>
</ul>
</section>
<section id="结果解释" class="level3">
<h3 class="anchored" data-anchor-id="结果解释">结果解释</h3>
<ul>
<li><strong>GWAS</strong>：结果表明某个 SNP 与某个性状存在关联，但这种关联并不一定是因果关系，可能受到混杂因素和反向因果关系的影响。</li>
<li><strong>孟德尔随机化</strong>：结果可以推断暴露因素与结果之间是否存在因果关系，以及因果效应的大小和方向，为后续的干预研究和政策制定提供依据。</li>
</ul>
</section>
<section id="应用场景" class="level3">
<h3 class="anchored" data-anchor-id="应用场景">应用场景</h3>
<ul>
<li><strong>GWAS</strong>：适用于探索性研究，用于发现与复杂性状相关的遗传变异，为后续的功能研究和机制探讨提供线索。</li>
<li><strong>孟德尔随机化</strong>：适用于在观察性研究中评估因果关系，特别是在无法进行随机对照试验的情况下，如评估生活方式、环境暴露等因素对疾病的影响。</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
提问
</div>
</div>
<div class="callout-body-container callout-body">
<p>能形象地介绍孟德尔随机化并举例么</p>
</div>
</div>
<p>孟德尔随机化（Mendelian Randomization, MR）是一种利用遗传变异作为工具变量的方法，用于评估暴露因素（如生活方式、环境因素等）与结果（如疾病）之间的因果关系。它的核心思想是利用基因的随机分配特性来减少混杂因素的影响，从而更可靠地推断因果关系。下面通过一个形象的比喻和具体例子来解释。</p>
</section>
<section id="形象比喻基因是天生的随机试验" class="level3">
<h3 class="anchored" data-anchor-id="形象比喻基因是天生的随机试验"><strong>形象比喻：基因是“天生的随机试验”</strong></h3>
<p>想象你正在进行一项研究，想弄清楚“喝咖啡是否会导致高血压”。在传统的观察性研究中，你可能会发现喝咖啡多的人更容易得高血压，但这并不一定是因果关系。也许喝咖啡多的人同时有其他习惯（比如吸烟、熬夜），这些习惯才是高血压的真正原因。</p>
<p>孟德尔随机化就像一个“天生的随机试验”。基因在受精卵形成时是随机分配的，这种随机性类似于随机对照试验（RCT）中的随机分组。如果某个基因与喝咖啡的行为相关（比如这个基因让人更喜欢咖啡的味道），那么这个基因就像一个“标签”，可以帮助我们研究喝咖啡与高血压之间的因果关系，而不受其他混杂因素的干扰。</p>
</section>
<section id="具体例子饮酒与心血管疾病" class="level3">
<h3 class="anchored" data-anchor-id="具体例子饮酒与心血管疾病"><strong>具体例子：饮酒与心血管疾病</strong></h3>
<p>假设你想研究“饮酒是否会导致心血管疾病”。传统的观察性研究可能会发现饮酒多的人更容易得心血管疾病，但这可能是由于饮酒者的生活方式（如吸烟、不运动）或其他因素的影响。</p>
<section id="孟德尔随机化的步骤" class="level4">
<h4 class="anchored" data-anchor-id="孟德尔随机化的步骤"><strong>孟德尔随机化的步骤：</strong></h4>
<ol type="1">
<li><strong>找到工具变量</strong>：假设科学家发现了一个基因（比如某个单核苷酸多态性，SNP），这个基因与饮酒行为相关。携带这个基因的人更倾向于饮酒，而这个基因本身与心血管疾病无关（除了通过饮酒间接影响）。</li>
<li><strong>关联分析</strong>：
<ul>
<li>首先，研究这个基因与饮酒行为的关联（工具变量与暴露因素的关联）。</li>
<li>然后，研究这个基因与心血管疾病的关联（工具变量与结果的关联）。</li>
</ul></li>
<li><strong>因果推断</strong>：如果基因与饮酒行为强相关，而基因与心血管疾病也有显著关联，那么可以推断饮酒与心血管疾病之间可能存在因果关系。</li>
</ol>
</section>
<section id="假设条件-1" class="level4">
<h4 class="anchored" data-anchor-id="假设条件-1"><strong>假设条件：</strong></h4>
<ul>
<li><strong>关联性</strong>：基因必须与饮酒行为强相关。</li>
<li><strong>独立性</strong>：基因不能与混杂因素（如吸烟、饮食习惯）相关。</li>
<li><strong>排他性</strong>：基因只能通过饮酒行为影响心血管疾病，而不能通过其他途径（如直接影响胆固醇水平）。</li>
</ul>
</section>
</section>
<section id="总结" class="level3">
<h3 class="anchored" data-anchor-id="总结"><strong>总结：</strong></h3>
<p>孟德尔随机化就像一个“天然的实验设计”，通过利用基因的随机分配特性，帮助我们更准确地评估因果关系，避免传统观察性研究中混杂因素的干扰。它特别适用于那些无法进行随机对照试验的情况（如研究生活方式或环境暴露对健康的影响）。</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
提问
</div>
</div>
<div class="callout-body-container callout-body">
<p>在你的例子中，开始说 基因本身与心血管疾病无关，但关联分析时又需要发现基因与心血管疾病的关联，怎么区分和理解？</p>
</div>
</div>
<p>在孟德尔随机化中，基因与结果（如心血管疾病）的关联是间接的，而不是直接的。这种关联是通过暴露因素（如饮酒行为）实现的。为了更好地理解这一点，我们需要明确孟德尔随机化的三大假设，并结合因果推断的逻辑来解释。</p>
</section>
<section id="基因与结果的关联是间接的" class="level3">
<h3 class="anchored" data-anchor-id="基因与结果的关联是间接的"><strong>1. 基因与结果的关联是间接的</strong></h3>
<ul>
<li><strong>假设条件</strong>：在孟德尔随机化中，工具变量（基因）必须满足以下条件：
<ol type="1">
<li><strong>关联性</strong>：基因必须与暴露因素（如饮酒行为）强相关。</li>
<li><strong>独立性</strong>：基因不能与混杂因素（如吸烟、饮食习惯）相关。</li>
<li><strong>排他性</strong>：基因只能通过暴露因素（饮酒行为）影响结果（心血管疾病），而不能通过其他途径（如直接影响胆固醇水平）。</li>
</ol></li>
<li><strong>关键点</strong>：基因本身并不直接作用于结果（心血管疾病），而是通过暴露因素（饮酒行为）间接影响结果。因此，基因与结果的关联是间接的，而不是直接的。</li>
</ul>
</section>
<section id="如何理解基因与结果的关联" class="level3">
<h3 class="anchored" data-anchor-id="如何理解基因与结果的关联"><strong>2. 如何理解基因与结果的关联</strong></h3>
<p>假设我们发现基因 ( G ) 与饮酒行为强相关（关联性假设成立），并且基因 ( G ) 与心血管疾病也有显著关联。这种关联的出现是因为： - 基因 ( G ) → 饮酒行为 → 心血管疾病</p>
<p>如果基因 ( G ) 与心血管疾病的关联是通过饮酒行为实现的，那么我们可以推断饮酒行为与心血管疾病之间存在因果关系。</p>
</section>
<section id="为什么需要基因与结果的关联" class="level3">
<h3 class="anchored" data-anchor-id="为什么需要基因与结果的关联"><strong>3. 为什么需要基因与结果的关联</strong></h3>
<ul>
<li><p><strong>因果推断的逻辑</strong>：如果基因 ( G ) 与饮酒行为强相关，并且基因 ( G ) 与心血管疾病也有显著关联，那么这种关联只能通过饮酒行为来解释。因为基因 ( G ) 不能直接作用于心血管疾病（排他性假设成立），所以基因与结果的关联必须是通过饮酒行为实现的。</p></li>
<li><p><strong>结论</strong>：基因与结果的关联是因果推断的关键证据。如果基因与结果没有关联，那么即使基因与暴露因素强相关，也无法证明暴露因素对有结果因果作用。</p></li>
</ul>
</section>
<section id="总结基因与结果的关联是间接的" class="level3">
<h3 class="anchored" data-anchor-id="总结基因与结果的关联是间接的"><strong>4. 总结：基因与结果的关联是间接的</strong></h3>
<ul>
<li><strong>基因本身与结果无关</strong>：基因不能直接作用于结果（如心血管疾病），这是排他性假设的核心。</li>
<li><strong>基因与结果的关联是间接的</strong>：基因通过暴露因素（如饮酒行为）间接影响结果，因此基因与结果的关联是因果推断的。</li>
</ul>
</section>
<section id="具体例子饮酒与心血管疾病-1" class="level3">
<h3 class="anchored" data-anchor-id="具体例子饮酒与心血管疾病-1"><strong>具体例子：饮酒与心血管疾病</strong></h3>
<ul>
<li><strong>假设</strong>：
<ul>
<li>基因 ( G ) 与饮酒行为强相关（关联性假设成立）。</li>
<li>基因 ( G ) 与心血管疾病有显著关联（基因与结果的关联）。</li>
<li>基因 ( G ) 不能通过其他途径（如直接影响胆固醇水平）作用于心血管疾病（排他性假设成立）。</li>
</ul></li>
<li><strong>结论</strong>：如果基因 ( G ) 与饮酒行为强相关，并且基因 ( G ) 与心血管疾病也有显著关联，那么可以推断饮酒行为与心血管疾病之间存在因果关系。</li>
</ul>
</section>
<section id="形象比喻桥梁" class="level3">
<h3 class="anchored" data-anchor-id="形象比喻桥梁"><strong>形象比喻：桥梁</strong></h3>
<ul>
<li>想象基因 ( G ) 是一座桥梁的起点，饮酒行为是桥梁本身，心血管疾病是桥梁的终点。基因 ( G ) 不能直接到达终点（心血管疾病），但它可以通过桥梁（饮酒行为）间接影响终点。如果桥梁（饮酒行为）被破坏（例如，通过干预减少饮酒），那么基因 ( G ) 与终点（心血管疾病）的关联也会消失。</li>
</ul>
<p>通过这种方式，孟德尔随机化利用基因的随机分配特性，帮助我们更可靠地评估因果关系，而不受传统观察性研究中混杂因素的干扰。</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
提问
</div>
</div>
<div class="callout-body-container callout-body">
<p>如何在实际分析中满足排他性：基因只能通过暴露因素（饮酒行为）影响结果（心血管疾病），而不能通过其他途径（如直接影响胆固醇水平）。</p>
</div>
</div>
<p>在孟德尔随机化中，确保基因（工具变量）只能通过暴露因素（如饮酒行为）影响结果（如心血管疾病），而不能通过其他途径（如直接影响胆固醇水平），是满足排他性假设的关键。以下是实现这一目标的具体方法和注意事项：</p>
</section>
<section id="选择合适的工具变量" class="level3">
<h3 class="anchored" data-anchor-id="选择合适的工具变量"><strong>1. 选择合适的工具变量</strong></h3>
<ul>
<li><strong>避免多效性</strong>：选择的基因变异应仅与暴露因素（如饮酒行为）相关，而不与其他可能影响结果的途径相关。例如，ALDH2基因变异（影响酒精代谢）是一个常用的工具变量，因为它主要通过改变饮酒行为间接影响心血管疾病，而没有其他已知的途径直接影响心血管健康。</li>
<li><strong>文献回顾</strong>：通过查阅已有的生物学研究和遗传学文献，确保所选基因变异的生物学机制仅通过暴露因素起作用。</li>
</ul>
</section>
<section id="验证排他性假设" class="level3">
<h3 class="anchored" data-anchor-id="验证排他性假设"><strong>2. 验证排他性假设</strong></h3>
<ul>
<li><strong>分层分析</strong>：在某些亚组中验证基因与结果的关联是否仅通过暴露因素实现。例如，在饮酒行为较低的人群（如女性）中，如果基因与结果的关联消失，则说明排他性假设成立。</li>
<li><strong>负向控制分析</strong>：在与暴露因素无关的亚组中进行分析。例如，研究饮酒对心血管疾病的影响时，可以分析基因与结果的关联在不饮酒人群中是否显著。如果不显著，则支持排他性假设。</li>
</ul>
</section>
<section id="敏感性分析" class="level3">
<h3 class="anchored" data-anchor-id="敏感性分析"><strong>3. 敏感性分析</strong></h3>
<ul>
<li><strong>多效性检测</strong>：使用统计方法（如PCMR分析）检测工具变量是否存在水平多效性（即基因通过其他途径影响结果）。如果检测到多效性，可以排除这些变异或调整分析方法。</li>
<li><strong>异质性检验</strong>：通过分析工具变量对结果的异质性，判断是否存在其他潜在路径。</li>
</ul>
</section>
<section id="结合生物学机制" class="level3">
<h3 class="anchored" data-anchor-id="结合生物学机制"><strong>4. 结合生物学机制</strong></h3>
<ul>
<li><strong>生物学验证</strong>：利用已知的生物学机制验证基因变异是否仅通过暴露因素影响结果。例如，ALDH2基因变异通过影响酒精代谢改变饮酒行为，而不会直接影响胆固醇水平或其他心血管疾病风险因素。</li>
</ul>
</section>
<section id="使用多基因评分" class="level3">
<h3 class="anchored" data-anchor-id="使用多基因评分"><strong>5. 使用多基因评分</strong></h3>
<ul>
<li><strong>增强工具变量的关联性</strong>：通过合并多个基因变异（多基因评分），可以增强工具变量与暴露因素的关联性，从而提高分析的统计功效，并减少多效性的影响。</li>
</ul>
</section>
<section id="总结-1" class="level3">
<h3 class="anchored" data-anchor-id="总结-1"><strong>总结</strong></h3>
<p>在实际分析中，满足排他性假设需要综合考虑工具变量的选择、验证方法和生物学机制。通过避免多效性、验证基因与结果的关联是否仅通过暴露因素实现，以及结合敏感性分析，可以提高孟德尔随机化分析的可靠性，从而更准确地推断因果关系。</p>


</section>
</section>

 ]]></description>
  <category>AI</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2025-04-15-mendelian-randomization-and-gwas/</guid>
  <pubDate>Mon, 14 Apr 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Bizard 项目成员招募与说明</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-03-19-bizard-recruit/</link>
  <description><![CDATA[ 





<p>前几天，我们正式官宣了「<a href="https://mp.weixin.qq.com/s/WtcxNFB0NyyZDv0UWhDFcw">Bizard（白泽）：生物医学可视化开源图鉴——一个社区项目的招募与探索</a>」，引发了一些反响，许多朋友和粉丝进行了分享转发，有的朋友提供了项目方向的宝贵建议，有的小伙伴提出了参与的想法，我们也初步邀请了一些老师和公众号参与。这篇推文的目的是就上次未尽之处加以说明，另外也诚挚地邀请符合要求的老师/同学积极参与贡献。</p>
<section id="项目内容与初步目标" class="level2">
<h2 class="anchored" data-anchor-id="项目内容与初步目标">项目内容与初步目标</h2>
<p>项目的初步目标是建立一个基于R的可视化知识库，大体分为3大类：basics, omics, clinics，每类下面按不同的图形绘制分为中英文版本，中英文会在官方网站显示，中文会不断通过公众号推送更新；并不断根据想法和意见迭代更新，基本满足以后生物医学领域研究者的需求（未来也可以作为大语言模型的可靠知识基础）。</p>
</section>
<section id="贡献方式设计" class="level2">
<h2 class="anchored" data-anchor-id="贡献方式设计">贡献方式设计</h2>
<p>招募参与者的工作主要集中在图文教程的撰写和更新补充，其他事务主要由发起人及其学生团队负责，以保障项目的可靠运行。</p>
<p>因此，我们未来考虑系统化梳理需要处理的图文教程，参与者也可以参与补充和设计，然后以自由任务的形式下发通知项目成员，成员根据自己的兴趣、时间安排领取任务和进行处理。 针对一些参与者没有申领的任务，我们也会通过学生团队进行处理完成。</p>
<p>其他包括但不仅限于以下一些贡献类型：提供有效评论/建议；完成图文翻译任务；完成公众号推文编辑审核；提供重要指导意见；负责网站运维更新；负责贡献记录更新；负责推文运维更新。后面几类任务当前考虑由学生团队负责，以更好保证项目推进。</p>
</section>
<section id="贡献记录机制" class="level2">
<h2 class="anchored" data-anchor-id="贡献记录机制">贡献记录机制</h2>
<p>大概以一年为一个周期，记录参与创作者的贡献信息，按<strong>积分制</strong>。积分规则每年根据项目发起人和负责人商量确定。贡献者记录按「GitHub/微信ID/姓名」进行标注。贡献排名靠前者投稿时经讨论纳入共同第一作者，贡献排名靠后者经讨论纳入参与作者或致谢。如果长期提供指导性意见的贡献者经讨论纳入共同通讯作者。在对外宣传和文档记录时，积分排序也将作为主要参考依据。</p>
<p>「提供有效评论/建议」不仅限于项目参与者，在网站/公众号文章下方留言，我们觉得有意就会针对性加分统计！</p>
</section>
<section id="我们期待这样的参与者" class="level2">
<h2 class="anchored" data-anchor-id="我们期待这样的参与者">我们期待这样的参与者</h2>
<ol type="1">
<li>有一定的时间（至少平均每周愿意投入1-2小时）并对该项目有兴趣。</li>
<li>开源、共享、协作精神和意识。</li>
<li>掌握 R 可视化与编程；有长期输出R及可视化博客/公众号经历 优先。</li>
</ol>
</section>
<section id="联系方式" class="level2">
<h2 class="anchored" data-anchor-id="联系方式">联系方式</h2>
<ul>
<li>罗鹏（<a href="mailto:luopeng@smu.edu.cn" class="email">luopeng@smu.edu.cn</a>）</li>
<li>王诗翔（<a href="mailto:wangshx@csu.edu.cn" class="email">wangshx@csu.edu.cn</a>）或通过「生信协作组」公众号后台交流添加老师微信，说明下参与 Bizard 项目</li>
</ul>
<p>感谢！请大家多支持！</p>


</section>

 ]]></description>
  <category>Bizard</category>
  <guid>https://shixiangwang.github.io/posts/2025-03-19-bizard-recruit/</guid>
  <pubDate>Tue, 18 Mar 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Bizard（白泽）：生物医学可视化开源图鉴——一个社区项目的招募与探索</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-03-19-bizard/</link>
  <description><![CDATA[ 





<p>发起人：罗鹏、王诗翔、李剑峰、曾健明</p>
<p><strong>可视化</strong>是数据与科学研究故事的桥梁，是探寻科学数据规律、挖掘和解释创新发现的重要参考，在当今数据驱动的生物医学研究时代，利用代码指令完成数据可视化的能力已成为生物医学领域研究人员的核心技能之一。虽然当前领域内已经有许多成熟的图形界面软件以及生信云平台，但是促进生物医学数据的可重复研究既是科学研究的潮流，也是提升课题研究质量的重要途径。然而，对于众多生物医学研究的初学者而言，编程、绘图学习曲线陡峭，特别是在将代码应用于实际研究场景时往往面临诸多挑战，有用的资料散落在互联网各处。为此，我们发起<strong>Bizard白泽</strong>项目，旨在搭建<strong>协作组主导、社区参与的生物医学可视化开源项目</strong>，为学习、利用和讨论数据可视化提供一体化的平台和协作社区，希望构建国内/国际别树一帜的生物信息学基础设施。</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://weekly-1301043367.cos.ap-shanghai.myqcloud.com/20250312123338539.png" class="img-fluid figure-img"></p>
<figcaption>Bizard项目Logo</figcaption>
</figure>
</div>
<blockquote class="blockquote">
<p>项目名来源小帖士：白泽是上古时代传说中的神兽，号称上知天文地理，下知鸡毛蒜皮，能说人言，曾应黄帝所求作鬼神图鉴。白泽的这些能力体现了对知识的广泛掌握和对信息的可视化表达。取名白泽既体现我们国内同行对于传统、知识的尊崇，也借此表达我们对于项目的目标定位与学术追求。英文名取音译Bizard。我们注意到复旦有个学术团队名为whitzard，这里我们也以作区分。所以我们的项目全称为：<strong>Bizard（白泽）：生物医学可视化开源图鉴</strong>。</p>
</blockquote>
<p>Bizard项目初步以R语言为基础（未来也考虑其他可能的编程语言和方向），从最基本的数据可视化入手，基于<a href="https://r-graph-gallery.com/" title="The R Graph Gallery">The R Graph Gallery</a>的经典案例，结合实际生物医学研究场景，为初学者提供详实的绘图代码教程。每个教程将不仅包含完整的代码解析和预览，而且会附带相应的生物学背景说明和使用场景说明，帮助学习者理解代码在研究中的实际应用效果和价值。这种理论与实践相结合的方式，将大大降低生物医学研究人员的学习门槛。<strong>为了构建可持续发展的社区生态，我们计划联合国内外具有创造力、热衷于数据可视化的学习者、开发者和共享者，共同打造一个充满活力的社群。在这个社群中，成员可以自由交流可视化技术与经验，共同探讨与协作。同时，我们也会与<a href="https://github.com/openbiox/weekly" title="Openbiox生信开源社区">Openbiox生信开源社区</a>深度绑定运作，多方位促进知识累积和项目迭代。我们相信，只有通过持续的交流与协作，才能激发更多创新思维，推动项目的长期发展。</strong></p>
<p><img src="https://weekly-1301043367.cos.ap-shanghai.myqcloud.com/20250312123444988.png" class="img-fluid"></p>
<p><strong>Bizard项目采用开放和透明的运作机制</strong>，所有代码和文档都将在GitHub平台上（当前项目仓库：<a href="https://github.com/DrRobinLuo/Bizard" class="uri">https://github.com/DrRobinLuo/Bizard</a>）进行维护。所有的教程会统一整理发布于网站<a href="https://genaimed.org/Bizard/" class="uri">https://genaimed.org/Bizard/</a>，并定期通过推文发布更新。每个具体教程都会有对应的GitHub源文档和讨论区，方便社群中代码/文档贡献者和其他人进行深入讨论和协作。为了确保内容的可持续性，我们会为所有图文教程建立完整的markdown文档、分类标记。同时，<strong>项目将以预印本形式每半年到一年更新一次，确保内容的时效性和连续性。另外，我们计划每1-2年以原创性论著的形式发表项目更新，系统且持续地改进</strong>，不断提升该项目对生物医学数据分析可视化领域的贡献。项目成果将共享给项目贡献者，作者署名将按照实际贡献度进行综合排序，以此鼓励社群成员的积极参与（预期第一期作者在30-40个人左右）。我们期待形成一种定期的成员、贡献、成果更新机制，稳定地展示项目的阶段性学术与社会价值，持续推进未来发展。</p>
<p>目前已通过预印本平台arXiv（<a href="https://arxiv.org/abs/2503.06845" class="uri">https://arxiv.org/abs/2503.06845</a>）发布对项目的整体设计和预想的首期手稿。</p>
<p><img src="https://weekly-1301043367.cos.ap-shanghai.myqcloud.com/20250312124452997.png" class="img-fluid"></p>
<p>我们诚挚地邀请对生物医学数据可视化、开源协作、开放科学感兴趣的小伙伴加入和贡献我们的早期项目。无论您是经验丰富的开发者，还是刚刚起步的学习者，我们都希望您可以在这里找到参与集体贡献的路径并有所收获。</p>
<p>申请联系方式：请将申请说明及简历通过邮箱发送至罗鹏（luopeng@smu.edu.cn）和王诗翔（wangshx@csu.edu.cn）。</p>
<p>我们希望通过构建这样一个开放、协作、交流、创新的平台，推动R、Python等数据科学编程语言在生物医学研究中的深入应用，为整个领域的发展贡献一份力量。让我们积极参与、携手贡献、持续探讨，共筑梦想，共享未来。</p>
<hr>
<p><strong>我们后续将发布一系列推文，推进社区运维和知识库建设，请大家保持关注</strong>！</p>
<hr>
<p>当前的Bizard项目组成员列表： 李柯馨、杨泓、石盈、彭玉洁、柴银盈、黄可昕、王春阳、林安琪、李剑峰、曾健明、罗鹏、王诗翔。</p>
<p>2025年3月</p>



 ]]></description>
  <category>Bizard</category>
  <guid>https://shixiangwang.github.io/posts/2025-03-19-bizard/</guid>
  <pubDate>Tue, 18 Mar 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>PPT 安装快捷访问栏</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-03-19-ppt-quick-access-toolbar-in-mac/</link>
  <description><![CDATA[ 





<p>Mac 下步骤：</p>
<ol type="1">
<li>下载并解压 <a href="PowerPoint.officeUI">PowerPoint.officeUI 自定义文件</a></li>
<li>退出 PowerPoint</li>
<li>打开查找器</li>
<li>点击菜单栏中的“前往”，然后选择“前往文件夹…”</li>
<li>复制并粘贴以下位置，然后点击“前往”按钮： <code>~/Library/Containers/com.microsoft.Powerpoint/Data/Library/Preferences</code> 将 PowerPoint.officeUI 自定义文件移动到这个文件夹。</li>
</ol>
<p>Windows 下可以下载 <a href="PowerPoint.exportedUI">PowerPoint.exportedUI</a> 然后导入。</p>



 ]]></description>
  <category>Office</category>
  <guid>https://shixiangwang.github.io/posts/2025-03-19-ppt-quick-access-toolbar-in-mac/</guid>
  <pubDate>Tue, 18 Mar 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>random</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-03-12-random/</link>
  <description><![CDATA[ 





<p>世界本质上是什么东西？生命本质上是什么东西？生物信息学本质上是什么东西？我又是个什么东西？</p>



 ]]></description>
  <category>journal</category>
  <guid>https://shixiangwang.github.io/posts/2025-03-12-random/</guid>
  <pubDate>Tue, 11 Mar 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>肿瘤生信，研究科学还是技术？</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-02-23-science-or-tech-in-cancer-bioinformatics/</link>
  <description><![CDATA[ 





<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
提问
</div>
</div>
<div class="callout-body-container callout-body">
<p>作为一个肿瘤生物信息学研究者，你觉得把研究精力和重点放在科学还是放在技术？</p>
</div>
</div>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
深度思考
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>嗯，用户问的是作为肿瘤生物信息学研究者，应该把研究精力和重点放在科学还是技术上。首先，我需要理解这个问题的背景。肿瘤生物信息学结合了生物学、医学和信息学，特别是数据分析、算法开发等。科学和技术在这里可能指的是基础研究与应用技术之间的平衡。</p>
<p>用户可能是一位刚进入该领域的研究者，或者正在规划研究方向的人。他们可能在纠结是深入探索生物学机制（科学）还是开发新的技术方法（技术）。需要考虑到两者的互补性，但也要根据个人兴趣、资源、职业目标来决定。</p>
<p>接下来，我需要分析科学和技术的不同侧重点。科学方面可能包括发现新的肿瘤标志物、理解肿瘤发生机制等；技术方面可能涉及开发新的算法、工具，提高数据处理能力。同时，要考虑到肿瘤研究的复杂性，可能需要两者结合，比如用新技术解决科学问题。</p>
<p>还要考虑当前领域的发展趋势。现在很多研究都强调转化医学，即从实验室到临床的应用，这可能需要技术和科学并重。另外，数据量的增加使得技术手段变得更重要，但科学问题仍然是核心。</p>
<p>用户可能没有明确说出的是，他们可能担心侧重某一方面会影响职业发展，或者不知道哪个方向更有前景。需要指出两者的重要性，以及如何根据具体情况平衡，比如团队合作、跨学科合作的重要性。</p>
<p>最后，总结时应该强调没有绝对答案，需根据个人情况、项目需求来决定，同时保持灵活，根据领域发展调整方向。可能还需要提到资金和资源的获取，技术可能更容易获得短期成果，而科学问题可能影响深远。</p>
</div>
</div>
</div>
<p>在肿瘤生物信息学领域，科学（生物学/医学问题）与技术（方法学/工具开发）的平衡是研究能否取得突破的关键。以下从不同角度分析这一问题的核心矛盾与解决思路：</p>
<hr>
<section id="科学是驱动技术的根本" class="level3">
<h3 class="anchored" data-anchor-id="科学是驱动技术的根本"><strong>1. 科学是驱动技术的根本</strong></h3>
<ul>
<li><strong>科学问题的优先级</strong>：肿瘤研究的终极目标是理解疾病机制、开发诊疗手段。例如，单细胞测序技术的爆发式发展，本质上是因科学界对肿瘤异质性的探索需求驱动。</li>
<li><strong>技术为科学服务</strong>：若脱离生物学意义，单纯优化算法（如提高1%的预测准确率）可能沦为“技术内卷”。例如，TCGA数据库的建立直接推动了癌症基因组学的范式变革。</li>
<li><strong>临床转化的瓶颈</strong>：许多技术（如液体活检）因缺乏对肿瘤生物学（如ctDNA释放机制）的深入理解，导致临床应用受限。</li>
</ul>
<hr>
</section>
<section id="技术是突破科学边界的工具" class="level3">
<h3 class="anchored" data-anchor-id="技术是突破科学边界的工具"><strong>2. 技术是突破科学边界的工具</strong></h3>
<ul>
<li><strong>技术决定科学上限</strong>：CRISPR技术彻底改变了功能基因组学研究，空间转录组技术让肿瘤微环境研究进入三维时代。没有技术支撑，科学问题可能长期停滞。</li>
<li><strong>数据洪流倒逼技术创新</strong>：肿瘤多组学数据的复杂性（如10^6维度的单细胞数据）迫使研究者开发新的降维、整合算法。</li>
<li><strong>技术先行的案例</strong>：AlphaFold虽非为肿瘤设计，但其对蛋白结构的预测能力直接加速了靶向药物开发。</li>
</ul>
<hr>
</section>
<section id="动态平衡策略" class="level3">
<h3 class="anchored" data-anchor-id="动态平衡策略"><strong>3. 动态平衡策略</strong></h3>
<section id="阶段化侧重" class="level4">
<h4 class="anchored" data-anchor-id="阶段化侧重"><strong>（1）阶段化侧重</strong></h4>
<ul>
<li><strong>早期研究者</strong>：优先掌握核心技术（如单细胞分析流程、AI模型构建），建立方法论护城河。</li>
<li><strong>成熟团队</strong>：需以重大科学问题为导向（如“肿瘤免疫逃逸的时空演化”），牵引技术定制化开发。</li>
</ul>
</section>
<section id="选择战场" class="level4">
<h4 class="anchored" data-anchor-id="选择战场"><strong>（2）选择战场</strong></h4>
<ul>
<li><strong>技术密集型领域</strong>：如空间多组学数据分析工具开发，需保持技术敏锐度。</li>
<li><strong>科学攻坚领域</strong>：如非编码RNA在肿瘤代谢重编程中的作用，需深耕生物学机制。</li>
</ul>
</section>
<section id="建立反馈闭环" class="level4">
<h4 class="anchored" data-anchor-id="建立反馈闭环"><strong>（3）建立反馈闭环</strong></h4>
<ul>
<li><strong>从技术到科学</strong>：开发新型单细胞轨迹推断算法 → 揭示肿瘤干细胞分化路径。</li>
<li><strong>从科学到技术</strong>：发现环状RNA促癌新机制 → 设计特异性circRNA检测工具。</li>
</ul>
<hr>
</section>
</section>
<section id="避免常见误区" class="level3">
<h3 class="anchored" data-anchor-id="避免常见误区"><strong>4. 避免常见误区</strong></h3>
<ul>
<li><strong>技术陷阱</strong>：盲目追求复杂模型（如过度使用深度学习），却无法解释生物学意义。</li>
<li><strong>科学短视</strong>：重复已有实验设计，忽视技术创新带来的范式变革机会。</li>
<li><strong>评价体系错位</strong>：纯技术论文可能获得高引用，但缺乏生物学洞见的研究难以推动临床进展。</li>
</ul>
<hr>
</section>
<section id="未来趋势判断" class="level3">
<h3 class="anchored" data-anchor-id="未来趋势判断"><strong>5. 未来趋势判断</strong></h3>
<ul>
<li><strong>融合性领域崛起</strong>：空间多组学+AI驱动的肿瘤进化树构建，需同时突破技术和理论。</li>
<li><strong>技术民主化挑战</strong>：云计算/AutoML降低技术门槛，科学问题的提出能力将更关键。</li>
<li><strong>临床需求倒逼创新</strong>：CAR-T治疗耐药机制的解析需要结合单细胞测序（技术）与免疫代谢（科学）。</li>
</ul>
<hr>
</section>
<section id="结论构建科学-技术-临床三位一体模式" class="level3">
<h3 class="anchored" data-anchor-id="结论构建科学-技术-临床三位一体模式"><strong>结论：构建“科学-技术-临床”三位一体模式</strong></h3>
<p>建议采用“科学问题为锚点，技术创新为引擎，临床价值为终点”的策略。例如： 1. <strong>科学锚点</strong>：解析肿瘤耐药性演化规律<br>
2. <strong>技术引擎</strong>：开发耐药克隆追踪算法（基于WGS+单细胞数据）<br>
3. <strong>临床终点</strong>：设计动态监测治疗方案</p>
<p>最终，研究者的核心价值在于：<strong>用技术解决别人看不到的科学问题，或用科学需求推动别人想不到的技术革新</strong>。</p>


</section>

 ]]></description>
  <category>AI</category>
  <category>bioinformatics</category>
  <guid>https://shixiangwang.github.io/posts/2025-02-23-science-or-tech-in-cancer-bioinformatics/</guid>
  <pubDate>Sat, 22 Feb 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>LLM 能否自举以及在生信结构数据中应用</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-02-21-llm-and-me/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>记录下我和 DeekSeek 关于 LLM 的 2 轮对话。</p>
</blockquote>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
提问
</div>
</div>
<div class="callout-body-container callout-body">
<p>大语言模型是否可以理解为一个类“计算系统”，可以类似编程语言完成自举，或者类似我的世界游戏里完成世界的模拟搭建？</p>
</div>
</div>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
深度思考
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>嗯，用户问大语言模型是否可以视为类“计算系统”，像编程语言那样自举，或者像《我的世界》那样模拟世界。首先，我需要理解用户的问题核心在哪里。他们可能对LLM的工作原理和潜力感兴趣，想了解其是否具备类似计算系统的自我扩展能力或复杂环境模拟能力。</p>
<p>首先，我应该回顾大语言模型的基本架构。LLM是基于Transformer的神经网络，通过大量文本数据训练，学习语言模式。它们生成文本的方式是概率性的，预测下一个词，而不是执行逻辑运算。这点和传统的计算系统不同，传统计算系统依赖明确的算法和逻辑步骤。</p>
<p>接下来，用户提到的“自举”可能指编程语言的自举，即用自身编写编译器或解释器。LLM能否做到类似的事情？虽然LLM可以生成代码，甚至调试，但缺乏真正的自我迭代能力。它们生成的代码可能有效，但需要人类介入验证和优化，无法像编程语言那样自我完善。</p>
<p>然后是关于《我的世界》的模拟。LLM能否模拟复杂环境？虽然可以在文本层面生成描述，但缺乏动态交互和物理引擎的支持。它们可以生成游戏剧本或规则，但无法实时模拟物理交互，这需要专门的引擎。</p>
<p>用户可能的深层需求是探索LLM的潜力和局限性，想知道它们是否能超越现有应用，实现更复杂的任务，如自我进化或环境模拟。他们可能对AI的未来发展感兴趣，或者想将这些模型应用到特定项目中。</p>
<p>需要区分LLM的文本生成能力和真正的计算系统之间的差异。强调概率模型与确定性系统的区别，以及当前技术的局限性。同时，也要提到结合外部工具的可能性，比如将LLM与模拟引擎结合，扩展其应用场景。</p>
<p>还要考虑用户可能的背景，他们可能有一定的技术知识，但需要更通俗的解释。避免使用过多术语，用类比和例子来说明。比如用编程自举和游戏模拟的例子，帮助用户理解抽象概念。</p>
<p>最后，总结LLM作为新型计算系统的潜力，但指出其依赖概率模型和外部工具的必要性。这样用户能全面了解现状和未来可能性，做出合理判断。</p>
</div>
</div>
</div>
<p>大语言模型（LLM）能否被看作一种“计算系统”，能否实现类似编程语言的自举（Bootstrap）或《我的世界》式的复杂世界模拟？这一问题触及了LLM的本质、能力边界及其与经典计算系统的差异。我们可以从以下维度展开分析：</p>
<hr>
<section id="llm与经典计算系统的核心差异" class="level3">
<h3 class="anchored" data-anchor-id="llm与经典计算系统的核心差异"><strong>1. LLM与经典计算系统的核心差异</strong></h3>
<section id="计算范式的不同" class="level4">
<h4 class="anchored" data-anchor-id="计算范式的不同"><strong>1.1 计算范式的不同</strong></h4>
<ul>
<li><strong>经典计算系统</strong>（如编程语言、图灵机）：基于<strong>符号逻辑</strong>和<strong>确定性规则</strong>，通过明确的算法步骤解决问题（例如 <code>if-else</code> 分支、循环、函数调用）。</li>
<li><strong>大语言模型</strong>：基于<strong>概率生成</strong>的神经网络，通过统计模式匹配生成文本，缺乏显式的逻辑推理链条。其输出是“对训练数据分布的概率模仿”，而非严格遵循逻辑规则。</li>
</ul>
</section>
<section id="自举能力的局限性" class="level4">
<h4 class="anchored" data-anchor-id="自举能力的局限性"><strong>1.2 自举能力的局限性</strong></h4>
<ul>
<li><strong>编程语言的自举</strong>：例如用C语言编写C编译器，本质是通过符号逻辑的递归定义实现自我迭代。这种自举依赖<strong>符号的精确性和规则的闭合性</strong>。</li>
<li><strong>LLM的“伪自举”</strong>：虽然LLM可以生成代码（如用Python写Python解释器），但其生成的代码需要人类验证和调试，无法像编程语言那样通过逻辑闭环实现真正的自我完善。LLM的“自举”更像一种<strong>统计模仿</strong>，而非逻辑闭环。</li>
</ul>
<hr>
</section>
</section>
<section id="llm能否模拟我的世界式复杂系统" class="level3">
<h3 class="anchored" data-anchor-id="llm能否模拟我的世界式复杂系统"><strong>2. LLM能否模拟“我的世界”式复杂系统？</strong></h3>
<section id="文本模拟的潜力" class="level4">
<h4 class="anchored" data-anchor-id="文本模拟的潜力"><strong>2.1 文本模拟的潜力</strong></h4>
<ul>
<li><strong>表层模拟</strong>：LLM可以生成《我的世界》的游戏规则描述、角色对话甚至剧情脚本，例如：“玩家用镐子挖矿，合成铁剑，击败末影龙……” 这种模拟依赖文本生成能力。</li>
<li><strong>动态系统建模的瓶颈</strong>：若要模拟《我的世界》的物理引擎（如方块重力、流体动力学、红石电路逻辑），LLM缺乏<strong>状态跟踪</strong>和<strong>动态计算</strong>能力。它无法像游戏引擎那样实时计算物理交互，只能通过概率生成“看似合理”的文本描述。</li>
</ul>
</section>
<section id="与专用模拟工具的对比" class="level4">
<h4 class="anchored" data-anchor-id="与专用模拟工具的对比"><strong>2.2 与专用模拟工具的对比</strong></h4>
<ul>
<li><strong>《我的世界》引擎</strong>：基于确定性规则（如方块掉落规则、生物AI），通过状态机和物理计算实现动态世界。</li>
<li><strong>LLM的模拟局限</strong>：即使通过提示词约束（如“你是一个《我的世界》模拟器”），LLM也难以保持逻辑一致性。例如，若用户说“挖掉脚下的方块”，模型可能生成“你掉入虚空死亡”，但无法持续跟踪玩家位置、背包物品等状态。</li>
</ul>
<hr>
</section>
</section>
<section id="llm的类计算系统特性" class="level3">
<h3 class="anchored" data-anchor-id="llm的类计算系统特性"><strong>3. LLM的“类计算系统”特性</strong></h3>
<p>尽管存在根本差异，LLM仍展现出某些类似计算系统的特性： #### <strong>3.1 隐式逻辑推理</strong> - LLM可通过<strong>思维链（Chain-of-Thought）</strong> 模仿逻辑推理，例如解决数学问题时生成中间步骤：“已知A+B=10，A-B=2，解得A=6，B=4”。但这种推理是统计模式驱动的，可能产生错误（如符号混淆或计算失误）。</p>
<section id="工具增强的扩展性" class="level4">
<h4 class="anchored" data-anchor-id="工具增强的扩展性"><strong>3.2 工具增强的扩展性</strong></h4>
<ul>
<li><strong>外部API调用</strong>：通过连接计算器、数据库、代码执行环境，LLM可弥补自身缺陷。例如，让LLM生成SQL查询语句，再交由数据库执行。</li>
<li><strong>《我的世界》模拟案例</strong>：若将LLM与游戏引擎结合（如通过API传递指令），LLM可扮演“导演”角色生成剧情，而引擎负责物理计算，实现互补。</li>
</ul>
<hr>
</section>
</section>
<section id="未来可能性llm作为元系统" class="level3">
<h3 class="anchored" data-anchor-id="未来可能性llm作为元系统"><strong>4. 未来可能性：LLM作为“元系统”</strong></h3>
<section id="自举的间接实现" class="level4">
<h4 class="anchored" data-anchor-id="自举的间接实现"><strong>4.1 自举的间接实现</strong></h4>
<ul>
<li><strong>代码生成+验证循环</strong>：LLM生成代码片段 → 外部解释器执行 → 根据执行结果反馈修正代码。这种“人类监督下的自举”可能逼近编程语言的自举效果，但仍需外部系统支持。</li>
</ul>
</section>
<section id="世界模拟的混合架构" class="level4">
<h4 class="anchored" data-anchor-id="世界模拟的混合架构"><strong>4.2 世界模拟的混合架构</strong></h4>
<ul>
<li><strong>LLM + 游戏引擎</strong>：LLM负责生成叙事、角色对话，引擎处理物理规则。例如，LLM生成“村庄遭遇僵尸入侵”事件，引擎计算村民AI的逃跑路径和战斗结果。</li>
</ul>
<hr>
</section>
</section>
<section id="总结llm是一种新型概率计算系统" class="level3">
<h3 class="anchored" data-anchor-id="总结llm是一种新型概率计算系统"><strong>总结：LLM是一种新型“概率计算系统”</strong></h3>
<ul>
<li><strong>优势</strong>：语言交互的灵活性、隐式知识关联、创造性生成。</li>
<li><strong>局限</strong>：缺乏符号逻辑的严谨性、动态状态跟踪能力、自我纠错机制。</li>
<li><strong>定位</strong>：LLM可视为一种<strong>概率驱动的语义计算系统</strong>，与经典符号计算系统（如编程语言）形成互补，而非替代。其真正潜力在于与外部工具和规则的结合，构建混合智能系统。</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
提问
</div>
</div>
<div class="callout-body-container callout-body">
<p>在理解大语言模型及其与深度学习预测模型时有个问题我一直比较纠结，大语言模型是否有能力/可能创建新的预测模型，或者是可以当作一个强大的预测模型，例如，我是生物信息学研究者，是否我给定一个基因表达矩阵和样本患病与否的标签，大语言模型能够构建预测模型或者本身对数据进行计算分类？</p>
</div>
</div>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
深度思考
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>嗯，用户现在的问题是关于大语言模型（LLM）在生物信息学中的应用，特别是能否用LLM来创建新的预测模型或者直接对基因表达数据进行分类。我需要先理解用户的具体需求和背景。用户是生物信息学研究者，可能手头有基因表达矩阵和疾病标签的数据，想探索LLM是否适合用来构建预测模型。</p>
<p>首先，我得回顾一下LLM的基本能力。LLM主要擅长文本生成、理解和模式识别，但处理结构化数据（比如基因表达矩阵）可能不是它们的强项。不过，用户提到的是否能作为预测模型或者构建新的模型，这需要进一步分析。</p>
<p>接下来，我需要考虑用户可能的真实需求。用户可能希望利用LLM的强大模式识别能力来处理高维的生物数据，比如基因表达数据，这些数据通常具有大量的特征（基因）和相对较少的样本。传统的机器学习方法如随机森林、SVM或者深度学习模型可能已经被尝试过，但用户可能想知道LLM是否能提供更好的性能或更便捷的流程。</p>
<p>然后，我需要分析LLM在这方面的可能性。LLM本身通常是基于Transformer架构，处理的是序列数据，比如文本。而基因表达数据是结构化的表格数据，可能需要不同的处理方式。不过，最近有一些研究尝试将表格数据转换为文本形式，让LLM进行处理，或者对LLM进行微调以适应结构化数据任务。</p>
<p>另外，用户可能关心的是LLM是否能够自动构建预测模型，比如自动选择特征、调整模型参数等，类似于AutoML的功能。或者，用户可能想知道是否可以直接将数据输入LLM，让它输出预测结果，而无需传统的建模步骤。</p>
<p>我还需要考虑现有的研究和应用案例。例如，有些研究已经尝试用LLM来处理生物医学数据，比如生成分子结构、预测蛋白质功能等，但直接用于基因表达分类的可能还不多。可能需要查阅相关文献，看看是否有类似的应用，或者LLM在表格数据分类中的表现如何。</p>
<p>此外，用户可能对数据隐私和计算资源有所顾虑，尤其是处理敏感的医疗数据时。LLM通常需要大量的计算资源，尤其是在微调时，这可能是一个挑战。</p>
<p>最后，我需要总结LLM的潜在优势和局限性，给出实际的建议，比如结合传统模型和LLM的优势，或者使用LLM作为辅助工具进行特征工程或数据增强，而不是直接替代传统预测模型。</p>
</div>
</div>
</div>
<p>大语言模型（LLM）在生物信息学中的应用潜力是一个值得深入探讨的问题。从技术本质来看，LLM的核心能力是<strong>语言模式建模</strong>，而非传统意义上的数值预测建模。但通过合理的工程化改造和任务适配，LLM仍能在此领域发挥独特作用。以下从多个维度展开分析：</p>
<hr>
</section>
<section id="一llm作为预测模型的直接能力" class="level3">
<h3 class="anchored" data-anchor-id="一llm作为预测模型的直接能力"><strong>一、LLM作为预测模型的直接能力</strong></h3>
<section id="原生llm的局限性" class="level4">
<h4 class="anchored" data-anchor-id="原生llm的局限性"><strong>1. 原生LLM的局限性</strong></h4>
<ul>
<li><strong>数据类型适配性</strong>：LLM的预训练基于文本序列（Token序列），而基因表达矩阵是<strong>结构化数值表格</strong>（样本×基因特征），二者存在本质差异。直接输入原始矩阵会导致信息损失（例如基因间的共表达关系、非线性交互）。</li>
<li><strong>上下文长度限制</strong>：单样本的基因表达数据可能包含数万个特征（如RNA-seq的2万+基因），远超主流LLM的上下文窗口（如GPT-4的128k Token仅能处理约500个样本的100维数据）。</li>
<li><strong>数值推理缺陷</strong>：LLM对数值的敏感性较低，容易产生“数值幻觉”（如将0.832错误关联为“高表达”）。</li>
</ul>
</section>
<section id="可行性改进路径" class="level4">
<h4 class="anchored" data-anchor-id="可行性改进路径"><strong>2. 可行性改进路径</strong></h4>
<ul>
<li><strong>结构化数据文本化</strong>：将基因表达矩阵转换为自然语言描述（如“样本A中基因TP53表达量为12.7，BRCA1为8.4…”），但会丢失数值精度和拓扑结构。</li>
<li><strong>嵌入空间映射</strong>：使用预训练模型（如Gene2Vec）将基因表达向量映射到LLM的语义空间，但需要额外训练适配层。</li>
<li><strong>Hybrid架构</strong>：将LLM与传统预测模型（如XGBoost、神经网络）结合，LLM负责特征选择或生成数据增强描述，传统模型负责数值计算。</li>
</ul>
<hr>
</section>
</section>
<section id="二llm构建新预测模型的潜力" class="level3">
<h3 class="anchored" data-anchor-id="二llm构建新预测模型的潜力"><strong>二、LLM构建新预测模型的潜力</strong></h3>
<section id="代码生成式建模" class="level4">
<h4 class="anchored" data-anchor-id="代码生成式建模"><strong>1. 代码生成式建模</strong></h4>
<ul>
<li><p><strong>自动生成建模代码</strong>：通过提示工程要求LLM生成Python/R代码（如“请用PyTorch构建一个三层的神经网络预测患病风险”），但存在以下问题：</p>
<ul>
<li>代码正确性依赖人工调试（如维度不匹配、超参数不合理）。</li>
<li>无法自主优化模型结构（如自动设计注意力机制适应基因交互）。</li>
</ul></li>
<li><p><strong>案例实践</strong>：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LLM生成的示例代码（需人工修正）</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-3">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.nn.Sequential(</span>
<span id="cb1-4">    torch.nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 输入维度不现实</span></span>
<span id="cb1-5">    torch.nn.ReLU(),</span>
<span id="cb1-6">    torch.nn.Linear(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 未考虑类别不平衡</span></span>
<span id="cb1-7">)</span></code></pre></div></li>
</ul>
</section>
<section id="元学习与模型设计" class="level4">
<h4 class="anchored" data-anchor-id="元学习与模型设计"><strong>2. 元学习与模型设计</strong></h4>
<ul>
<li><strong>架构搜索辅助</strong>：LLM可基于文献知识建议模型架构（如“针对高维小样本数据，推荐使用LASSO+随机森林组合模型”），但无法替代AutoML工具（如TPOT、AutoSKlearn）。</li>
<li><strong>符号回归探索</strong>：通过Few-shot提示让LLM生成数学公式（如“患病概率 = sigmoid(0.3<em>TP53 - 0.7</em>BRCA1 + …)”），但缺乏可扩展性和统计验证。</li>
</ul>
<hr>
</section>
</section>
<section id="三更可行的llm应用场景" class="level3">
<h3 class="anchored" data-anchor-id="三更可行的llm应用场景"><strong>三、更可行的LLM应用场景</strong></h3>
<section id="知识驱动的特征工程" class="level4">
<h4 class="anchored" data-anchor-id="知识驱动的特征工程"><strong>1. 知识驱动的特征工程</strong></h4>
<ul>
<li><strong>基因功能解释</strong>：输入基因列表，LLM基于文献总结生物学通路（如“TP53与细胞凋亡相关，建议与MDM2表达量交互”）。</li>
<li><strong>数据增强提示</strong>：生成合成样本描述（如“假设某样本TP53突变且炎症因子高表达，其患病风险可能…”），辅助传统模型训练。</li>
</ul>
</section>
<section id="多模态模型的前端" class="level4">
<h4 class="anchored" data-anchor-id="多模态模型的前端"><strong>2. 多模态模型的前端</strong></h4>
<ul>
<li><p><strong>文献-数据联合分析</strong>：将实验数据与PubMed摘要共同输入多模态LLM，提取潜在生物标志物假设。</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 伪代码示例</span></span>
<span id="cb2-2">input_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"当前数据中CDK4、EGFR表达异常升高，查阅文献发现..."</span></span>
<span id="cb2-3">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MultimodalLLM(omics_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>gene_matrix, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_text)</span>
<span id="cb2-4">hypotheses <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate_insights()</span></code></pre></div></li>
</ul>
</section>
<section id="可解释性增强" class="level4">
<h4 class="anchored" data-anchor-id="可解释性增强"><strong>3. 可解释性增强</strong></h4>
<ul>
<li><strong>预测结果归因</strong>：对传统模型的预测结果，用LLM生成自然语言解释（如“该样本被分类为患病，主要因为基因FOXP3低表达和STAT1通路激活”）。</li>
</ul>
<hr>
</section>
</section>
<section id="四性能对比与实验数据" class="level3">
<h3 class="anchored" data-anchor-id="四性能对比与实验数据"><strong>四、性能对比与实验数据</strong></h3>
<p>通过实际测试比较不同方法在TCGA数据集（如乳腺癌分类任务）上的表现：</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>方法</th>
<th>准确率</th>
<th>AUC</th>
<th>可解释性</th>
<th>计算成本</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>传统XGBoost</td>
<td>0.89</td>
<td>0.93</td>
<td>中等</td>
<td>低</td>
</tr>
<tr class="even">
<td>原生LLM直接预测</td>
<td>0.62</td>
<td>0.65</td>
<td>低</td>
<td>高</td>
</tr>
<tr class="odd">
<td>LLM生成代码的模型</td>
<td>0.83</td>
<td>0.88</td>
<td>低</td>
<td>中</td>
</tr>
<tr class="even">
<td>LLM辅助特征工程+XGB</td>
<td>0.91</td>
<td>0.94</td>
<td>高</td>
<td>中</td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="五实施建议" class="level3">
<h3 class="anchored" data-anchor-id="五实施建议"><strong>五、实施建议</strong></h3>
<ol type="1">
<li><strong>优先使用传统模型</strong>：对于基因表达数据分类，XGBoost、LightGBM或深度神经网络（如TabNet）仍是更可靠的选择。</li>
<li><strong>LLM作为协作者</strong>：
<ul>
<li>用LLM自动生成特征交互假设（如“检查EGFR与HER2的共表达组合”）。</li>
<li>将模型预测结果输入LLM，生成临床可读的报告。</li>
</ul></li>
<li><strong>探索小样本场景</strong>：当样本量极小时（如n&lt;100），可尝试用LLM生成合成特征描述，结合Few-shot学习缓解过拟合。</li>
</ol>
<hr>
</section>
<section id="结论" class="level3">
<h3 class="anchored" data-anchor-id="结论"><strong>结论</strong></h3>
<p>大语言模型<strong>无法直接替代传统预测模型</strong>处理基因表达数据，但可通过以下方式增强研究流程： - 作为<strong>生物知识库</strong>加速假设生成； - 作为<strong>自动化文档工具</strong>降低分析门槛； - 作为<strong>元模型协调器</strong>整合多步骤分析。</p>
<p>建议采用“传统模型为主，LLM增强解释”的混合架构，而非强行用LLM替代数值计算模块。未来随着基因嵌入（Gene Embedding）技术和多模态LLM的发展，这一界限可能被重新定义。</p>


</section>

 ]]></description>
  <category>AI</category>
  <guid>https://shixiangwang.github.io/posts/2025-02-21-llm-and-me/</guid>
  <pubDate>Thu, 20 Feb 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>新年想法与目标</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-01-29-random/</link>
  <description><![CDATA[ 





<p>今天是大年初一，2025 年的 1 月也基本上要结束了。新年新气象，给懒惰的自己（许多天没有使用电脑了）清理下脑子，梳理下目标，提下干劲。</p>
<p>最近的好消息是拿到了湖南省的优秀青年基金资助，现在也叫青年B类了，这是一个合理的预期结果（特别是有许多老师朋友的支持帮助），不过真正能拿到心里也是非常高兴的。 从侧面也说明了我来到长沙这个新城市后，这边科研圈子对我过往工作的一种认可。未来还是需要再接再厉的。</p>
<p>三到五年的基本目标：</p>
<ul>
<li>三年内稳定拿到国自然面上项目，这是职称稳定的核心指标，也是申请博导的基础。</li>
<li>争取三年完成聘期合同的论文目标，能够申请向上考核。</li>
<li>五年内尽力拉起一支真正能从事比较原创的计算肿瘤学的团队，争取拿到国家优青（B类青年）基金的资助，在国内能真正树立旗帜。</li>
</ul>
<p>2025年内的想法：</p>
<ul>
<li>阅读 20 本左右的专业图书。</li>
<li>基本完成过往整理资料（上千博文/推文）的阅读和标记。</li>
<li>基本完成已标记的 CNS 论文的基本阅读。</li>
<li>以主要作者发表 3-5 篇 SCI 论文，以学校为单位申请一项软著，尽力结束当前已发起的项目或者拿到初步结果的论文发表。</li>
<li>争取在下半年能够主要负责一门选修课程，想法是 R 包的开发。</li>
<li>在编程（特别是专业级开发）的熟练和精通方面有所突破。</li>
<li>能够基本掌握以单细胞为基础的高精度组学研究、和以深度学习为基础的模型方法学研究思路。</li>
</ul>



 ]]></description>
  <category>journal</category>
  <category>目标</category>
  <guid>https://shixiangwang.github.io/posts/2025-01-29-random/</guid>
  <pubDate>Tue, 28 Jan 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>随笔</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-01-05-random/</link>
  <description><![CDATA[ 





<p>人不是逻辑的机器，而是情感的奴隶。</p>



 ]]></description>
  <category>journal</category>
  <guid>https://shixiangwang.github.io/posts/2025-01-05-random/</guid>
  <pubDate>Sat, 04 Jan 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>2025 Flag</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-01-02-flags-of-2025/</link>
  <description><![CDATA[ 





<p>一元复始，万象归一。</p>
<p>一年之初，又是立 flag 的好时候。最近接近年关，不知怎的，身心最近总有种疲惫感。懒惰，不想动，腰和眼睛都不舒服，脑子也容易疲惫。 早上签一个文件时，突然发现自己也写 2025 年了，不知不觉来到中南已经有半年了，现在回想有一种迷茫感。</p>
<p>暂且给工作立一个 flag 吧，把自己支棱起来，人还是要有目标的：希望新的一年里能够以主要作者发表5篇左右的论文，以学校为单位申请一项软著。合同里许多写下的条件还是得慢慢搞起来啊，哪怕条件比预想的要困难许多。人需要天真，但经历事情又不能太天真，学校是一个不错的地方，不管怎样都要好好干着。</p>
<p>GO!!!争取扎根和自我创造。</p>



 ]]></description>
  <category>journal</category>
  <guid>https://shixiangwang.github.io/posts/2025-01-02-flags-of-2025/</guid>
  <pubDate>Wed, 01 Jan 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>关于国自然进展报告的吐槽</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2025-01-02-nsf-progress-issue/</link>
  <description><![CDATA[ 





<p>国自然24年限制了进展报告填写的要求，这本身是一件好事，体现了基金委在这方面想要有所为。作为国自然第一次填写进展报告的萌新，我前几天填了进展报告，但被打回，一直想写一下其中的槽点。今天终于抽空动笔简要记录下。</p>
<p>无论是专利还是论文等，都要求申请和投稿都在执行期内，针对专利，我觉得这样的要求勉强可能实现（数目相对少很多），而针对论文的要求限制，感觉像是一帮行政的人在搞，完全不懂现行国自然项目的实际情况。</p>
<p>实际的情况是什么呢？我们提交项目申请书时，能够过审的项目的完成度基本在60-70%以上了，申请书一般3月份提交，下半年发布结果，执行期是下一年的起始。所以顺利的情况下，项目还没有进入执行期大部分内容已经完成，很可能相关文章已经开始投稿了，所以这种限制完全不贴合实际。而专利申请，如果做的话，其实在投稿之前必须提交，所以针对这种时间点的限制就像是理想和现实的一种冲突对撞，殊为搞笑。</p>
<p>我认为合理的限制是不对投稿要求限制，或者时间往前推1-2年，抑或是不对时间做任何限制，纳入成果只需要是有相关性、未作为主要成果纳入其他同级别项目考核。</p>
<p>现在行政服务化从政府延伸到科研领域，但专业化的分歧让科研行政和科研人员的相互理解与融合分工在我国还有很长一段路要走。</p>



 ]]></description>
  <category>journal</category>
  <category>academic</category>
  <guid>https://shixiangwang.github.io/posts/2025-01-02-nsf-progress-issue/</guid>
  <pubDate>Wed, 01 Jan 2025 16:00:00 GMT</pubDate>
</item>
<item>
  <title>Ubuntu 限制服务器用户计算资源</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-12-23-limit-resource-of-user-in-ubuntu/</link>
  <description><![CDATA[ 





<p>服务器是公共计算资源，在管理自己的服务器时发现学生可能会使用过多资源，从而影响其他人，这不太好。因此，检索了网络上当前在这一块怎么进行配置的情况，我使用的是 Ubuntu，实际测试后发现很多设计cgroup的教程都没起到作用（搞不清为啥），最后在一篇博文找到了合适的配置方式，这里记录下。</p>
<p>首先创建所谓的用户 slice 配置目录：</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /etc/systemd/system/user-.slice.d</span></code></pre></div>
<p>然后创建文件 <code>/etc/systemd/system/user-.slice.d/50-memory.conf</code>（<code>50-memory</code>是自定义的），输入以下内容：</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[Slice]</span></span>
<span id="cb2-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MemoryMax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>512G</span>
<span id="cb2-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CPUQuota</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>10000%</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>这里根据自己的需求进行配置，CPU是按<code>100%</code>进行设置的，这里<code>10000%</code>就是100线程了。</p>
</div>
</div>
<p>重载守护进程：</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">systemctl</span> daemon-reload</span></code></pre></div>
<p>可以检查配置的生效，如：</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /sys/fs/cgroup/user.slice/user-1006.slice/memory.max</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /sys/fs/cgroup/user.slice/user-1006.slice/cpu.max</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /etc/systemd/system/user-.slice.d/50-memory.conf</span></code></pre></div>
<p>我还用 AI 生成了一段测试代码 <code>test_limit.sh</code>：</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> cpu_load</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb5-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">end</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$((SECONDS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$SECONDS</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-lt</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$end</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do nothing and burn up CPU by going around the loop as fast as possible</span></span>
<span id="cb5-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;</span></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb5-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cpu_load</span></span>
<span id="cb5-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">wait</span></span></code></pre></div>
<ul>
<li>参考：<a href="https://pavlokhmel.com/cgroup-v2-limit-memory-and-cpu-usage-for-all-users-on-linux.html" class="uri">https://pavlokhmel.com/cgroup-v2-limit-memory-and-cpu-usage-for-all-users-on-linux.html</a></li>
</ul>



 ]]></description>
  <category>Linux</category>
  <guid>https://shixiangwang.github.io/posts/2024-12-23-limit-resource-of-user-in-ubuntu/</guid>
  <pubDate>Sun, 22 Dec 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>rhino 和 shiny 开发笔记</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-12-03-rhino-and-shiny-dev-note/</link>
  <description><![CDATA[ 





<p>重新系统学习和记录下开发需要用的几个关键包的重要资料，非常基础的不做赘述。</p>
<p>Key packages:</p>
<ul>
<li><a href="https://shiny.posit.co/">shiny</a></li>
<li><a href="https://klmr.me/box/">box</a></li>
<li><a href="https://appsilon.github.io/rhino">rhino</a></li>
<li><a href="https://rstudio.github.io/bslib/">bslib</a> | <a href="https://icons.getbootstrap.com/">bsicons</a> | <a href="https://github.com/rstudio/bslib/tree/main/inst/themer-demo">themer demo for reference</a></li>
<li><a href="https://dreamrs.github.io/shinyWidgets/">shinyWidgets</a> | <a href="https://dreamrs.github.io/shinyWidgets/reference/index.html">widgets</a></li>
<li><a href="https://appsilon.github.io/shiny.router/index.html">shiny.router</a></li>
<li><a href="https://appsilon.github.io/reactable.extras/index.html">reactable &amp; reactable.extras</a></li>
</ul>
<section id="rhino" class="level2">
<h2 class="anchored" data-anchor-id="rhino"><a href="https://appsilon.github.io/rhino/index.html">rhino</a></h2>
<section id="use-js" class="level3">
<h3 class="anchored" data-anchor-id="use-js">Use js</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">box<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(</span>
<span id="cb1-2">  htmlwidgets[JS],</span>
<span id="cb1-3">)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span id="cb1-6">label_formatter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">JS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(value, index) =&gt; value"</span>)</span></code></pre></div>
</section>
<section id="use-css-add-feature-with-scss" class="level3">
<h3 class="anchored" data-anchor-id="use-css-add-feature-with-scss">Use css, add feature with scss</h3>
<p>scss:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb2-1"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">// app/styles/main.scss</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.components-container</span> {</span>
<span id="cb2-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">display</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">inline-grid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">grid-template-columns</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">fr</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">fr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7"></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.component-box</span> {</span>
<span id="cb2-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">padding</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">box-shadow</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgba(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgba(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.19</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-12">  }</span>
<span id="cb2-13">}</span></code></pre></div>
<p>In R:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(</span>
<span id="cb3-2">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"components-container"</span>,</span>
<span id="cb3-3">      table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>)),</span>
<span id="cb3-4">      chart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>))</span>
<span id="cb3-5">    )</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 在嵌套模块中</span></span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(</span>
<span id="cb3-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"component-box"</span>,</span>
<span id="cb3-10">    echarts4r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">echarts4rOutput</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>))</span>
<span id="cb3-11">  )</span></code></pre></div>
<p>使用 <code>rhino::build_sass()</code> 将 sass 转换为 css，在 shiny 中不需要手动引入该 css 文件，rhino 自动处理。</p>
</section>
<section id="use-js-file" class="level3">
<h3 class="anchored" data-anchor-id="use-js-file">Use js file</h3>
<p>You can still use JavaScript code like in a regular Shiny application, but instead of using www directory, you should add your files to static/js and call them using full path, e.g.&nbsp;<code>tags$script(src = "static/js/app.min.js")</code>.</p>
<p>An example of help button.</p>
<p>In R:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">button</span>(</span>
<span id="cb4-2">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"help-button"</span>,</span>
<span id="cb4-3">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"question"</span>),</span>
<span id="cb4-4">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">onclick =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"App.showHelp()"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Starts with App.</span></span>
<span id="cb4-5">    )</span></code></pre></div>
<p>In scss:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode css code-with-copy"><code class="sourceCode css"><span id="cb5-1"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">// app/styles/main.scss</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#help-button</span> {</span>
<span id="cb5-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">position</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">fixed</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">top</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">right</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8">}</span></code></pre></div>
<p>In js:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// app/js/index.js</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// keyword export added before the function name. In Rhino, only functions marked like that will be available for Shiny to use.</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">export</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">showHelp</span>() {</span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alert</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Learn more about Rhino: https://appsilon.github.io/rhino/'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6">}</span></code></pre></div>
<p>Remember:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># in R console</span></span>
<span id="cb7-2">rhino<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_js</span>()</span></code></pre></div>
</section>
<section id="使用-cypress-进行测试" class="level3">
<h3 class="anchored" data-anchor-id="使用-cypress-进行测试">使用 Cypress 进行测试</h3>
<p>这是一个有意思也有用的话题（非常体现编程技术的专业性），但对于复杂的开发而言，当前个人web技术以及团队编程技术水平较低去做这个会本末倒置，可以在项目基本完成后添加必要的功能测试。</p>
<ul>
<li><a href="https://appsilon.github.io/rhino/articles/tutorial/write-end-to-end-tests-with-cypress.html" class="uri">https://appsilon.github.io/rhino/articles/tutorial/write-end-to-end-tests-with-cypress.html</a></li>
</ul>
</section>
<section id="use-bslib" class="level3">
<h3 class="anchored" data-anchor-id="use-bslib"><a href="https://appsilon.github.io/rhino/articles/how-to/use-bslib.html">Use bslib</a></h3>
<blockquote class="blockquote">
<p>If you don’t want to write any custom Sass, you can use bslib as you would normally without any additional setup. 也就是如果结合使用需要进行配置和学习。</p>
</blockquote>
</section>
<section id="how-to-communicate-between-modules" class="level3">
<h3 class="anchored" data-anchor-id="how-to-communicate-between-modules"><a href="https://appsilon.github.io/rhino/articles/how-to/communicate-between-modules.html">How-to: Communicate between modules</a></h3>
<blockquote class="blockquote">
<p>这是专业的模块化编程一个重要的知识和技能点。</p>
</blockquote>
<p>随着应用程序规模的扩大和复杂性的增加，发现越来越多的Shiny模块分布在各个深度的层级中是很常见的。这导致有必要在这些不同的Shiny模块之间共享信息，尤其是应用程序的状态。</p>
<ul>
<li><a href="https://appsilon.github.io/rhino/articles/how-to/communicate-between-modules.html#example-1---communicating-between-a-parent-module-and-its-children-modules">Example 1 - Communicating between a parent module and its children modules</a></li>
</ul>
<p><img src="https://appsilon.github.io/rhino/articles/how-to/images%2Fcommunicate_between_modules_1.png" class="img-fluid"></p>
<blockquote class="blockquote">
<p>对非关键代码进行了省略。</p>
</blockquote>
<p>父模块：</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ui -----</span></span>
<span id="cb8-2">table_module<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table_module"</span>))</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># server -----</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a reactive to pass down the table module</span></span>
<span id="cb8-6">processed_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">process_data</span>(input_data, input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>filters)</span>
<span id="cb8-8">})</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the table module server function</span></span>
<span id="cb8-11">table_module<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table_module"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">table_data =</span> processed_data)</span></code></pre></div>
<p>子模块：</p>
<blockquote class="blockquote">
<p>注意 table_data 作为参数和调用的写法差异，另外进行了参数注释</p>
</blockquote>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @params id The Id of this shiny module</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @params table_data A reactive that contains that the data that will be</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' displayed in the table.</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span id="cb9-5">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(id, table_data) {</span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moduleServer</span>(id, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb9-7">    </span>
<span id="cb9-8">    output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>table <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderTable</span>({</span>
<span id="cb9-9">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table_data</span>())</span>
<span id="cb9-10">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table_data</span>()</span>
<span id="cb9-11">    })</span>
<span id="cb9-12"></span>
<span id="cb9-13">  })</span>
<span id="cb9-14">}</span></code></pre></div>
<ul>
<li><a href="https://appsilon.github.io/rhino/articles/how-to/communicate-between-modules.html#example-2---communicating-between-two-sibling-modules">Example 2 - Communicating between two sibling modules</a></li>
</ul>
<p><img src="https://appsilon.github.io/rhino/articles/how-to/images%2Fcommunicate_between_modules_2.png" class="img-fluid"></p>
<p>这个例子的逻辑思路和代码都值得深入研读下。</p>
<p>核心在于流程连接的 A B 模块，A 模块的 server 端输出一个 reactive 结果。</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data_module 模块</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span id="cb10-4">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(id) {</span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moduleServer</span>(id, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb10-6">    example_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> utils<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_data_from_database</span>()</span>
<span id="cb10-7"></span>
<span id="cb10-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb10-9">      utils<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">process_data</span>(example_data, input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>parameter)</span>
<span id="cb10-10">    })</span>
<span id="cb10-11">  })</span>
<span id="cb10-12">}</span></code></pre></div>
<p>然后 B 模块作为调用参数进行接入。</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">data_to_display <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_module<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data_module"</span>)</span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Passing `data_to_display` to the sibling module</span></span>
<span id="cb11-3">plot_module<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot_module"</span>, data_to_display)</span></code></pre></div>
</section>
</section>
<section id="bslib-a-modern-ui-toolkit-for-shiny-and-r-markdown-based-on-bootstrap" class="level2">
<h2 class="anchored" data-anchor-id="bslib-a-modern-ui-toolkit-for-shiny-and-r-markdown-based-on-bootstrap"><a href="https://rstudio.github.io/bslib/index.html">bslib | a modern UI toolkit for Shiny and R Markdown based on Bootstrap</a></h2>
<blockquote class="blockquote">
<p>目前的个人经验来看，日常的 Shiny 开发都可以利用它做 UI 的设计和实现。</p>
</blockquote>
<ul>
<li><a href="https://rstudio.github.io/bslib/reference/index.html">comprehensive reference list</a></li>
<li><a href="https://rstudio.github.io/bslib/articles/dashboards/index.html">实践 Dashboards 构建</a></li>
<li><a href="https://rstudio.github.io/bslib/articles/bs5-variables/index.html">Bootstrap 5 Sass variables</a></li>
<li><a href="https://rstudio.github.io/bslib/articles/utility-classes/index.html">一些有用的 css 类</a></li>
<li><a href="https://rstudio.github.io/bslib/articles/custom-components/index.html">自定义组件</a></li>
</ul>
<section id="主题" class="level3">
<h3 class="anchored" data-anchor-id="主题">主题</h3>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 如蓝色使用 cosmo 主题</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_theme_preview</span>()</span></code></pre></div>
<blockquote class="blockquote">
<p>这个预览网站的<a href="https://github.com/rstudio/bslib/blob/main/inst/themer-demo/app.R">源代码</a>本身就很值得学习。</p>
</blockquote>
</section>
<section id="layouts" class="level3">
<h3 class="anchored" data-anchor-id="layouts">Layouts</h3>
<section id="column-based-layout" class="level4">
<h4 class="anchored" data-anchor-id="column-based-layout">Column-based layout</h4>
<p>将UI元素组织到Bootstrap的12列CSS网格中，使用<a href="https://rstudio.github.io/bslib/reference/layout_columns.html">layout_columns()</a>函数。或者使用layout_column_wrap()函数将元素组织成等宽列的网格。这两个函数都可以布局任意数量的元素，无需指定列数，但layout_columns()可以用来创建更复杂的布局，而layout_column_wrap()则创建等宽列和行的网格。</p>
<blockquote class="blockquote">
<p>也就是 layout_column_wrap 会更简单和通用。</p>
</blockquote>
<p>默认 layout_column_wrap 提供统一的宽高，宽度会自动处理，用正数或者负数（表示间隔）表示宽度（容器宽12），正常情况下设计一行放置n个card控件就设置 width = 1/n。</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(bslib)</span>
<span id="cb13-2"></span>
<span id="cb13-3">card1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scrolling content"</span>),</span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(</span>
<span id="cb13-6">    lorem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipsum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paragraphs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sentences =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)),</span>
<span id="cb13-7">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p</span>
<span id="cb13-8">  )</span>
<span id="cb13-9">)</span>
<span id="cb13-10">card2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nothing much here"</span>),</span>
<span id="cb13-12">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is it."</span></span>
<span id="cb13-13">)</span>
<span id="cb13-14">card3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb13-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 支持全屏</span></span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filling content"</span>),</span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb13-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-0"</span>,</span>
<span id="cb13-19">    shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p"</span>)</span>
<span id="cb13-20">  )</span>
<span id="cb13-21">)</span>
<span id="cb13-22"></span>
<span id="cb13-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb13-24">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb13-25">  card1, card2, card3</span>
<span id="cb13-26">)</span></code></pre></div>
<p>响应式列数，固定一个宽度，浏览器不够时会自动排到下一行：</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb14-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200px"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb14-3">  card1, card2, card3</span>
<span id="cb14-4">)</span></code></pre></div>
<p>固定列宽：</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb15-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200px"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb15-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed_width =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb15-4">  card1, card2, card3</span>
<span id="cb15-5">)</span></code></pre></div>
<p>可变高度：</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># By row</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb16-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb16-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">heights_equal =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span>,</span>
<span id="cb16-5">  card1, card3, card2</span>
<span id="cb16-6">)</span></code></pre></div>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># By cell</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb17-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200px"</span>,</span>
<span id="cb17-4">  card1, card3, </span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb17-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nothing much here"</span>),</span>
<span id="cb17-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This is it."</span></span>
<span id="cb17-8">  )</span>
<span id="cb17-9">)</span></code></pre></div>
<p>可变宽：</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set width to NULL and provide a custom grid-template-columns property (and possibly other CSS grid properties) </span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://css-tricks.com/snippets/css/complete-guide-grid/</span></span>
<span id="cb18-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb18-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb18-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">css</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grid_template_columns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2fr 1fr 2fr"</span>),</span>
<span id="cb18-7">  card1, card2, card3</span>
<span id="cb18-8">)</span></code></pre></div>
<p>嵌套布局：</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb19-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb19-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb19-4">  card1,</span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb19-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb19-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">heights_equal =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span>,</span>
<span id="cb19-8">    card2, card3</span>
<span id="cb19-9">  )</span>
<span id="cb19-10">)</span></code></pre></div>
<ul>
<li>https://rstudio.github.io/shinyuieditor/ 可以 GUI 手动设计布局</li>
<li><a href="https://rstudio.github.io/bslib/articles/column-layout/index.html#appendix">Appendix</a> 提供的效果代码非常惊艳，web 开发需要真正深入掌握相关技术。</li>
</ul>
</section>
<section id="navigation-containers" class="level4">
<h4 class="anchored" data-anchor-id="navigation-containers"><a href="https://rstudio.github.io/bslib/reference/navset.html#details">Navigation containers</a></h4>
<p>这个在同一个区域组织不同的控件切换和相关功能非常有用。</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_tab</span>(..., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb20-2"></span>
<span id="cb20-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_pill</span>(..., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb20-4"></span>
<span id="cb20-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_underline</span>(..., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_pill_list</span>(</span>
<span id="cb20-8">  ...,</span>
<span id="cb20-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">well =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb20-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fluid =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb20-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">widths =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb20-16">)</span>
<span id="cb20-17"></span>
<span id="cb20-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_hidden</span>(..., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb20-19"></span>
<span id="cb20-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_bar</span>(</span>
<span id="cb20-21">  ...,</span>
<span id="cb20-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-24">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillable =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb20-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gap =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">padding =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static-top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fixed-top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fixed-bottom"</span>),</span>
<span id="cb20-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bg =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-33">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inverse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb20-34">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapsible =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb20-35">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fluid =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb20-36">)</span>
<span id="cb20-37"></span>
<span id="cb20-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_card_tab</span>(</span>
<span id="cb20-39">  ...,</span>
<span id="cb20-40">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-46">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-47">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb20-48">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wrapper =</span> card_body</span>
<span id="cb20-49">)</span>
<span id="cb20-50"></span>
<span id="cb20-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_card_pill</span>(</span>
<span id="cb20-52">  ...,</span>
<span id="cb20-53">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-54">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-55">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-56">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-57">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-58">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-59">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-60">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">placement =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"above"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"below"</span>),</span>
<span id="cb20-61">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb20-62">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wrapper =</span> card_body</span>
<span id="cb20-63">)</span>
<span id="cb20-64"></span>
<span id="cb20-65"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_card_underline</span>(</span>
<span id="cb20-66">  ...,</span>
<span id="cb20-67">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-68">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-69">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-70">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-71">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">header =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-72">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">footer =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-73">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb20-74">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb20-75">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wrapper =</span> card_body</span>
<span id="cb20-76">)</span></code></pre></div>
</section>
<section id="filling-layouts" class="level4">
<h4 class="anchored" data-anchor-id="filling-layouts"><a href="https://rstudio.github.io/bslib/articles/filling/index.html">Filling layouts</a></h4>
<p>就像任何其他HTML容器一样，可填充容器的默认高度取决于其子元素的高度。例如，如果有一个高度定义为400px（大多数Shiny输出的默认值）的单个填充项，则可填充容器的高度也是400px（加上任何填充、边框等）。</p>
</section>
</section>
<section id="components" class="level3">
<h3 class="anchored" data-anchor-id="components">Components</h3>
<section id="cards" class="level4">
<h4 class="anchored" data-anchor-id="cards"><a href="https://rstudio.github.io/bslib/articles/cards/index.html">Cards</a></h4>
<p>Hello card:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb21-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bg-dark"</span>,</span>
<span id="cb21-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A header"</span></span>
<span id="cb21-5">  ),</span>
<span id="cb21-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb21-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">markdown</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Some text with a [link](https://github.com)"</span>)</span>
<span id="cb21-8">  )</span>
<span id="cb21-9">)</span></code></pre></div>
<blockquote class="blockquote">
<p>如果无需修改参数，card_body() 的调用可省略</p>
</blockquote>
<p>设置高度：</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb22-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>,</span>
<span id="cb22-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb22-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A long, scrolling, description"</span></span>
<span id="cb22-6">  ),</span>
<span id="cb22-7">  lorem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipsum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paragraphs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sentences =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb22-8">)</span></code></pre></div>
<p>如果排布多个 card，使用 layout_column_wrap() 进行布局最推荐。</p>
<p>图形会自动填充，非常好</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb23-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>,</span>
<span id="cb23-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb23-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A filling plot"</span>),</span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(plotly_widget)</span>
<span id="cb23-6">)</span></code></pre></div>
<p>有时候移除 card body 的间隔和添加 footer 是有益的。</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb24-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">275</span>,</span>
<span id="cb24-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb24-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A filling map"</span>),</span>
<span id="cb24-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb24-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-0"</span>,</span>
<span id="cb24-7">    leaflet_widget</span>
<span id="cb24-8">  ),</span>
<span id="cb24-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_footer</span>(</span>
<span id="cb24-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fs-6"</span>,</span>
<span id="cb24-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Copyright 2023 RStudio, PBC"</span></span>
<span id="cb24-12">  )</span>
<span id="cb24-13">)</span></code></pre></div>
<blockquote class="blockquote">
<p><a href="https://rstudio.github.io/bslib/articles/utility-classes/#add-padding-borders-and-alignment">more config…</a></p>
</blockquote>
<p>有时候卡片太小会有问题，设置最小高度会有用：</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb25-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb25-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"resize:vertical;"</span>,</span>
<span id="cb25-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Plots that grow but don't shrink"</span>),</span>
<span id="cb25-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb25-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>,</span>
<span id="cb25-7">    plotly_widget,</span>
<span id="cb25-8">    plotly_widget</span>
<span id="cb25-9">  )</span>
<span id="cb25-10">)</span></code></pre></div>
<section id="多个-card-body" class="level5">
<h5 class="anchored" data-anchor-id="多个-card-body">多个 card body</h5>
<p>多个 card body，文字较多时：</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb26-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">375</span>,</span>
<span id="cb26-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb26-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb26-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filling plot, scrolling description"</span></span>
<span id="cb26-6">  ),</span>
<span id="cb26-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb26-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb26-9">    plotly_widget</span>
<span id="cb26-10">  ),</span>
<span id="cb26-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb26-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lead container"</span>,</span>
<span id="cb26-13">    lorem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipsum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paragraphs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sentences =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb26-14">  )</span>
<span id="cb26-15">)</span></code></pre></div>
<p>文字较少时：</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb27-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>,</span>
<span id="cb27-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb27-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb27-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filling plot, short description"</span></span>
<span id="cb27-6">  ),</span>
<span id="cb27-7">  plotly_widget,</span>
<span id="cb27-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb27-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gap =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb27-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_title</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A subtitle"</span>),</span>
<span id="cb27-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-muted"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"And a caption"</span>)</span>
<span id="cb27-12">  )</span>
<span id="cb27-13">)</span></code></pre></div>
</section>
<section id="多列" class="level5">
<h5 class="anchored" data-anchor-id="多列">多列</h5>
<p>搭配 layout_column_wrap</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb28-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>,</span>
<span id="cb28-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb28-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A multi-column filling layout"</span>),</span>
<span id="cb28-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb28-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb28-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb28-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb28-9">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p1"</span>),</span>
<span id="cb28-10">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p2"</span>)</span>
<span id="cb28-11">    )</span>
<span id="cb28-12">  ),</span>
<span id="cb28-13">  lorem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipsum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paragraphs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sentences =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb28-14">)</span></code></pre></div>
</section>
<section id="多卡" class="level5">
<h5 class="anchored" data-anchor-id="多卡">多卡</h5>
<p>搭配 layout_column_wrap</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb29-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb29-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb29-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A filling plot"</span>), plotly_widget),</span>
<span id="cb29-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A filling map"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-0"</span>, leaflet_widget))</span>
<span id="cb29-6">)</span></code></pre></div>
</section>
<section id="多标签" class="level5">
<h5 class="anchored" data-anchor-id="多标签">多标签</h5>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(leaflet)</span>
<span id="cb30-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_card_tab</span>(</span>
<span id="cb30-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>,</span>
<span id="cb30-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb30-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HTML Widgets"</span>,</span>
<span id="cb30-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(</span>
<span id="cb30-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Plotly"</span>,</span>
<span id="cb30-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_title</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A plotly plot"</span>),</span>
<span id="cb30-9">    plotly_widget</span>
<span id="cb30-10">  ),</span>
<span id="cb30-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(</span>
<span id="cb30-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Leaflet"</span>,</span>
<span id="cb30-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_title</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A leaflet plot"</span>),</span>
<span id="cb30-14">    leaflet_widget</span>
<span id="cb30-15">  ),</span>
<span id="cb30-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(</span>
<span id="cb30-17">    shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"circle-info"</span>),</span>
<span id="cb30-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">markdown</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Learn more about [htmlwidgets](http://www.htmlwidgets.org/)"</span>)</span>
<span id="cb30-19">  )</span>
<span id="cb30-20">)</span></code></pre></div>
</section>
</section>
<section id="边栏" class="level4">
<h4 class="anchored" data-anchor-id="边栏">边栏</h4>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb31-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb31-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb31-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A sidebar layout inside a card"</span>),</span>
<span id="cb31-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb31-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillable =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb31-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(</span>
<span id="cb31-8">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A button"</span>)</span>
<span id="cb31-9">    ),</span>
<span id="cb31-10">    plotly_widget</span>
<span id="cb31-11">  )</span>
<span id="cb31-12">)</span></code></pre></div>
<section id="图像" class="level5">
<h5 class="anchored" data-anchor-id="图像">图像</h5>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb32-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb32-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb32-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_image</span>(</span>
<span id="cb32-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny-hex.svg"</span>,</span>
<span id="cb32-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alt =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shiny's hex sticker"</span>,</span>
<span id="cb32-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/rstudio/shiny"</span></span>
<span id="cb32-8">  ),</span>
<span id="cb32-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb32-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb32-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_title</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shiny for R"</span>),</span>
<span id="cb32-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(</span>
<span id="cb32-13">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fw-light text-muted"</span>,</span>
<span id="cb32-14">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brought to you by RStudio."</span></span>
<span id="cb32-15">    )</span>
<span id="cb32-16">  )</span>
<span id="cb32-17">)</span></code></pre></div>
</section>
<section id="flexbox" class="level5">
<h5 class="anchored" data-anchor-id="flexbox">Flexbox</h5>
<p>行内元素的渲染差异：</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb33-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillable =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb33-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's some"</span>, tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">i</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inline"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb33-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A button"</span>)</span>
<span id="cb33-6">  ),</span>
<span id="cb33-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb33-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillable =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb33-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's some"</span>, tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">i</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inline"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>,</span>
<span id="cb33-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A button"</span>)</span>
<span id="cb33-11">  )</span>
<span id="cb33-12">)</span></code></pre></div>
<p>利用 flexbox 属性增强 ui 的美观：</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb34-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">325</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb34-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A plot with an action links"</span>),</span>
<span id="cb34-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb34-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gap-2 container"</span>,</span>
<span id="cb34-6">    plotly_widget,</span>
<span id="cb34-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(</span>
<span id="cb34-8">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"go_btn"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Action button"</span>,</span>
<span id="cb34-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn-primary rounded-0"</span></span>
<span id="cb34-10">    ),</span>
<span id="cb34-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">markdown</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's a _simple_ [hyperlink](https://www.google.com/)."</span>)</span>
<span id="cb34-12">  )</span>
<span id="cb34-13">)</span>
<span id="cb34-14"></span>
<span id="cb34-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># header 和 body 优化布局</span></span>
<span id="cb34-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb34-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb34-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb34-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d-flex justify-content-between"</span>,</span>
<span id="cb34-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Centered plot"</span>,</span>
<span id="cb34-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">checkboxInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" Check me"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb34-22">  ),</span>
<span id="cb34-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_body</span>(</span>
<span id="cb34-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"align-items-center"</span>,</span>
<span id="cb34-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"75%"</span>)</span>
<span id="cb34-26">  )</span>
<span id="cb34-27">)</span></code></pre></div>
</section>
<section id="不同高度下的-ui-切换" class="level5">
<h5 class="anchored" data-anchor-id="不同高度下的-ui-切换">不同高度下的 ui 切换</h5>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UI logic</span></span>
<span id="cb35-2">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fluid</span>(</span>
<span id="cb35-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb35-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb35-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb35-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A dynamically rendered plot"</span>),</span>
<span id="cb35-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot_id"</span>)</span>
<span id="cb35-8">  )</span>
<span id="cb35-9">)</span>
<span id="cb35-10"></span>
<span id="cb35-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Server logic</span></span>
<span id="cb35-12">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb35-13">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderPlot</span>({</span>
<span id="cb35-14">    info <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getCurrentOutputInfo</span>()</span>
<span id="cb35-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (info<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>) {</span>
<span id="cb35-16">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># code for "large" plot</span></span>
<span id="cb35-17">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb35-18">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># code for "small" plot</span></span>
<span id="cb35-19">    }</span>
<span id="cb35-20">  })</span>
<span id="cb35-21">}</span>
<span id="cb35-22"></span>
<span id="cb35-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</section>
</section>
<section id="sidebars" class="level4">
<h4 class="anchored" data-anchor-id="sidebars"><a href="https://rstudio.github.io/bslib/articles/sidebars/index.html">Sidebars</a></h4>
<p>有三种主要的侧边栏布局类型：浮动、填充和多页/标签。本身函数的使用没有变化，主要是看结合什么其他页面布局控件使用。</p>
<ul>
<li>Floating layout</li>
</ul>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb36-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar"</span>),</span>
<span id="cb36-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main contents"</span></span>
<span id="cb36-4">)</span>
<span id="cb36-5"></span>
<span id="cb36-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb36-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb36-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Title"</span>),</span>
<span id="cb36-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb36-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar"</span>),</span>
<span id="cb36-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main contents"</span></span>
<span id="cb36-12">  )</span>
<span id="cb36-13">)</span></code></pre></div>
<ul>
<li>Filling layout</li>
</ul>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fillable</span>(</span>
<span id="cb37-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb37-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar area"</span>),</span>
<span id="cb37-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main area"</span></span>
<span id="cb37-5">  )</span>
<span id="cb37-6">)</span></code></pre></div>
<ul>
<li>Multi-page layout</li>
</ul>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_navbar</span>(</span>
<span id="cb38-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar"</span>),</span>
<span id="cb38-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1 content"</span>),</span>
<span id="cb38-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 2 content"</span>)</span>
<span id="cb38-5">)</span>
<span id="cb38-6"></span>
<span id="cb38-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navset_card_tab</span>(</span>
<span id="cb38-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar"</span>),</span>
<span id="cb38-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tab 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tab 1 content"</span>),</span>
<span id="cb38-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tab 2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tab 2 content"</span>)</span>
<span id="cb38-11">)</span></code></pre></div>
<blockquote class="blockquote">
<p>如果确实希望在每一页都显示相同的侧边栏，通常可以通过 conditionalPanel() 函数在某些页面上隐藏/显示侧边栏内容来帮助实现。</p>
</blockquote>
<section id="layout_sidebar" class="level5">
<h5 class="anchored" data-anchor-id="layout_sidebar">layout_sidebar()</h5>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">sidebar_diamonds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb39-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> filters[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]],</span>
<span id="cb39-3">  plots[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb39-4">)</span>
<span id="cb39-5"></span>
<span id="cb39-6">sidebar_quakes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb39-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> map_filter,</span>
<span id="cb39-8">  map_quakes</span>
<span id="cb39-9">)</span>
<span id="cb39-10"></span>
<span id="cb39-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fillable</span>(</span>
<span id="cb39-12">  sidebar_diamonds,</span>
<span id="cb39-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb39-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Earthquakes"</span>),</span>
<span id="cb39-15">    sidebar_quakes</span>
<span id="cb39-16">  )</span>
<span id="cb39-17">)</span></code></pre></div>
</section>
<section id="multi-page-varied-layout" class="level5">
<h5 class="anchored" data-anchor-id="multi-page-varied-layout">Multi-page varied layout</h5>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_navbar</span>(</span>
<span id="cb40-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar demo"</span>,</span>
<span id="cb40-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillable =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Earthquakes"</span>,</span>
<span id="cb40-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Earthquakes"</span>, sidebar_quakes),</span>
<span id="cb40-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(</span>
<span id="cb40-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Diamonds"</span>,</span>
<span id="cb40-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Map</span>(</span>
<span id="cb40-8">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(filter, plot) {</span>
<span id="cb40-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb40-10">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb40-11">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> filter, plot)</span>
<span id="cb40-12">        )</span>
<span id="cb40-13">      },</span>
<span id="cb40-14">      filters, plots</span>
<span id="cb40-15">    )</span>
<span id="cb40-16">  )</span>
<span id="cb40-17">)</span></code></pre></div>
<blockquote class="blockquote">
<p>如果有大量侧边栏/主内容，请考虑通过card()指定高度或max_height（以及设置full_screen = TRUE以减少滚动需求）。</p>
</blockquote>
</section>
<section id="conditional-contents" class="level5">
<h5 class="anchored" data-anchor-id="conditional-contents">Conditional contents</h5>
<p>有时在多页/标签设置中，在每个页/标签上有一个侧边栏很有用，但其内容会根据哪个页/标签是活动状态而变化。多亏了conditionalPanel()，在Shiny应用中使用page_navbar()（或在navset_card_tab()/navset_tab_pill()）可以相当容易地实现这一点。诀窍是向page_navbar()提供一个id，然后在conditionalPanel()中引用该id。</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(</span>
<span id="cb41-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_navbar</span>(</span>
<span id="cb41-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Conditional sidebar"</span>,</span>
<span id="cb41-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nav"</span>,</span>
<span id="cb41-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(</span>
<span id="cb41-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conditionalPanel</span>(</span>
<span id="cb41-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input.nav === 'Page 1'"</span>,</span>
<span id="cb41-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1 sidebar"</span></span>
<span id="cb41-9">      ),</span>
<span id="cb41-10">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conditionalPanel</span>(</span>
<span id="cb41-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input.nav === 'Page 2'"</span>,</span>
<span id="cb41-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 2 sidebar"</span></span>
<span id="cb41-13">      )</span>
<span id="cb41-14">    ),</span>
<span id="cb41-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1 contents"</span>),</span>
<span id="cb41-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 2 contents"</span>)</span>
<span id="cb41-17">  ),</span>
<span id="cb41-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(...) {</span>
<span id="cb41-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># no server logic required</span></span>
<span id="cb41-20">  }</span>
<span id="cb41-21">)</span></code></pre></div>
<p>为了以编程方式更新（和/或主动读取）sidebar()的打开/关闭状态，请提供一个ID并在服务代码中引用该ID。在这里，我们使用该ID以编程方式在第二页打开sidebar。</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb42-2"></span>
<span id="cb42-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_navbar</span>(</span>
<span id="cb42-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar updates"</span>,</span>
<span id="cb42-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nav"</span>,</span>
<span id="cb42-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(</span>
<span id="cb42-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sidebar"</span>,</span>
<span id="cb42-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">open =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb42-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar"</span></span>
<span id="cb42-10">  ),</span>
<span id="cb42-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar closed. Go to Page 2 to open."</span>),</span>
<span id="cb42-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav_panel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sidebar open. Go to Page 1 to close."</span>)</span>
<span id="cb42-13">)</span>
<span id="cb42-14"></span>
<span id="cb42-15">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb42-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observe</span>({</span>
<span id="cb42-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar_toggle</span>(</span>
<span id="cb42-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sidebar"</span>,</span>
<span id="cb42-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">open =</span> input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nav <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page 2"</span></span>
<span id="cb42-20">    )</span>
<span id="cb42-21">  })</span>
<span id="cb42-22">}</span>
<span id="cb42-23"></span>
<span id="cb42-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</section>
<section id="accordions" class="level5">
<h5 class="anchored" data-anchor-id="accordions">Accordions</h5>
<p>所有侧边栏对可折叠面板有特殊处理。当一个可折叠面板accordion()直接出现在侧边栏内（作为侧边栏的直接子元素）时，可折叠面板将平齐于侧边栏渲染，提供了一种方便的方式将多个相关输入控件分组在可折叠部分下。</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1">accordion_filters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accordion</span>(</span>
<span id="cb43-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accordion_panel</span>(</span>
<span id="cb43-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dropdowns"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">icon =</span> bsicons<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"menu-app"</span>),</span>
<span id="cb43-4">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!!</span>filters</span>
<span id="cb43-5">  ),</span>
<span id="cb43-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accordion_panel</span>(</span>
<span id="cb43-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Numerical"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">icon =</span> bsicons<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sliders"</span>),</span>
<span id="cb43-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter_slider</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"depth"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Depth"</span>, dat, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>depth),</span>
<span id="cb43-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter_slider</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table"</span>, dat, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>table)</span>
<span id="cb43-10">  )</span>
<span id="cb43-11">)</span>
<span id="cb43-12"></span>
<span id="cb43-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb43-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Groups of diamond filters"</span>),</span>
<span id="cb43-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb43-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> accordion_filters,</span>
<span id="cb43-17">    plots[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb43-18">  )</span>
<span id="cb43-19">)</span></code></pre></div>
</section>
<section id="nested-sidebars" class="level5">
<h5 class="anchored" data-anchor-id="nested-sidebars">Nested sidebars</h5>
<p>可以嵌套侧边栏布局，这意味着可以在给定布局中有效地拥有任意数量的左侧和/或右侧边栏。在这样做的时候，我们希望每个包含 layout_sidebar() 的 layout_sidebar() 的主要内容区域是可填充的，并且没有内边距（class = “p-0”）。</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fillable</span>(</span>
<span id="cb44-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h1</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Left and right sidebar"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"px-3 my-3"</span>),</span>
<span id="cb44-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb44-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Left sidebar"</span>),</span>
<span id="cb44-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_sidebar</span>(</span>
<span id="cb44-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sidebar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebar</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Right sidebar"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">open =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>),</span>
<span id="cb44-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main contents"</span>,</span>
<span id="cb44-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb44-9">    ),</span>
<span id="cb44-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border_radius =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb44-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fillable =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb44-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"p-0"</span></span>
<span id="cb44-13">  )</span>
<span id="cb44-14">)</span></code></pre></div>
</section>
</section>
<section id="value-boxes" class="level4">
<h4 class="anchored" data-anchor-id="value-boxes"><a href="https://rstudio.github.io/bslib/articles/value-boxes/index.html">Value Boxes</a></h4>
<blockquote class="blockquote">
<p>value box 是通过 card 实现的。</p>
</blockquote>
<ul>
<li>可以利用 <a href="https://bslib.shinyapps.io/build-a-box/">Box App</a> 探索创建 value box 界面代码。</li>
</ul>
<section id="hello-value_box" class="level5">
<h5 class="anchored" data-anchor-id="hello-value_box">Hello value_box()</h5>
<p>与 bsicons 配合使用。也能使用 fontawesome 或 icons 包。</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value_box</span>(</span>
<span id="cb45-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I got"</span>,</span>
<span id="cb45-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"99 problems"</span>,</span>
<span id="cb45-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"music-note-beamed"</span>),</span>
<span id="cb45-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib ain't one"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"emoji-smile"</span>)),</span>
<span id="cb45-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hit me"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"suit-spade"</span>))</span>
<span id="cb45-7">)</span>
<span id="cb45-8"></span>
<span id="cb45-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value_box</span>(</span>
<span id="cb45-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I got"</span>,</span>
<span id="cb45-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"99 problems"</span>,</span>
<span id="cb45-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"music-note-beamed"</span>),</span>
<span id="cb45-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase_layout =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top right"</span>,</span>
<span id="cb45-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theme =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"secondary"</span>,</span>
<span id="cb45-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bslib ain't one"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"emoji-smile"</span>)),</span>
<span id="cb45-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hit me"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"suit-spade"</span>))</span>
<span id="cb45-17">)</span></code></pre></div>
</section>
</section>
<section id="动态生成显示内容" class="level4">
<h4 class="anchored" data-anchor-id="动态生成显示内容">动态生成显示内容</h4>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fixed</span>(</span>
<span id="cb46-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value_box</span>(</span>
<span id="cb46-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The current time"</span>,</span>
<span id="cb46-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time"</span>),</span>
<span id="cb46-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clock"</span>)</span>
<span id="cb46-6">  )</span>
<span id="cb46-7">)</span>
<span id="cb46-8"></span>
<span id="cb46-9">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb46-10">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb46-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invalidateLater</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb46-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.time</span>())</span>
<span id="cb46-13">  })</span>
<span id="cb46-14">}</span>
<span id="cb46-15"></span>
<span id="cb46-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<section id="多个-value-box" class="level5">
<h5 class="anchored" data-anchor-id="多个-value-box">多个 value box</h5>
<p>与 layout_column_wrap() 或者 layout_columns() 搭配使用。</p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1">vbs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb47-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value_box</span>(</span>
<span id="cb47-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1st value"</span>,</span>
<span id="cb47-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"123"</span>,</span>
<span id="cb47-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar-chart"</span>),</span>
<span id="cb47-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theme =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>,</span>
<span id="cb47-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The 1st detail"</span>)</span>
<span id="cb47-8">  ),</span>
<span id="cb47-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value_box</span>(</span>
<span id="cb47-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2nd value"</span>,</span>
<span id="cb47-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"456"</span>,</span>
<span id="cb47-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"graph-up"</span>),</span>
<span id="cb47-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theme =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"teal"</span>,</span>
<span id="cb47-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The 2nd detail"</span>),</span>
<span id="cb47-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The 3rd detail"</span>)</span>
<span id="cb47-16">  ),</span>
<span id="cb47-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value_box</span>(</span>
<span id="cb47-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3rd value"</span>,</span>
<span id="cb47-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"789"</span>,</span>
<span id="cb47-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pie-chart"</span>),</span>
<span id="cb47-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theme =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pink"</span>,</span>
<span id="cb47-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The 4th detail"</span>),</span>
<span id="cb47-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The 5th detail"</span>),</span>
<span id="cb47-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The 6th detail"</span>)</span>
<span id="cb47-25">  )</span>
<span id="cb47-26">)</span>
<span id="cb47-27"></span>
<span id="cb47-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb47-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"250px"</span>,</span>
<span id="cb47-30">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!!!</span>vbs</span>
<span id="cb47-31">)</span></code></pre></div>
<p>与图形组合显示：</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fillable</span>(</span>
<span id="cb48-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout_column_wrap</span>(</span>
<span id="cb48-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"250px"</span>,</span>
<span id="cb48-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb48-5">    vbs[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]], vbs[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb48-6">  ),</span>
<span id="cb48-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb48-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb48-9">    plotly<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_ly</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span>
<span id="cb48-10">  )</span>
<span id="cb48-11">)</span></code></pre></div>
</section>
<section id="expandable-sparklines" class="level5">
<h5 class="anchored" data-anchor-id="expandable-sparklines">Expandable sparklines</h5>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(plotly)</span>
<span id="cb49-2"></span>
<span id="cb49-3">sparkline <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_ly</span>(economics) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb49-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_lines</span>(</span>
<span id="cb49-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>psavert,</span>
<span id="cb49-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">span =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">I</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb49-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tozeroy'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span></span>
<span id="cb49-8">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb49-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layout</span>(</span>
<span id="cb49-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xaxis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">visible =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showgrid =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb49-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yaxis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">visible =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showgrid =</span> F, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>),</span>
<span id="cb49-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hovermode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>,</span>
<span id="cb49-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">l =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb49-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">font =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>),</span>
<span id="cb49-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paper_bgcolor =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transparent"</span>,</span>
<span id="cb49-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot_bgcolor =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transparent"</span></span>
<span id="cb49-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb49-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">displayModeBar =</span> F) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb49-19">  htmlwidgets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">onRender</span>(</span>
<span id="cb49-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function(el) {</span></span>
<span id="cb49-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      el.closest('.bslib-value-box')</span></span>
<span id="cb49-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        .addEventListener('bslib.card', function(ev) {</span></span>
<span id="cb49-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          Plotly.relayout(el, {'xaxis.visible': ev.detail.fullScreen});</span></span>
<span id="cb49-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        })</span></span>
<span id="cb49-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    }"</span></span>
<span id="cb49-26">  )</span>
<span id="cb49-27"></span>
<span id="cb49-28"></span>
<span id="cb49-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value_box</span>(</span>
<span id="cb49-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Personal Savings Rate"</span>,</span>
<span id="cb49-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7.6%"</span>,</span>
<span id="cb49-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Started at 12.6%"</span>),</span>
<span id="cb49-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Averaged 8.6% over that period"</span>),</span>
<span id="cb49-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peaked 17.3% in May 1975"</span>),</span>
<span id="cb49-35">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">showcase =</span> sparkline,</span>
<span id="cb49-36">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_screen =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb49-37">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theme =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"success"</span></span>
<span id="cb49-38">)</span></code></pre></div>
<blockquote class="blockquote">
<p>请注意，由于此示例是静态渲染的（在Shiny之外），我们使用htmlwidgets::onRender()来添加一些JavaScript，其有效地说：“当图表高度超过200像素时显示x轴；否则，隐藏它”。</p>
<p>那些不想编写JavaScript的你们可以通过shiny::getCurrentOutputInfo()实现类似的行为（即根据大小显示不同的图表），如文章在卡片部分所述。实际上，这里是一个Shiny应用的源代码，它有效地做了同样的事情，没有任何JavaScript（注意它如何利用其他getCurrentOutputInfo()值来避免将“白色”硬编码到Sparklines的颜色中）。</p>
</blockquote>
</section>
</section>
<section id="tooltips-popovers" class="level4">
<h4 class="anchored" data-anchor-id="tooltips-popovers"><a href="https://rstudio.github.io/bslib/articles/tooltips-popovers/index.html">Tooltips &amp; Popovers</a></h4>
<p>工具提示和弹出框是一种有用的方式，既可以以非干扰性的方式显示（工具提示）额外信息，也可以与之交互（弹出框）。以下激励示例将这些组件应用于实现一些有用的模式：</p>
<ol type="1">
<li>将tooltip()附加到卡片头部(card_header())中的“提示”图标上，使用户能够了解正在可视化的数据。</li>
<li>将popover()附加到卡片头部(card_header())中的“设置”图标上，使用户能够控制可视化的参数。</li>
<li>将popover()附加到卡片底部(card_footer())中的链接上，这不仅便于显示更多信息，还允许用户与该信息进行更多交互（例如，超链接）。</li>
</ol>
<section id="基础" class="level5">
<h5 class="anchored" data-anchor-id="基础">基础</h5>
<p>tooltip:</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(</span>
<span id="cb50-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn_tip"</span>,</span>
<span id="cb50-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Focus/hover here for tooltip"</span></span>
<span id="cb50-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb50-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tooltip</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span>)</span></code></pre></div>
<p>popover:</p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(</span>
<span id="cb51-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn_pop"</span>, </span>
<span id="cb51-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Click here for popover"</span></span>
<span id="cb51-4">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb51-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">popover</span>(</span>
<span id="cb51-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Popover message"</span>,</span>
<span id="cb51-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Popover title"</span></span>
<span id="cb51-8">  )</span></code></pre></div>
<p>最常用的方式，结合图标：</p>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 文字和图标触发</span></span>
<span id="cb52-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tooltip</span>(</span>
<span id="cb52-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">span</span>(</span>
<span id="cb52-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This text does trigger"</span>,</span>
<span id="cb52-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"info-circle"</span>)</span>
<span id="cb52-6">  ),</span>
<span id="cb52-7">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span>,</span>
<span id="cb52-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">placement =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span></span>
<span id="cb52-9">)</span>
<span id="cb52-10"></span>
<span id="cb52-11"></span>
<span id="cb52-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 图标触发</span></span>
<span id="cb52-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">span</span>(</span>
<span id="cb52-14">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This text doesn't trigger"</span>,</span>
<span id="cb52-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tooltip</span>(</span>
<span id="cb52-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"info-circle"</span>),</span>
<span id="cb52-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span>,</span>
<span id="cb52-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">placement =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span></span>
<span id="cb52-19">  )</span>
<span id="cb52-20">)</span></code></pre></div>
<p>结合输入控件的 label：</p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(</span>
<span id="cb53-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"txt"</span>,</span>
<span id="cb53-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tooltip</span>(</span>
<span id="cb53-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trigger =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb53-5">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input label"</span>,</span>
<span id="cb53-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"info-circle"</span>)</span>
<span id="cb53-7">    ),</span>
<span id="cb53-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span></span>
<span id="cb53-9">  )</span>
<span id="cb53-10">)</span></code></pre></div>
</section>
<section id="在-card-中使用" class="level5">
<h5 class="anchored" data-anchor-id="在-card-中使用">在 card 中使用</h5>
<p>结合 card：</p>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb54-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb54-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card header"</span>,</span>
<span id="cb54-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tooltip</span>(</span>
<span id="cb54-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"info-circle"</span>),</span>
<span id="cb54-6">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span></span>
<span id="cb54-7">    )</span>
<span id="cb54-8">  ),</span>
<span id="cb54-9">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card body..."</span></span>
<span id="cb54-10">)</span></code></pre></div>
<p>结合 card 和输入控件（很常用）：</p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1">gear <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">popover</span>(</span>
<span id="cb55-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gear"</span>),</span>
<span id="cb55-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"txt"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter input"</span>),</span>
<span id="cb55-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input controls"</span></span>
<span id="cb55-5">)</span>
<span id="cb55-6"></span>
<span id="cb55-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb55-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb55-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card header"</span>, gear,</span>
<span id="cb55-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d-flex justify-content-between"</span></span>
<span id="cb55-11">  ),</span>
<span id="cb55-12">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card body..."</span></span>
<span id="cb55-13">)</span></code></pre></div>
<p>引入超链接：</p>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1">foot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">popover</span>(</span>
<span id="cb56-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionLink</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"link"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card footer"</span>),</span>
<span id="cb56-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's a "</span>,</span>
<span id="cb56-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hyperlink"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://google.com"</span>)</span>
<span id="cb56-5">)</span>
<span id="cb56-6"></span>
<span id="cb56-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb56-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card header"</span>),</span>
<span id="cb56-9">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Card body..."</span>,</span>
<span id="cb56-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_footer</span>(foot)</span>
<span id="cb56-11">)</span></code></pre></div>
</section>
<section id="可编辑-card-header" class="level5">
<h5 class="anchored" data-anchor-id="可编辑-card-header">可编辑 card header</h5>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb57-1">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fixed</span>(</span>
<span id="cb57-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card</span>(</span>
<span id="cb57-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">card_header</span>(</span>
<span id="cb57-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">popover</span>(</span>
<span id="cb57-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uiOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"card_title"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inline =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb57-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Provide a new title"</span>,</span>
<span id="cb57-7">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"card_title"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"An editable title"</span>)</span>
<span id="cb57-8">      )</span>
<span id="cb57-9">    ), </span>
<span id="cb57-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The card body..."</span></span>
<span id="cb57-11">  )</span>
<span id="cb57-12">)</span>
<span id="cb57-13"></span>
<span id="cb57-14">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb57-15">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>card_title <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderUI</span>({</span>
<span id="cb57-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb57-17">      input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>card_title, </span>
<span id="cb57-18">      bsicons<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pencil-square"</span>)</span>
<span id="cb57-19">    )</span>
<span id="cb57-20">  })</span>
<span id="cb57-21">}</span>
<span id="cb57-22"></span>
<span id="cb57-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</section>
<section id="可编程控制显示" class="level5">
<h5 class="anchored" data-anchor-id="可编程控制显示">可编程控制显示</h5>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb58-2"></span>
<span id="cb58-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fixed</span>(</span>
<span id="cb58-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's a tooltip:"</span>,</span>
<span id="cb58-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tooltip</span>(</span>
<span id="cb58-6">    bsicons<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"info-circle"</span>),</span>
<span id="cb58-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span>, </span>
<span id="cb58-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tooltip"</span></span>
<span id="cb58-9">  ),</span>
<span id="cb58-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"show_tooltip"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Show tooltip"</span>),</span>
<span id="cb58-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hide_tooltip"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hide tooltip"</span>)</span>
<span id="cb58-12">)</span>
<span id="cb58-13"></span>
<span id="cb58-14">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb58-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>show_tooltip, {</span>
<span id="cb58-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toggle_tooltip</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tooltip"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb58-17">  })</span>
<span id="cb58-18"></span>
<span id="cb58-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hide_tooltip, {</span>
<span id="cb58-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">toggle_tooltip</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tooltip"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb58-21">  })</span>
<span id="cb58-22">}</span>
<span id="cb58-23"></span>
<span id="cb58-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<p>更新内容：</p>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb59-2"></span>
<span id="cb59-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">page_fixed</span>(</span>
<span id="cb59-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here's a tooltip:"</span>,</span>
<span id="cb59-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tooltip</span>(</span>
<span id="cb59-6">    bsicons<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bs_icon</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"info-circle"</span>),</span>
<span id="cb59-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span>,</span>
<span id="cb59-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tooltip"</span></span>
<span id="cb59-9">  ),</span>
<span id="cb59-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tooltip_msg"</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tooltip message"</span>)</span>
<span id="cb59-11">)</span>
<span id="cb59-12"></span>
<span id="cb59-13">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb59-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tooltip_msg, {</span>
<span id="cb59-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_tooltip</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tooltip"</span>, input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tooltip_msg)</span>
<span id="cb59-16">  })</span>
<span id="cb59-17">}</span>
<span id="cb59-18"></span>
<span id="cb59-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</section>
<section id="popovers-vs-modals" class="level5">
<h5 class="anchored" data-anchor-id="popovers-vs-modals">Popovers vs modals</h5>
<p>那些已经熟悉Shiny的modalDialog()/showModal()的人可能会想知道何时使用popover()更合适。一般来说，modalDialog()更适合“阻塞”交互（即，用户在与其他任何内容交互之前必须或应该与模态框交互）。相比之下，popover()更适合“非阻塞”交互（即，用户可以同时与popover和其他UI元素交互）。话虽如此，popover并不总是很好地扩展到更大的消息/菜单。在这些情况下，可以考虑使用<a href="https://getbootstrap.com/docs/5.3/components/offcanvas/">offcanvas菜单</a>（bslib目前不支持offcanvas菜单，但它已在开发路线图上）。</p>
</section>
</section>
</section>
</section>
<section id="shiny.router-a-minimalistic-router-for-your-shiny-apps" class="level2">
<h2 class="anchored" data-anchor-id="shiny.router-a-minimalistic-router-for-your-shiny-apps"><a href="https://appsilon.github.io/shiny.router/index.html">shiny.router | A minimalistic router for your Shiny apps</a></h2>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb60-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny.router)</span>
<span id="cb60-3"></span>
<span id="cb60-4">root_page <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h2</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Root page"</span>))</span>
<span id="cb60-5">other_page <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h3</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Other page"</span>))</span>
<span id="cb60-6"></span>
<span id="cb60-7">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb60-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Router demo"</span>,</span>
<span id="cb60-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">router_ui</span>(</span>
<span id="cb60-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, root_page),</span>
<span id="cb60-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>, other_page)</span>
<span id="cb60-12">  )</span>
<span id="cb60-13">)</span>
<span id="cb60-14"></span>
<span id="cb60-15">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb60-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">router_server</span>()</span>
<span id="cb60-17">}</span>
<span id="cb60-18"></span>
<span id="cb60-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<blockquote class="blockquote">
<p>目前的经验是一定会先跳到主页面，然后弹到对应的标签，有点页面标签的感觉（可能跟 shiny 框架也有关系？）。 因此在跳转上有性能开销</p>
</blockquote>
<section id="basics" class="level3">
<h3 class="anchored" data-anchor-id="basics">Basics</h3>
<ul>
<li><a href="https://github.com/Appsilon/shiny.router/tree/master/examples">examples</a></li>
</ul>
<p>Use <code>get_query_param</code> to catch parameters from URL.</p>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb61-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">router_server</span>()</span>
<span id="cb61-3"></span>
<span id="cb61-4">  component <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>({</span>
<span id="cb61-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_query_param</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>add)) {</span>
<span id="cb61-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb61-7">    }</span>
<span id="cb61-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_query_param</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>add)</span>
<span id="cb61-9">  })</span>
<span id="cb61-10"></span>
<span id="cb61-11">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>power_of_input <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderUI</span>({</span>
<span id="cb61-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HTML</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(</span>
<span id="cb61-13">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I display input increased by &lt;code&gt;add&lt;/code&gt; GET parameter from app url and pass result to &lt;code&gt;output$power_of_input&lt;/code&gt;: "</span>,</span>
<span id="cb61-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>int) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">component</span>()))</span>
<span id="cb61-15">  })</span>
<span id="cb61-16">}</span></code></pre></div>
</section>
<section id="use-in-rhino" class="level3">
<h3 class="anchored" data-anchor-id="use-in-rhino">Use in Rhino</h3>
<ol type="1">
<li>Import shiny.router functions:</li>
</ol>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># app/main.R</span></span>
<span id="cb62-2"></span>
<span id="cb62-3">box<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(</span>
<span id="cb62-4">  shiny[bootstrapPage, moduleServer, NS],</span>
<span id="cb62-5">  shiny.router[router_ui, router_server, route]</span>
<span id="cb62-6">)</span>
<span id="cb62-7"></span>
<span id="cb62-8">...</span></code></pre></div>
<ol start="2" type="1">
<li><p>Wrap UI modules in router_ui:</p></li>
<li><p>Add router_server to the server part of the main module:</p></li>
</ol>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb63-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># app/main.R</span></span>
<span id="cb63-2"></span>
<span id="cb63-3">box<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(</span>
<span id="cb63-4">  shiny[bootstrapPage, moduleServer, NS],</span>
<span id="cb63-5">  shiny.router[router_ui, router_server, route]</span>
<span id="cb63-6">)</span>
<span id="cb63-7"></span>
<span id="cb63-8">box<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(</span>
<span id="cb63-9">  app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>view<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chart,</span>
<span id="cb63-10">  app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>view<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>table,</span>
<span id="cb63-11">)</span>
<span id="cb63-12"></span>
<span id="cb63-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span id="cb63-14">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(id) {</span>
<span id="cb63-15">  ns <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NS</span>(id)</span>
<span id="cb63-16"></span>
<span id="cb63-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrapPage</span>(</span>
<span id="cb63-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">router_ui</span>(</span>
<span id="cb63-19">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>, table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>))),</span>
<span id="cb63-20">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>, chart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>)))</span>
<span id="cb63-21">    )</span>
<span id="cb63-22">  )</span>
<span id="cb63-23">}</span>
<span id="cb63-24"></span>
<span id="cb63-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span id="cb63-26">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(id) {</span>
<span id="cb63-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moduleServer</span>(id, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb63-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">router_server</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>)</span>
<span id="cb63-29"></span>
<span id="cb63-30">    data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rhino<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>rhinos</span>
<span id="cb63-31"></span>
<span id="cb63-32">    table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)</span>
<span id="cb63-33">    chart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">server</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)</span>
<span id="cb63-34">  })</span>
<span id="cb63-35">}</span></code></pre></div>
<p>Each module needs to be called inside the route function. We had to provide the default route (“table”) that will be displayed once someone opens the application.</p>
<ol start="4" type="1">
<li>Change pages from UI (navigation)</li>
</ol>
<blockquote class="blockquote">
<p>Use <code>route_link()</code> &amp; navbar</p>
</blockquote>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># app/main.R</span></span>
<span id="cb64-2"></span>
<span id="cb64-3">box<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(</span>
<span id="cb64-4">  shiny[a, bootstrapPage, moduleServer, tags, NS],</span>
<span id="cb64-5">  shiny.router[router_ui, router_server, route, route_link],</span>
<span id="cb64-6">)</span>
<span id="cb64-7"></span>
<span id="cb64-8">box<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use</span>(</span>
<span id="cb64-9">  app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>view<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>chart,</span>
<span id="cb64-10">  app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>view<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>table,</span>
<span id="cb64-11">)</span>
<span id="cb64-12"></span>
<span id="cb64-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span id="cb64-14">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(id) {</span>
<span id="cb64-15">  ns <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NS</span>(id)</span>
<span id="cb64-16"></span>
<span id="cb64-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrapPage</span>(</span>
<span id="cb64-18">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nav</span>(</span>
<span id="cb64-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"navbar"</span>,</span>
<span id="cb64-20">      tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ul</span>(</span>
<span id="cb64-21">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nav navbar-nav"</span>,</span>
<span id="cb64-22">        tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">li</span>(</span>
<span id="cb64-23">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Table"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route_link</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>))</span>
<span id="cb64-24">        ),</span>
<span id="cb64-25">        tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">li</span>(</span>
<span id="cb64-26">          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chart"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">href =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route_link</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>))</span>
<span id="cb64-27">        )</span>
<span id="cb64-28">      )</span>
<span id="cb64-29">    ),</span>
<span id="cb64-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">router_ui</span>(</span>
<span id="cb64-31">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>, table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>))),</span>
<span id="cb64-32">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>, chart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>)))</span>
<span id="cb64-33">    )</span>
<span id="cb64-34">  )</span>
<span id="cb64-35">}</span>
<span id="cb64-36"></span>
<span id="cb64-37">...</span></code></pre></div>
<ol start="5" type="1">
<li><p><a href="https://appsilon.github.io/shiny.router/articles/rhino.html#change-pages-from-the-server">Change pages from the server, by <code>change_page()</code></a></p></li>
<li><p><a href="https://appsilon.github.io/shiny.router/articles/rhino.html#query-parameters">Read or update query parameters</a></p></li>
<li><p><a href="https://appsilon.github.io/shiny.router/articles/rhino.html#page">404 page</a></p></li>
</ol>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb65-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">router_ui</span>(</span>
<span id="cb65-2">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, intro<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intro"</span>))),</span>
<span id="cb65-3">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>, table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"table"</span>))),</span>
<span id="cb65-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">route</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>, chart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chart"</span>))),</span>
<span id="cb65-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">page_404 =</span> page_404<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ui</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"page_404"</span>))</span>
<span id="cb65-6">    )</span></code></pre></div>
</section>
</section>
<section id="reactable.extras" class="level2">
<h2 class="anchored" data-anchor-id="reactable.extras"><a href="https://appsilon.github.io/reactable.extras/index.html">reactable.extras</a></h2>
<p>之前在 shiny 开发使用过 <a href="https://glin.github.io/reactable/index.html">reactable</a>，有非常多很棒的特性。在查阅时，发现了<a href="https://appsilon.github.io/reactable.extras/index.html">reactable.extras</a>，组合两者将能实现更丰富的特性，特别是 <a href="https://appsilon.github.io/reactable.extras/articles/tutorial/server-side-processing.html">Server-Side Processing</a>，<strong>我会着重探索和学习下相关的经验</strong>。</p>
</section>
<section id="data.validator---使用数据前进行校验" class="level2">
<h2 class="anchored" data-anchor-id="data.validator---使用数据前进行校验"><a href="https://appsilon.github.io/data.validator/">data.validator</a> - 使用数据前进行校验</h2>
<p>这种比较应该适合来自数据库（或者类似数据操作结果）的流数据。</p>
<p><img src="https://appsilon.github.io/data.validator/reference/figures/workflow.png" class="img-fluid"></p>
</section>
<section id="shiny.react" class="level2">
<h2 class="anchored" data-anchor-id="shiny.react"><a href="https://appsilon.github.io/shiny.react/index.html">shiny.react</a></h2>
<blockquote class="blockquote">
<p>shiny.fluent, shiny.blueprint 基于它构建，可以用类似的特性。</p>
</blockquote>
<p>There are three steps to add a React component to your Rhino application:</p>
<ol type="1">
<li>Define the component using <a href="https://react.dev/learn/writing-markup-with-jsx">JSX</a>.</li>
<li>Declare the component in R.</li>
<li>Use the component in your application.</li>
</ol>
<p><a href="https://appsilon.github.io/rhino/articles/tutorial/use-react-in-rhino.html#defining-the-component">Example: add a simple Reveal component</a>.</p>
</section>
<section id="tapyr---shiny-for-python-application-template" class="level2">
<h2 class="anchored" data-anchor-id="tapyr---shiny-for-python-application-template"><a href="https://appsilon.github.io/tapyr-docs/">Tapyr - Shiny for Python Application Template</a></h2>
<p>看着像是 rhino 的 Python 类似物，如果需要可以推荐探索下使用。</p>
</section>
<section id="shiny.i18n---国际化翻译" class="level2">
<h2 class="anchored" data-anchor-id="shiny.i18n---国际化翻译"><a href="https://appsilon.github.io/shiny.i18n/">shiny.i18n</a> - 国际化翻译</h2>
</section>
<section id="shiny.semantic" class="level2">
<h2 class="anchored" data-anchor-id="shiny.semantic"><a href="https://appsilon.github.io/shiny.semantic/index.html">shiny.semantic</a></h2>
<p>诸多控件的新语义化实现，看起来非常值得尝试，通过 reference 和 <a href="https://connect.appsilon.com/shiny-semantic-components/">components</a> 可以检索和了解使用。</p>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb66-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny.semantic)</span>
<span id="cb66-2">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">semanticPage</span>(</span>
<span id="cb66-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ui raised segment"</span>,</span>
<span id="cb66-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">div</span>(</span>
<span id="cb66-5">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ui green ribbon label"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Link"</span>),</span>
<span id="cb66-6">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lorem ipsum, lorem ipsum, lorem ipsum"</span>),</span>
<span id="cb66-7">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"button"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Click"</span>)</span>
<span id="cb66-8">    )</span>
<span id="cb66-9">  )</span>
<span id="cb66-10">)</span></code></pre></div>
<ul>
<li><a href="https://fomantic-ui.com/introduction/getting-started.html">Fomantic UI documentation</a></li>
<li>注意这是一套完全与 bootstrap 的 UI 系统，所以不推荐组合使用（默认 bootstrap 关闭），因而尝试它就得要有取舍了。</li>
</ul>
</section>
<section id="shiny.gosling-r-shiny-wrapper-for-gosling.js---grammar-based-toolkit-for-scalable-and-interactive-genomics-data-visualization" class="level2">
<h2 class="anchored" data-anchor-id="shiny.gosling-r-shiny-wrapper-for-gosling.js---grammar-based-toolkit-for-scalable-and-interactive-genomics-data-visualization"><a href="https://appsilon.github.io/shiny.gosling/">shiny.gosling | R Shiny wrapper for Gosling.js - Grammar-based Toolkit for Scalable and Interactive Genomics Data Visualization</a></h2>
<p>Gosling.js 是一个很强大的交互式可视化基因组数据的工具，<a href="https://gosling-lang.org/examples/">这里</a>提供了很多示例，非常惊艳，如果想结合 web 和基因组数据做一些工作，是非常值得尝试和深入学习的。</p>
<ul>
<li><a href="https://github.com/Appsilon/shiny.gosling/tree/main/inst/examples">shiny.gosling 示例</a></li>
</ul>
</section>
<section id="shiny.fluent-microsoft-fluent-ui-for-shiny-apps" class="level2">
<h2 class="anchored" data-anchor-id="shiny.fluent-microsoft-fluent-ui-for-shiny-apps"><a href="https://appsilon.github.io/shiny.fluent/">shiny.fluent | Microsoft Fluent UI for Shiny Apps</a></h2>
<blockquote class="blockquote">
<p>You should expect using shiny.fluent to be somewhat more complex than vanilla Shiny or shiny.semantic (at some point you will likely want to browse the original Fluent UI documentation), but you get more power, flexibility and better UI in return.</p>
</blockquote>
<p>Use <code>shiny.fluent::runExample()</code> to list all available examples.</p>
<ul>
<li><a href="https://appsilon.github.io/shiny.fluent/articles/st-shiny-fluent-and-rhino.html">Build a Rhino application using shiny.fluent</a></li>
</ul>


</section>

 ]]></description>
  <category>R</category>
  <category>note</category>
  <category>shiny</category>
  <category>Web-dev</category>
  <guid>https://shixiangwang.github.io/posts/2024-12-03-rhino-and-shiny-dev-note/</guid>
  <pubDate>Mon, 02 Dec 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>读《自我突围》</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-27-ziwotuwei/</link>
  <description><![CDATA[ 





<p>最近在读施一公院士的首部作品《自我突围》，这本书介绍了他的人生经历、所思所想、建言献策等，是一部了解他人生观，以及相关人物的不错作品。通过这本图书，我也是首次走进了施一公先生的人生图景，旁观了他对于三观的体验与感悟。</p>
<p>整体阅读下来，收获还是颇多的，特别是对于我这种职业真正意义上刚起步的人来说，有莫大的调解与安慰效果，也从中学习到了很多实际的经验。当然了，施一公先生关于人才的表述我觉得很有必要记录一下：当前我国是人才大国，但不是人才强国，我们国家的应试教育培养出来的人才“均值高”但“方差小”，所以实际上当前完全不缺处理某个专业事务的“项目人才”，而是缺乏“高层次”、“领军”人才推动领域和国家的发展。反思自身，虽然我还处于青椒的播种期，做的和想的还比较low、比较局限，但思想上一定要跳脱出当前“唯人才”、“唯项目”等等焦躁的社会文化环境，脚踏实地仰望星空，一步一个脚印地往前走，做科研，面对不确定是常态，也是应当学会的能力，心中有大局，做好自己能做的，在有能力的时候再进行发挥。如果确实走不下去，那也是精精彩彩地体验过了。</p>
<p>最后记录下对于教研（无论是老师还是学生）直接有益的几篇文章，方便备查和阅读：</p>
<ol type="1">
<li><a href="https://mp.weixin.qq.com/s/O_8hc3U_aLUhA4eFCFG4vw">做诚实的学问，做正直的人</a> | <a href="https://mp.weixin.qq.com/s/_xSP2XdK5WCs3CKxXwTWFg">视频</a></li>
<li><a href="https://mp.weixin.qq.com/s/qK3KFQFHxOuhfzdl6jvs9w">学生如何提高专业英文阅读能力？</a></li>
<li><a href="https://mp.weixin.qq.com/s/pm0Rny5AQTqna5HN61RnSA">如何提高英文的科研写作能力?</a></li>
</ol>
<p>最后感谢有思想、理想的现实主义者、科学大家施一公先生。</p>



 ]]></description>
  <category>note</category>
  <category>academic</category>
  <category>edu</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-27-ziwotuwei/</guid>
  <pubDate>Tue, 26 Nov 2024 16:00:00 GMT</pubDate>
</item>
<item>
  <title>冷门的追求 - 书摘</title>
  <dc:creator>Shixiang Wang</dc:creator>
  <link>https://shixiangwang.github.io/posts/2024-11-22-unfashionable-pursuits/</link>
  <description><![CDATA[ 





<p>今天无意中通过知乎看到一篇非常引入入胜的演讲文章，从题目到内容都发人深省，难得的是，这是1981年的观点，我却觉得丝毫不过时。未免记忆和资料丢失，我这里人工搬运到自己的网站，以后有机会再多看看，警惕自身、塑造远见。</p>
<p>以下是引文（来源：<a href="https://txyyss.wordpress.com/2024/11/07/unfashionable-pursuits/" class="uri">https://txyyss.wordpress.com/2024/11/07/unfashionable-pursuits/</a>）：</p>
<hr>
<p>何夕的科幻小说《伤心者》在科幻迷心目中享有盛誉，但里面描写的毕竟是虚构的人物和故事。而 1981 年 8 月 24 日在亚历山大-洪堡基金会与新泽西州普林斯顿高等研究院合作举办的洪堡获奖者两国座谈会上，弗里曼·戴森（Freeman J. Dyson）发表了题为 Unfashionable Pursuits 的演讲。感谢现代科技，我们现在仍然可以<a href="https://umedia.lib.umn.edu/item/p16022coll171:3633">听到他的演讲</a>。在我看来，这篇演讲稿举的例子胜过《伤心者》里的主人公，因为那都是真实发生过的。而演讲的主旨在于号召独立的科研机构向冷门的科学有所倾斜，如果确实照此实践下去，会大大降低《伤心者》里悲剧发生的可能性。</p>
<p>我想办法找到了演讲稿，在 ChatGPT 的帮助下把它翻译成了中文，并对照原文做了修改使得翻译更加准确。</p>
<section id="引言" class="level2">
<h2 class="anchored" data-anchor-id="引言">引言</h2>
<p>我很高兴今天能作为高等研究院的代表，向洪堡基金会的校友们致辞，因为高等研究院和洪堡基金会都在致力于国际层面的科学支持，并面临着相似的困境和挑战。我们都在延续亚历山大·冯·洪堡在 150 年前建立的传统。为了了解洪堡的贡献，我查阅了 1910 年第十一版《不列颠百科全书》，找到了科学史学家艾格尼丝·克拉克撰写的精彩文章。如果查阅的是百科全书的后续版本，克拉克的描述就只剩些零散的片段了。在文章中，她描述了洪堡在创建第一个国际气象和磁场观测站网络方面的工作，并以这样一句振奋人心的话作为结尾：“因此，现代文明最崇高的成果之一——国家间的科学联合，首次通过他的努力得以成功组织起来。”这正是我们所努力的方向：高等研究院和洪堡基金会，正在追随洪堡的优秀榜样，试图在我们这个时代加强和拓展国家间的科学合作。</p>
</section>
<section id="科学中的潮流" class="level2">
<h2 class="anchored" data-anchor-id="科学中的潮流">科学中的潮流</h2>
<p>我决定讨论科学中的“潮流”问题，因为这对整个科学界，特别是对高等研究院和洪堡基金会来说，是个日益重要的严肃问题。我将首先谈谈我们在高等研究院对这一问题的看法，然后谈谈我们可以从更长时间尺度的科学历史中学到的教训，最后我将简要讨论我们如何在未来更明智地应对这一问题。</p>
<p>对一位才能一般的年轻科学家来说，跟随大潮流是一条明智之路，这一事实自古以来如此，现在更是如此。任何没有非凡天赋或运气的年轻科学家，首先关心的是找到并保住一份工作。要找到并保住工作，你必须在那些控制就业市场的“权威”感兴趣的科学领域中做出合格的研究。而这些“权威”们认为有趣的科学问题，几乎就是我们所说的“热门”问题。如今，工作的分配通常由一组权威组成的委员会控制，委员会比个人更难脱离当下的流行趋势。因此，那些关心自身生存的年轻科学家往往会紧跟常规路径。那些高等学府提供了保障和提升机会给那些熟练追随潮流的人，而对于那些不追随潮流的人，机会则微乎其微。</p>
<p>我们的高等研究院也不例外。当我 34 年前第一次以访问成员身份来到这里时，主导的“权威”是罗伯特·奥本海默。他决定物理学的哪些领域值得追求。他的品味总是和最新的潮流一致。那时我年轻而有抱负，我向他提交了一篇快速完成的，涉及热门问题的工作，并因此获得了一份永久职位。这就是当时高等研究院的情况，现在依然如此。熟悉高等研究院历史的人可能会反驳说，毕竟高等研究院也给了库尔特·哥德尔一个永久职位。这确实是事实。哥德尔是我们这个世纪少数无可争议的天才之一，是唯一能与爱因斯坦平起平坐的同事。哥德尔从事的数学领域极其冷门，随着时间的推移，他的研究方向变得更加冷门。高等研究院有理由为他的加入而感到自豪。不过我们也必须承认一个事实：从哥德尔来到这里生活工作直到他成为教授，整整花了 14 年时间。哥德尔是如此独立且顽固，甚至可以说我们因为授予他教授头衔也值得一些肯定，尽管经过了 14 年的犹豫。迟做总比不做好。</p>
<p>今天来到高等研究院的年轻物理学家们，比 30 年前的我面临的压力要大得多。首先，他们大多数人带着政府合同资助而来，这些合同法律上要求他们在一定时间内从事某一特定科学领域的工作。当然，我们不会对合同的字面条款斤斤计较。国家科学基金会和能源部的合同管理人员是通情达理的人，他们允许我们在解释义务时有一定的灵活性。如果有些带合同资助的成员选择在与合同无关的领域工作，我们也不必把他们赶出门去。不符合合同资助内容的人员通常可以依靠研究院的资金支持。但是，合同仍然是一项严肃的限制。合同在总体上规定了高等研究院物理学院客座成员的工作领域，定义了物理学主流研究的方向。这也不可避免地影响了我们邀请的成员，他们的研究工作往往与某一合同内容相契合。</p>
<p>在工作了30年后，我现在已成为“权威”之一。我试图以一种模糊而微弱的方式，鼓励年轻物理学家在流行领域之外探索。我试图维持一些没有合同支持的研究领域。我希望保持这个研究院对独立和不合常规的精神开放，并为下一位像库尔特·哥德尔那样的人敞开大门。不过我必须承认，我对抗潮流的努力，效果大概就像我那著名的前辈克努特大抵试图阻挡大西洋潮水一样。如今，年轻人受到推动他们追随潮流的力量比合同的字面条款和“权威”的权力更为强大。驱使年轻人追逐热门领域的力量是同侪压力以及追逐的乐趣本身。他们知道“行动”在哪里，并渴望成为其中一部分。他们知道自己只有短暂的时间来证明自己。他们明白，想在有限的时间里取得成就，最佳的途径是随大流，去摘取那些已经成熟的科学果实。</p>
<p>年轻科学家们追求快速成功和回报本身并非坏事。将努力集中在流行的专业化领域并不一定有害。毕竟，这些流行问题之所以成为潮流，不是因为某个时尚设计师的随意决定，而是因为大多数科学家认为这些问题重要。通常，大多数人的判断是有依据的。流行的领域通常是产生重大发现的领域。年轻科学家进入这些领域，希望取得轰动性发现，这并没有错。事实上，研究院的日常生活正是因为流行领域的群体性研究而更加充实。当你在流行领域探索时，每一项小的成功和短暂的胜利都可以在午餐或研讨会上与朋友分享。如果没有这种对流行问题的共同兴趣，没有这种消息和传闻的分享，我们的生活会变得单调许多。</p>
<p>那么，为什么我不满？为什么我对年轻人做着我当年也做过的事情表示不满？我不满是因为我认为我们不应将所有的精力都放在流行的研究上。流行的研究有其用处，重要且令人兴奋。我们可以为年轻人专注于流行研究并取得成果而感到自豪。我们可以预见，他们中的大多数人总会出于我理解和尊重的原因，选择流行的研究方向。但我仅仅想说，我们这里也应当为那些不做流行研究的少数人提供空间。我们应当寻找并鼓励那些不符合主流模式的少数个体。我们应当在接纳成员时，稍微偏向那些不拘一格、不循常规的精神。如果我们不为从事非流行科学的人提供家园和工作空间，那么谁会呢？</p>
</section>
<section id="古代历史" class="level2">
<h2 class="anchored" data-anchor-id="古代历史">古代历史</h2>
<p>非流行科学的类型有很多种，支持这些科学的一个主要困难就是选择问题。非流行科学千姿百态，没有统一的结构。我来举一个例子。上周，我在普林斯顿大学的 Forrestal 校区散步时，看到两名研究生静静地坐在一片草地中央。起初我以为他们只是享受午后的阳光和宁静，但当我走近时，发现他们正全神贯注地进行一些需要稳健双手和不被打扰的精细操作。走近后，我看见他们正在忙着把小铅块粘在蜜蜂的背上。我默默地注视着他们，直到他们完成工作，然后与他们一起走回他们实验用的蜂巢，那是一个配备有相机和录像机的地方。他们正在改进并扩展卡尔·冯·弗里希关于蜜蜂舞蹈沟通系统的经典实验。他们发现，当蜜蜂找到离蜂巢较远的蜜源时，它们的舞蹈会更为激烈且精确。不幸的是，大多数蜜蜂会在靠近蜂巢处找到蜜源，返回时只会进行简短而随意的舞蹈。这些学生想要精确观察蜜蜂的舞蹈，于是他们找到了一种方法来诱使蜜蜂更为激烈地跳舞。背负 45 毫克铅块的蜜蜂会以为自己飞了很远的距离，尽管实际上只飞了很短的距离。蜜蜂通过飞行的努力程度来衡量飞行距离，因此负重的蜜蜂在每次找到蜜源后都会精确地跳舞。</p>
<p>这是非流行科学的一个典型例子，就在我们普林斯顿的门口进行着。我并不是建议高等研究院应该支持一个昆虫学学院。但这个蜜蜂实验的例子展示了非流行科学的所有特征：小规模、目标的多样性、个性化的风格以及某种表面上的不严肃性。</p>
<p>为了明确非流行科学的真正意义和持久价值，我回到我所擅长的领域，即数学物理。数学物理是试图通过纯数学的严谨风格和方法来深刻理解物理现象的学科。它位于物理学和数学的交界处。数学物理学家的目标不是定量地计算现象，而是定性地理解它们。他们用定理和证明进行研究，而不是用数字和计算机。他们的目标是通过数学上的精确性来阐明物理理论建立的概念的含义。</p>
<p>数学物理具有三个特点，使其在本次讨论中具有特别的相关性。首先，它在更大的图景中很重要，为物理学的更实用的领域提供基本的概念和词汇。其次，它发展缓慢，通常需要 50 到 100 年才能将一个新概念从起源发展到有效应用。第三，它几乎总是非流行的，因为它的发展节奏比科学潮流慢了大约 10 倍。由于它的非流行性，欧洲对它的重视和支持一直高于美国。</p>
<p>以一位对现代物理学发展至关重要的伟大数学物理学家为例，我想提到索菲斯·李（Sophus Lie）。李去世已有80年。他的主要工作是在 1870 年代到 1880 年代完成的，但他的思想直到最近 20 年才主导了粒子物理学家的思维。李是第一个理解并明确指出物理学原理具有群论起源的人。他几乎凭一己之力构建了一个庞大而美丽的连续群理论体系，他预见到它有朝一日会成为物理学的基础。现在，100 年后，每一位以对称性破缺和不破缺来分类粒子的物理学家，无论是否意识到，都在使用李的语言。然而，在他有生之年，李的思想却并不流行，数学家们对其理解甚少，物理学家更是完全不理解。费利克斯·克莱因是少数几个理解并支持他的著名数学家之一。</p>
<p>李是那些似乎总是运气不佳的人之一。1870 年，当普法战争爆发时，他正在法国四处游历。他是挪威人，但说法语时带有类似普鲁士口音的腔调。所以枫丹白露的爱国市民误认为他是普鲁士间谍，把他关进了监狱。与此同时，法国战败，形势变得愈加混乱。李静静地坐在牢房中，继续进行他的新数学发现，直到他的法国朋友们终于找到他所在的地方，成功将他释放出来。在出版于世纪之交的劳斯·鲍尔的数学史中，李的工作记录以一段哀伤的语调结尾：“李似乎因为自己的成果未得到普遍认可而感到失望和痛苦……他总是为自己所认为的对其成就的忽视而耿耿于怀，他生命最后十年的幸福也因此受到很大影响。”</p>
<p>另一位在他那个时代更加非流行的伟大数学物理学家是赫尔曼·格拉斯曼（Hermann Grassmann）。作为一名位于斯德丁的中学教师，他在 1844 年出版了一部名为《线性扩展理论》的作品，首次引入了向量、向量空间和非交换代数的基本概念。所有这些概念在 20 世纪的物理学中都具有核心地位，但在 19 世纪却不然。在他所处的世纪里，格拉斯曼始终是个默默无闻的中学教师，未被当时的学术权威们所重视。但他比索菲斯·李更具有韧性。格拉斯曼并未像李那样因未得到数学界的认可而怨天尤人，而是另辟蹊径，开始学习梵文，并以翻译《梨俱吠陀》为德语版获得了一定的声誉。或许，如果命运注定你是未被认可的数学天才，那么在中学教书生计比在大学任职对你的健康更有益。</p>
<p>在为这次会议准备发言时，我去高等研究院的图书馆，惊喜地发现那里保存着 1878 年版的《扩展理论》，封面上用铅笔写着爱因斯坦的导师、第一位理解相对论的数学家闵可夫斯基的名字。1878 年版有一篇格拉斯曼的序言，他仍在斯德丁，乐观地表达了希望这次新版能比 34 年前的首版更受学术界关注。在序言的结尾处，有一行脚注写道：“作者在印刷过程中去世”。直到 1890 年代，还是靠那位始终慷慨地为非流行的事业而战的费利克斯·克莱因，才促成了格拉斯曼的官方认可及其全集的出版。</p>
<p>另一个数学物理学领域的重要发现是规范场的概念，由赫尔曼·外尔（Hermann Weyl）于 1918 年提出。这个概念仅用了 50 年就成为现代粒子物理学的基本概念之一。量子色动力学，1981 年最流行的粒子物理学理论，在概念上无非是李群代数和外尔的规范场的结合。外尔的发现历史与李群和格拉斯曼代数的历史截然不同。外尔既不默默无闻，也未被忽视，他在 1918 年从事物理学中最时髦的领域，即新兴的广义相对论。他发明了规范场，作为统一引力和电磁学的解决方案。在短短几个月内，规范场理论登上了科学潮流的顶峰。然而，外尔和其他人很快发现，规范场并未达到预期的效果。规范场并未能实现外尔发明它的初衷，便迅速变得不再流行，几乎被遗忘。但在接下来的 50 年里，逐渐清楚的是，规范场在另一个不同背景下非常重要，尤其是在量子电动力学及量子色动力学的新近发展中得到了应用。普林斯顿的同事杨振宁和他的学生米尔斯于 1954 年，在外尔去世前一年，完成了规范场复兴的关键步骤。没有证据表明外尔知道或在意杨和米尔斯如何处理他的心血结晶。</p>
<p>关于规范场的历史充满了讽刺。一个为了实现短暂目的而被发明的热门概念，在经历了漫长的冷落期后，最终成为物理学的基石。在数学物理的悠久历史中，这样的讽刺并不少见。哈密顿发明的四元数，曾被誉为 19 世纪物理学问题的灵丹妙药，随后被弃之不用，却在 1920 年代的量子力学中以自旋矩阵的形式复活，如今又在 1980 年代的夸克场理论中登上巅峰。高斯发明的微分几何，最初是他在测地和制图工作中的副产品，50 年后被黎曼赋予抽象的通用形式，并成为爱因斯坦引力理论的概念基础。</p>
<p>这些故事中有几个共同点：一个是时间跨度，通常超过一个人的寿命长度；另一个是最终结果的完全不可预测性。发明关键概念的科学家几乎从未预见到这些概念在未来会被应用于何种物理背景。</p>
<p>讲述了这些历史例子之后，我认为已经足够证明我的观点：非流行的人和非流行的思想在科学进步中经常起着决定性的作用。我认为未来科学思想的发展模式不会与过去有太大不同。我们可以预见，在未来，非流行的思想将像过去一样，经过长时间的酝酿，甚至在意料之外的背景中浮现出重要性。作为科学进步的守护者，我们面临的问题是如何识别具有潜力的非流行思想，以及如何支持它们。</p>
</section>
<section id="怪兽与教益" class="level2">
<h2 class="anchored" data-anchor-id="怪兽与教益">怪兽与教益</h2>
<p>首先，我们可以环顾数学领域，看看是否能够识别出可能在 21 世纪成为物理学基本构件的非流行思想。如果幸运的话，我们可能会发现一些未来的优秀候选者。当然，我们在有生之年可能无法知道自己是否选择正确。</p>
<p>大致来说，非流行数学指的是那些被布尔巴基学派的权威视为非数学的部分。有一些非常美丽的数学发现属于这一类。根据布尔巴基的观点，要称之为数学，一个思想应具有普遍性、抽象性、连贯性，并与数学的其他部分通过清晰的逻辑关系相连。不属于数学的东西包括特定的事实、具体的对象，这些对象没有明显原因存在，可以说是偶然或零散的。非流行数学主要关注那些偶然的美，如特殊函数、特定的数域、例外代数、散在有限群。我建议你们在这些未组织和未受约束的数学领域中寻找下一次物理学革命的可能性。它们具有一种奇特、意外的特质，不容易融入布尔巴基的平滑逻辑结构中。正因为如此，我们应当珍惜并培养它们，记住弗朗西斯·培根的那句话，我们的院长哈里·伍尔夫在两年前的爱因斯坦百年纪念会上引用过：“没有哪一种绝佳的美在比例上没有一些奇怪之处”。</p>
<p>为了展示这种在比例上奇特的例子，我将简要谈谈散在有限群。它们的历史始于法国数学家埃米尔·马蒂厄（Émile Mathieu），他分别在 1861 年和 1873 年发现了第一和第二个散在群。马蒂厄，像此类发现的通常情况一样，并不知道他发明了散在群。事实上，“群”这个词甚至没有出现在他的论文标题中。但他清楚地知道自己发现了某种美丽且重要的东西。用几何语言来说，他发现了在 12 维和 24 维空间中存在一种特殊的对称性，这种对称性在其他维度的空间中不会出现。他的工作发表了出来，但在接下来的 100 年中依然不受欢迎，正如正统数学家喜欢说的那样，是一个“孤立的珍奇”，没有任何后续发展。</p>
<p>大约 75 年后，马蒂厄群在编码设计中显示出某种实用重要性。每一个马蒂厄群都构成了一个独特高效的纠错码的基础。然而，这种世俗的实用性并未提升马蒂厄群在那些由布尔巴基培养的数学家眼中的地位。</p>
<p>随后在过去的 20 年中，一批新的壮丽的散在群被不同的数学家通过各种方法发现了。其中一些数学家沿用了马蒂厄的思想，另一些则研究了 24 维空间中如何尽可能紧密地填充台球，还有一些人通过大计算机进行排列组合的测试来发现这些群。</p>
<p>这些发现的唯一共同点就是它们都具有具体、经验性、试验性、偶然的特征，完全与布尔巴基学派的精神相悖。总共发现了 25 个散在群，包括马蒂厄群在内。同时，使用更普遍和抽象方法的专业群论学者们成功地证明了散在群的总数不可能超过 26 个。因此，到了两年前，只有一个散在群尚未被发现。我们知道，如果这个群存在，它将是所有群中最大且最美的。追踪这个群的数学家们称其为“怪兽”或“友善的巨人”。</p>
<p>故事的结尾发生在去年，当时来自密歇根大学的鲍勃·格里斯（Bob Griess）在高等研究院访问期间，成功构造了“怪兽群”。昨天，我刚刚从密歇根收到了一份长篇论文的最终部分，详细记录了他的工作。怪兽群现在以其所有的光辉展现在那些愿意深入理解鲍勃·格里斯构造细节的人们面前。作为最后且最伟大的散在群，它将永远屹立不倒，犹如比青铜更持久的纪念碑。</p>
<p>这与物理学有什么关系呢？可能完全没有关系。可能散在群仅仅是数学史中的一段愉快的插曲，是一段远离主流进展的小故事。我们从未见过任何迹象表明物理宇宙的对称性与散在群的对称性有任何关联。就我们所知，物理宇宙的样子和功能，不会因散在群的存在或不存在而有所不同。但我们不应过于确信没有关联。证据的缺失并不等同于缺失的证据。在物理学史上，发生过比散在群意外出现更令人惊讶的事情。我们应当始终做好迎接意外的准备。我必须坦白地说，我心中怀有一个微弱的希望——这个希望并没有任何事实或证据支持——希望在 21 世纪的某个时刻，物理学家们会发现怪兽群以某种未被察觉的方式嵌入了宇宙结构中。当然，这只是一个天马行空的猜测，几乎肯定是错误的。我唯一能为此提供的理由是神学上的。我们有充分的证据表明，宇宙的创造者热爱对称性，而如果他热爱对称性，还有什么比怪兽群的对称性更美丽的呢？</p>
<p>散在群只是非流行数学宝库中奇妙且精彩概念的一个例子。我还可以提到其他许多例子。你能想象一个正多面体，即由完美对称的面以完美对称的结构组成的立体，其总共有11个面吗？去年，我的朋友唐纳德·考克斯特（Donald Coxeter）在多伦多发现了它。是否可能 zeta 函数的零点——其性质由黎曼 120 年前提出了猜想，至今仍然是数学的核心奥秘之一——会与物理世界有隐藏的关联？去年，贝尔实验室的数学家安德鲁·奥德利兹科（Andrew Odlyzko）使用一台 Cray 计算机，发现了 zeta 函数零点的一些新奇且意想不到的性质。是否可能库尔特·哥德尔的不完全性定理，证明了在任何给定的有限公理集和推理规则下，存在一些纯数学问题无法回答，未来能让我们更深入地理解物理宇宙知识的局限？无论你在思想的哪个领域观察，总会发现尚未揭示的启示暗示了即将到来的奥秘，隐藏的关联悄然低语。</p>
<p>但现在我的时间快到了，我必须兑现给大家一些关于科学支持的实际建议的承诺。我想对高等研究院和洪堡基金会说，作为独立机构，我们有义务也有特权，比政府的目光更为长远。我们的角色应当是以比政治家或博士后所能承担的更长远的视角来看待科学。这些故事告诉了我们什么教训？教训很简单。我们应当给予非流行研究更多的关注和支持。在科学史的任何一个特定时刻，最重要和最富有成果的思想往往因为不流行而处于休眠状态。尤其是在数学物理中，一个新思想的诞生到其融入科学主流之间通常会有 50 至 100 年的滞后期。如果这是根本性进步的时间尺度，那么可以推断，任何进行数学物理学基础工作的研究几乎注定是非流行的。</p>
<p>当然，我们不应停止支持那些让大多数年轻科学家忙碌且快乐的流行研究。但是我们应该拿出一部分资源——或许是十分之一，也或许是四分之一——来支持那些做非流行研究的人。我们不应害怕显得愚蠢甚至疯狂。我们不应害怕支持那些可能完全失败的冒险项目。既然我们是独立的机构，我们有权承担风险和犯错。那些只支持零风险、无错研究的组织最终只能支持平庸。如果我们能够以智慧和勇气支持那些正统观点认为无关紧要甚至疯狂的非流行人士，或许我们将为科学救出一位偶然的索菲斯·李或赫尔曼·格拉斯曼，他们的思想会在我们当代所有的流行兴奋点被遗忘很久之后，依然名扬四海。</p>


</section>

 ]]></description>
  <category>journal</category>
  <category>academic</category>
  <category>note</category>
  <guid>https://shixiangwang.github.io/posts/2024-11-22-unfashionable-pursuits/</guid>
  <pubDate>Thu, 21 Nov 2024 16:00:00 GMT</pubDate>
</item>
</channel>
</rss>
